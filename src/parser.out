Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    GE
    GT
    LE

Grammar

Rule 0     S' -> prog
Rule 1     prog -> CLASS ID extends LBRACE PUBLIC main RBRACE multiclass
Rule 2     multiclass -> multiclass classe
Rule 3     multiclass -> <empty>
Rule 4     main -> STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE
Rule 5     classe -> CLASS ID extends LBRACE variaveis metodos RBRACE
Rule 6     extends -> EXTENDS ID
Rule 7     extends -> <empty>
Rule 8     variaveis -> variaveis var
Rule 9     variaveis -> <empty>
Rule 10    metodos -> metodos metodo
Rule 11    metodos -> <empty>
Rule 12    var -> tipo ID SEMI
Rule 13    metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE
Rule 14    paramsopcional -> params
Rule 15    paramsopcional -> <empty>
Rule 16    cmds -> cmds cmd
Rule 17    cmds -> <empty>
Rule 18    params -> tipo ID listaparamsextra
Rule 19    listaparamsextra -> listaparamsextra COMMA tipo ID
Rule 20    listaparamsextra -> <empty>
Rule 21    tipo -> INT LBRACK RBRACK
Rule 22    tipo -> BOOL
Rule 23    tipo -> INT
Rule 24    tipo -> ID
Rule 25    cmd -> condstmt
Rule 26    cmd -> otherstmt
Rule 27    otherstmt -> LBRACE cmds RBRACE
Rule 28    otherstmt -> WHILE LPAREN exp RPAREN cmd
Rule 29    otherstmt -> SOUTPL LPAREN exp RPAREN SEMI
Rule 30    otherstmt -> ID ASSIGN exp SEMI
Rule 31    otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI
Rule 32    condstmt -> IF LPAREN exp RPAREN cmd matchornot
Rule 33    matchornot -> ELSE cmd
Rule 34    matchornot -> <empty>
Rule 35    exp -> exp LAND rexp
Rule 36    exp -> exp LOR rexp
Rule 37    exp -> rexp
Rule 38    rexp -> rexp LT aexp
Rule 39    rexp -> rexp EQ aexp
Rule 40    rexp -> rexp NE aexp
Rule 41    rexp -> aexp
Rule 42    aexp -> aexp PLUS mexp
Rule 43    aexp -> aexp MINUS mexp
Rule 44    aexp -> mexp
Rule 45    mexp -> mexp TIMES sexp
Rule 46    mexp -> mexp DIVIDE sexp
Rule 47    mexp -> sexp
Rule 48    sexp -> LNOT sexp
Rule 49    sexp -> MINUS sexp
Rule 50    sexp -> TRUE
Rule 51    sexp -> FALSE
Rule 52    sexp -> NUMBER
Rule 53    sexp -> NULL
Rule 54    sexp -> NEW INT LBRACK exp RBRACK
Rule 55    sexp -> pexp POINT LENGTH
Rule 56    sexp -> pexp LBRACK exp RBRACK
Rule 57    sexp -> pexp
Rule 58    pexp -> ID
Rule 59    pexp -> THIS
Rule 60    pexp -> NEW ID LPAREN RPAREN
Rule 61    pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN
Rule 62    pexp -> pexp POINT ID LPAREN RPAREN
Rule 63    pexp -> pexp POINT ID
Rule 64    expopcionalmetodo -> exps
Rule 65    exps -> exp expslist
Rule 66    expslist -> expslist COMMA exp
Rule 67    expslist -> <empty>

Terminals, with rules where they appear

ASSIGN               : 30 31
BOOL                 : 22
CLASS                : 1 5
COLON                : 
COMMA                : 19 66
DIVIDE               : 46
ELSE                 : 33
EQ                   : 39
EXTENDS              : 6
FALSE                : 51
GE                   : 
GT                   : 
ID                   : 1 4 5 6 12 13 18 19 24 30 31 58 60 61 62 63
IF                   : 32
INT                  : 21 23 54
LAND                 : 35
LBRACE               : 1 4 5 13 27
LBRACK               : 4 21 31 54 56
LE                   : 
LENGTH               : 55
LNOT                 : 48
LOR                  : 36
LPAREN               : 4 13 28 29 32 60 61 62
LT                   : 38
MAIN                 : 4
MINUS                : 43 49
NE                   : 40
NEW                  : 54 60
NULL                 : 53
NUMBER               : 52
PLUS                 : 42
POINT                : 55 61 62 63
PUBLIC               : 1 13
RBRACE               : 1 4 5 13 27
RBRACK               : 4 21 31 54 56
RETURN               : 13
RPAREN               : 4 13 28 29 32 60 61 62
SEMI                 : 12 13 29 30 31
SOUTPL               : 29
STATIC               : 4
STRING               : 4
THIS                 : 59
TIMES                : 45
TRUE                 : 50
VOID                 : 4
WHILE                : 28
error                : 

Nonterminals, with rules where they appear

aexp                 : 38 39 40 41 42 43
classe               : 2
cmd                  : 16 28 32 33
cmds                 : 4 13 16 27
condstmt             : 25
exp                  : 13 28 29 30 31 31 32 35 36 54 56 65 66
expopcionalmetodo    : 61
exps                 : 64
expslist             : 65 66
extends              : 1 5
listaparamsextra     : 18 19
main                 : 1
matchornot           : 32
metodo               : 10
metodos              : 5 10
mexp                 : 42 43 44 45 46
multiclass           : 1 2
otherstmt            : 26
params               : 14
paramsopcional       : 13
pexp                 : 55 56 57 61 62 63
prog                 : 0
rexp                 : 35 36 37 38 39 40
sexp                 : 45 46 47 48 49
tipo                 : 12 13 18 19
var                  : 8
variaveis            : 5 8 13

Parsing method: SLR

state 0

    (0) S' -> . prog
    (1) prog -> . CLASS ID extends LBRACE PUBLIC main RBRACE multiclass

    CLASS           shift and go to state 2

    prog                           shift and go to state 1

state 1

    (0) S' -> prog .



state 2

    (1) prog -> CLASS . ID extends LBRACE PUBLIC main RBRACE multiclass

    ID              shift and go to state 3


state 3

    (1) prog -> CLASS ID . extends LBRACE PUBLIC main RBRACE multiclass
    (6) extends -> . EXTENDS ID
    (7) extends -> .

    EXTENDS         shift and go to state 5
    LBRACE          reduce using rule 7 (extends -> .)

    extends                        shift and go to state 4

state 4

    (1) prog -> CLASS ID extends . LBRACE PUBLIC main RBRACE multiclass

    LBRACE          shift and go to state 6


state 5

    (6) extends -> EXTENDS . ID

    ID              shift and go to state 7


state 6

    (1) prog -> CLASS ID extends LBRACE . PUBLIC main RBRACE multiclass

    PUBLIC          shift and go to state 8


state 7

    (6) extends -> EXTENDS ID .

    LBRACE          reduce using rule 6 (extends -> EXTENDS ID .)


state 8

    (1) prog -> CLASS ID extends LBRACE PUBLIC . main RBRACE multiclass
    (4) main -> . STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE

    STATIC          shift and go to state 10

    main                           shift and go to state 9

state 9

    (1) prog -> CLASS ID extends LBRACE PUBLIC main . RBRACE multiclass

    RBRACE          shift and go to state 11


state 10

    (4) main -> STATIC . VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE

    VOID            shift and go to state 12


state 11

    (1) prog -> CLASS ID extends LBRACE PUBLIC main RBRACE . multiclass
    (2) multiclass -> . multiclass classe
    (3) multiclass -> .

    $end            reduce using rule 3 (multiclass -> .)
    CLASS           reduce using rule 3 (multiclass -> .)

    multiclass                     shift and go to state 13

state 12

    (4) main -> STATIC VOID . MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE

    MAIN            shift and go to state 14


state 13

    (1) prog -> CLASS ID extends LBRACE PUBLIC main RBRACE multiclass .
    (2) multiclass -> multiclass . classe
    (5) classe -> . CLASS ID extends LBRACE variaveis metodos RBRACE

    $end            reduce using rule 1 (prog -> CLASS ID extends LBRACE PUBLIC main RBRACE multiclass .)
    CLASS           shift and go to state 15

    classe                         shift and go to state 16

state 14

    (4) main -> STATIC VOID MAIN . LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE

    LPAREN          shift and go to state 17


state 15

    (5) classe -> CLASS . ID extends LBRACE variaveis metodos RBRACE

    ID              shift and go to state 18


state 16

    (2) multiclass -> multiclass classe .

    $end            reduce using rule 2 (multiclass -> multiclass classe .)
    CLASS           reduce using rule 2 (multiclass -> multiclass classe .)


state 17

    (4) main -> STATIC VOID MAIN LPAREN . STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE

    STRING          shift and go to state 19


state 18

    (5) classe -> CLASS ID . extends LBRACE variaveis metodos RBRACE
    (6) extends -> . EXTENDS ID
    (7) extends -> .

    EXTENDS         shift and go to state 5
    LBRACE          reduce using rule 7 (extends -> .)

    extends                        shift and go to state 20

state 19

    (4) main -> STATIC VOID MAIN LPAREN STRING . LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE

    LBRACK          shift and go to state 21


state 20

    (5) classe -> CLASS ID extends . LBRACE variaveis metodos RBRACE

    LBRACE          shift and go to state 22


state 21

    (4) main -> STATIC VOID MAIN LPAREN STRING LBRACK . RBRACK ID RPAREN LBRACE cmds RBRACE

    RBRACK          shift and go to state 23


state 22

    (5) classe -> CLASS ID extends LBRACE . variaveis metodos RBRACE
    (8) variaveis -> . variaveis var
    (9) variaveis -> .

    PUBLIC          reduce using rule 9 (variaveis -> .)
    RBRACE          reduce using rule 9 (variaveis -> .)
    INT             reduce using rule 9 (variaveis -> .)
    BOOL            reduce using rule 9 (variaveis -> .)
    ID              reduce using rule 9 (variaveis -> .)
    IF              reduce using rule 9 (variaveis -> .)
    LBRACE          reduce using rule 9 (variaveis -> .)
    WHILE           reduce using rule 9 (variaveis -> .)
    SOUTPL          reduce using rule 9 (variaveis -> .)
    RETURN          reduce using rule 9 (variaveis -> .)

    variaveis                      shift and go to state 24

state 23

    (4) main -> STATIC VOID MAIN LPAREN STRING LBRACK RBRACK . ID RPAREN LBRACE cmds RBRACE

    ID              shift and go to state 25


state 24

    (5) classe -> CLASS ID extends LBRACE variaveis . metodos RBRACE
    (8) variaveis -> variaveis . var
    (10) metodos -> . metodos metodo
    (11) metodos -> .
    (12) var -> . tipo ID SEMI
    (21) tipo -> . INT LBRACK RBRACK
    (22) tipo -> . BOOL
    (23) tipo -> . INT
    (24) tipo -> . ID

    RBRACE          reduce using rule 11 (metodos -> .)
    PUBLIC          reduce using rule 11 (metodos -> .)
    INT             shift and go to state 30
    BOOL            shift and go to state 31
    ID              shift and go to state 26

    metodos                        shift and go to state 27
    var                            shift and go to state 28
    tipo                           shift and go to state 29

state 25

    (4) main -> STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID . RPAREN LBRACE cmds RBRACE

    RPAREN          shift and go to state 32


state 26

    (24) tipo -> ID .

    ID              reduce using rule 24 (tipo -> ID .)


state 27

    (5) classe -> CLASS ID extends LBRACE variaveis metodos . RBRACE
    (10) metodos -> metodos . metodo
    (13) metodo -> . PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE

    RBRACE          shift and go to state 33
    PUBLIC          shift and go to state 35

    metodo                         shift and go to state 34

state 28

    (8) variaveis -> variaveis var .

    PUBLIC          reduce using rule 8 (variaveis -> variaveis var .)
    RBRACE          reduce using rule 8 (variaveis -> variaveis var .)
    INT             reduce using rule 8 (variaveis -> variaveis var .)
    BOOL            reduce using rule 8 (variaveis -> variaveis var .)
    ID              reduce using rule 8 (variaveis -> variaveis var .)
    IF              reduce using rule 8 (variaveis -> variaveis var .)
    LBRACE          reduce using rule 8 (variaveis -> variaveis var .)
    WHILE           reduce using rule 8 (variaveis -> variaveis var .)
    SOUTPL          reduce using rule 8 (variaveis -> variaveis var .)
    RETURN          reduce using rule 8 (variaveis -> variaveis var .)


state 29

    (12) var -> tipo . ID SEMI

    ID              shift and go to state 36


state 30

    (21) tipo -> INT . LBRACK RBRACK
    (23) tipo -> INT .

    LBRACK          shift and go to state 37
    ID              reduce using rule 23 (tipo -> INT .)


state 31

    (22) tipo -> BOOL .

    ID              reduce using rule 22 (tipo -> BOOL .)


state 32

    (4) main -> STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN . LBRACE cmds RBRACE

    LBRACE          shift and go to state 38


state 33

    (5) classe -> CLASS ID extends LBRACE variaveis metodos RBRACE .

    $end            reduce using rule 5 (classe -> CLASS ID extends LBRACE variaveis metodos RBRACE .)
    CLASS           reduce using rule 5 (classe -> CLASS ID extends LBRACE variaveis metodos RBRACE .)


state 34

    (10) metodos -> metodos metodo .

    RBRACE          reduce using rule 10 (metodos -> metodos metodo .)
    PUBLIC          reduce using rule 10 (metodos -> metodos metodo .)


state 35

    (13) metodo -> PUBLIC . tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE
    (21) tipo -> . INT LBRACK RBRACK
    (22) tipo -> . BOOL
    (23) tipo -> . INT
    (24) tipo -> . ID

    INT             shift and go to state 30
    BOOL            shift and go to state 31
    ID              shift and go to state 26

    tipo                           shift and go to state 39

state 36

    (12) var -> tipo ID . SEMI

    SEMI            shift and go to state 40


state 37

    (21) tipo -> INT LBRACK . RBRACK

    RBRACK          shift and go to state 41


state 38

    (4) main -> STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE . cmds RBRACE
    (16) cmds -> . cmds cmd
    (17) cmds -> .

    RBRACE          reduce using rule 17 (cmds -> .)
    RETURN          reduce using rule 17 (cmds -> .)
    IF              reduce using rule 17 (cmds -> .)
    LBRACE          reduce using rule 17 (cmds -> .)
    WHILE           reduce using rule 17 (cmds -> .)
    SOUTPL          reduce using rule 17 (cmds -> .)
    ID              reduce using rule 17 (cmds -> .)

    cmds                           shift and go to state 42

state 39

    (13) metodo -> PUBLIC tipo . ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE

    ID              shift and go to state 43


state 40

    (12) var -> tipo ID SEMI .

    PUBLIC          reduce using rule 12 (var -> tipo ID SEMI .)
    RBRACE          reduce using rule 12 (var -> tipo ID SEMI .)
    INT             reduce using rule 12 (var -> tipo ID SEMI .)
    BOOL            reduce using rule 12 (var -> tipo ID SEMI .)
    ID              reduce using rule 12 (var -> tipo ID SEMI .)
    IF              reduce using rule 12 (var -> tipo ID SEMI .)
    LBRACE          reduce using rule 12 (var -> tipo ID SEMI .)
    WHILE           reduce using rule 12 (var -> tipo ID SEMI .)
    SOUTPL          reduce using rule 12 (var -> tipo ID SEMI .)
    RETURN          reduce using rule 12 (var -> tipo ID SEMI .)


state 41

    (21) tipo -> INT LBRACK RBRACK .

    ID              reduce using rule 21 (tipo -> INT LBRACK RBRACK .)


state 42

    (4) main -> STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds . RBRACE
    (16) cmds -> cmds . cmd
    (25) cmd -> . condstmt
    (26) cmd -> . otherstmt
    (32) condstmt -> . IF LPAREN exp RPAREN cmd matchornot
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    RBRACE          shift and go to state 46
    IF              shift and go to state 50
    LBRACE          shift and go to state 45
    WHILE           shift and go to state 51
    SOUTPL          shift and go to state 52
    ID              shift and go to state 44

    cmd                            shift and go to state 47
    condstmt                       shift and go to state 48
    otherstmt                      shift and go to state 49

state 43

    (13) metodo -> PUBLIC tipo ID . LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE

    LPAREN          shift and go to state 53


state 44

    (30) otherstmt -> ID . ASSIGN exp SEMI
    (31) otherstmt -> ID . LBRACK exp RBRACK ASSIGN exp SEMI

    ASSIGN          shift and go to state 54
    LBRACK          shift and go to state 55


state 45

    (27) otherstmt -> LBRACE . cmds RBRACE
    (16) cmds -> . cmds cmd
    (17) cmds -> .

    RBRACE          reduce using rule 17 (cmds -> .)
    RETURN          reduce using rule 17 (cmds -> .)
    IF              reduce using rule 17 (cmds -> .)
    LBRACE          reduce using rule 17 (cmds -> .)
    WHILE           reduce using rule 17 (cmds -> .)
    SOUTPL          reduce using rule 17 (cmds -> .)
    ID              reduce using rule 17 (cmds -> .)

    cmds                           shift and go to state 56

state 46

    (4) main -> STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE .

    RBRACE          reduce using rule 4 (main -> STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE .)


state 47

    (16) cmds -> cmds cmd .

    RBRACE          reduce using rule 16 (cmds -> cmds cmd .)
    RETURN          reduce using rule 16 (cmds -> cmds cmd .)
    IF              reduce using rule 16 (cmds -> cmds cmd .)
    LBRACE          reduce using rule 16 (cmds -> cmds cmd .)
    WHILE           reduce using rule 16 (cmds -> cmds cmd .)
    SOUTPL          reduce using rule 16 (cmds -> cmds cmd .)
    ID              reduce using rule 16 (cmds -> cmds cmd .)


state 48

    (25) cmd -> condstmt .

    RBRACE          reduce using rule 25 (cmd -> condstmt .)
    RETURN          reduce using rule 25 (cmd -> condstmt .)
    IF              reduce using rule 25 (cmd -> condstmt .)
    LBRACE          reduce using rule 25 (cmd -> condstmt .)
    WHILE           reduce using rule 25 (cmd -> condstmt .)
    SOUTPL          reduce using rule 25 (cmd -> condstmt .)
    ID              reduce using rule 25 (cmd -> condstmt .)
    ELSE            reduce using rule 25 (cmd -> condstmt .)


state 49

    (26) cmd -> otherstmt .

    RBRACE          reduce using rule 26 (cmd -> otherstmt .)
    RETURN          reduce using rule 26 (cmd -> otherstmt .)
    IF              reduce using rule 26 (cmd -> otherstmt .)
    LBRACE          reduce using rule 26 (cmd -> otherstmt .)
    WHILE           reduce using rule 26 (cmd -> otherstmt .)
    SOUTPL          reduce using rule 26 (cmd -> otherstmt .)
    ID              reduce using rule 26 (cmd -> otherstmt .)
    ELSE            reduce using rule 26 (cmd -> otherstmt .)


state 50

    (32) condstmt -> IF . LPAREN exp RPAREN cmd matchornot

    LPAREN          shift and go to state 57


state 51

    (28) otherstmt -> WHILE . LPAREN exp RPAREN cmd

    LPAREN          shift and go to state 58


state 52

    (29) otherstmt -> SOUTPL . LPAREN exp RPAREN SEMI

    LPAREN          shift and go to state 59


state 53

    (13) metodo -> PUBLIC tipo ID LPAREN . paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE
    (14) paramsopcional -> . params
    (15) paramsopcional -> .
    (18) params -> . tipo ID listaparamsextra
    (21) tipo -> . INT LBRACK RBRACK
    (22) tipo -> . BOOL
    (23) tipo -> . INT
    (24) tipo -> . ID

    RPAREN          reduce using rule 15 (paramsopcional -> .)
    INT             shift and go to state 30
    BOOL            shift and go to state 31
    ID              shift and go to state 26

    tipo                           shift and go to state 60
    paramsopcional                 shift and go to state 61
    params                         shift and go to state 62

state 54

    (30) otherstmt -> ID ASSIGN . exp SEMI
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    exp                            shift and go to state 64
    rexp                           shift and go to state 65
    aexp                           shift and go to state 66
    mexp                           shift and go to state 67
    sexp                           shift and go to state 69
    pexp                           shift and go to state 76

state 55

    (31) otherstmt -> ID LBRACK . exp RBRACK ASSIGN exp SEMI
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    exp                            shift and go to state 78
    rexp                           shift and go to state 65
    aexp                           shift and go to state 66
    mexp                           shift and go to state 67
    sexp                           shift and go to state 69
    pexp                           shift and go to state 76

state 56

    (27) otherstmt -> LBRACE cmds . RBRACE
    (16) cmds -> cmds . cmd
    (25) cmd -> . condstmt
    (26) cmd -> . otherstmt
    (32) condstmt -> . IF LPAREN exp RPAREN cmd matchornot
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    RBRACE          shift and go to state 79
    IF              shift and go to state 50
    LBRACE          shift and go to state 45
    WHILE           shift and go to state 51
    SOUTPL          shift and go to state 52
    ID              shift and go to state 44

    cmd                            shift and go to state 47
    condstmt                       shift and go to state 48
    otherstmt                      shift and go to state 49

state 57

    (32) condstmt -> IF LPAREN . exp RPAREN cmd matchornot
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    exp                            shift and go to state 80
    rexp                           shift and go to state 65
    aexp                           shift and go to state 66
    mexp                           shift and go to state 67
    sexp                           shift and go to state 69
    pexp                           shift and go to state 76

state 58

    (28) otherstmt -> WHILE LPAREN . exp RPAREN cmd
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    exp                            shift and go to state 81
    rexp                           shift and go to state 65
    aexp                           shift and go to state 66
    mexp                           shift and go to state 67
    sexp                           shift and go to state 69
    pexp                           shift and go to state 76

state 59

    (29) otherstmt -> SOUTPL LPAREN . exp RPAREN SEMI
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    exp                            shift and go to state 82
    rexp                           shift and go to state 65
    aexp                           shift and go to state 66
    mexp                           shift and go to state 67
    sexp                           shift and go to state 69
    pexp                           shift and go to state 76

state 60

    (18) params -> tipo . ID listaparamsextra

    ID              shift and go to state 83


state 61

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional . RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE

    RPAREN          shift and go to state 84


state 62

    (14) paramsopcional -> params .

    RPAREN          reduce using rule 14 (paramsopcional -> params .)


state 63

    (58) pexp -> ID .

    POINT           reduce using rule 58 (pexp -> ID .)
    LBRACK          reduce using rule 58 (pexp -> ID .)
    SEMI            reduce using rule 58 (pexp -> ID .)
    RPAREN          reduce using rule 58 (pexp -> ID .)
    RBRACK          reduce using rule 58 (pexp -> ID .)
    LAND            reduce using rule 58 (pexp -> ID .)
    LOR             reduce using rule 58 (pexp -> ID .)
    LT              reduce using rule 58 (pexp -> ID .)
    EQ              reduce using rule 58 (pexp -> ID .)
    NE              reduce using rule 58 (pexp -> ID .)
    PLUS            reduce using rule 58 (pexp -> ID .)
    MINUS           reduce using rule 58 (pexp -> ID .)
    TIMES           reduce using rule 58 (pexp -> ID .)
    DIVIDE          reduce using rule 58 (pexp -> ID .)
    COMMA           reduce using rule 58 (pexp -> ID .)


state 64

    (30) otherstmt -> ID ASSIGN exp . SEMI
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    SEMI            shift and go to state 85
    LAND            shift and go to state 86
    LOR             shift and go to state 87


state 65

    (37) exp -> rexp .
    (38) rexp -> rexp . LT aexp
    (39) rexp -> rexp . EQ aexp
    (40) rexp -> rexp . NE aexp

    SEMI            reduce using rule 37 (exp -> rexp .)
    RPAREN          reduce using rule 37 (exp -> rexp .)
    RBRACK          reduce using rule 37 (exp -> rexp .)
    LAND            reduce using rule 37 (exp -> rexp .)
    LOR             reduce using rule 37 (exp -> rexp .)
    COMMA           reduce using rule 37 (exp -> rexp .)
    LT              shift and go to state 88
    EQ              shift and go to state 89
    NE              shift and go to state 90


state 66

    (41) rexp -> aexp .
    (42) aexp -> aexp . PLUS mexp
    (43) aexp -> aexp . MINUS mexp

    SEMI            reduce using rule 41 (rexp -> aexp .)
    RPAREN          reduce using rule 41 (rexp -> aexp .)
    RBRACK          reduce using rule 41 (rexp -> aexp .)
    LAND            reduce using rule 41 (rexp -> aexp .)
    LOR             reduce using rule 41 (rexp -> aexp .)
    LT              reduce using rule 41 (rexp -> aexp .)
    EQ              reduce using rule 41 (rexp -> aexp .)
    NE              reduce using rule 41 (rexp -> aexp .)
    COMMA           reduce using rule 41 (rexp -> aexp .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92


state 67

    (44) aexp -> mexp .
    (45) mexp -> mexp . TIMES sexp
    (46) mexp -> mexp . DIVIDE sexp

    SEMI            reduce using rule 44 (aexp -> mexp .)
    RPAREN          reduce using rule 44 (aexp -> mexp .)
    RBRACK          reduce using rule 44 (aexp -> mexp .)
    LAND            reduce using rule 44 (aexp -> mexp .)
    LOR             reduce using rule 44 (aexp -> mexp .)
    LT              reduce using rule 44 (aexp -> mexp .)
    EQ              reduce using rule 44 (aexp -> mexp .)
    NE              reduce using rule 44 (aexp -> mexp .)
    PLUS            reduce using rule 44 (aexp -> mexp .)
    MINUS           reduce using rule 44 (aexp -> mexp .)
    COMMA           reduce using rule 44 (aexp -> mexp .)
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 94


state 68

    (49) sexp -> MINUS . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    sexp                           shift and go to state 95
    pexp                           shift and go to state 76

state 69

    (47) mexp -> sexp .

    SEMI            reduce using rule 47 (mexp -> sexp .)
    RPAREN          reduce using rule 47 (mexp -> sexp .)
    RBRACK          reduce using rule 47 (mexp -> sexp .)
    LAND            reduce using rule 47 (mexp -> sexp .)
    LOR             reduce using rule 47 (mexp -> sexp .)
    LT              reduce using rule 47 (mexp -> sexp .)
    EQ              reduce using rule 47 (mexp -> sexp .)
    NE              reduce using rule 47 (mexp -> sexp .)
    PLUS            reduce using rule 47 (mexp -> sexp .)
    MINUS           reduce using rule 47 (mexp -> sexp .)
    TIMES           reduce using rule 47 (mexp -> sexp .)
    DIVIDE          reduce using rule 47 (mexp -> sexp .)
    COMMA           reduce using rule 47 (mexp -> sexp .)


state 70

    (48) sexp -> LNOT . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    sexp                           shift and go to state 96
    pexp                           shift and go to state 76

state 71

    (50) sexp -> TRUE .

    SEMI            reduce using rule 50 (sexp -> TRUE .)
    RPAREN          reduce using rule 50 (sexp -> TRUE .)
    RBRACK          reduce using rule 50 (sexp -> TRUE .)
    LAND            reduce using rule 50 (sexp -> TRUE .)
    LOR             reduce using rule 50 (sexp -> TRUE .)
    LT              reduce using rule 50 (sexp -> TRUE .)
    EQ              reduce using rule 50 (sexp -> TRUE .)
    NE              reduce using rule 50 (sexp -> TRUE .)
    PLUS            reduce using rule 50 (sexp -> TRUE .)
    MINUS           reduce using rule 50 (sexp -> TRUE .)
    TIMES           reduce using rule 50 (sexp -> TRUE .)
    DIVIDE          reduce using rule 50 (sexp -> TRUE .)
    COMMA           reduce using rule 50 (sexp -> TRUE .)


state 72

    (51) sexp -> FALSE .

    SEMI            reduce using rule 51 (sexp -> FALSE .)
    RPAREN          reduce using rule 51 (sexp -> FALSE .)
    RBRACK          reduce using rule 51 (sexp -> FALSE .)
    LAND            reduce using rule 51 (sexp -> FALSE .)
    LOR             reduce using rule 51 (sexp -> FALSE .)
    LT              reduce using rule 51 (sexp -> FALSE .)
    EQ              reduce using rule 51 (sexp -> FALSE .)
    NE              reduce using rule 51 (sexp -> FALSE .)
    PLUS            reduce using rule 51 (sexp -> FALSE .)
    MINUS           reduce using rule 51 (sexp -> FALSE .)
    TIMES           reduce using rule 51 (sexp -> FALSE .)
    DIVIDE          reduce using rule 51 (sexp -> FALSE .)
    COMMA           reduce using rule 51 (sexp -> FALSE .)


state 73

    (52) sexp -> NUMBER .

    SEMI            reduce using rule 52 (sexp -> NUMBER .)
    RPAREN          reduce using rule 52 (sexp -> NUMBER .)
    RBRACK          reduce using rule 52 (sexp -> NUMBER .)
    LAND            reduce using rule 52 (sexp -> NUMBER .)
    LOR             reduce using rule 52 (sexp -> NUMBER .)
    LT              reduce using rule 52 (sexp -> NUMBER .)
    EQ              reduce using rule 52 (sexp -> NUMBER .)
    NE              reduce using rule 52 (sexp -> NUMBER .)
    PLUS            reduce using rule 52 (sexp -> NUMBER .)
    MINUS           reduce using rule 52 (sexp -> NUMBER .)
    TIMES           reduce using rule 52 (sexp -> NUMBER .)
    DIVIDE          reduce using rule 52 (sexp -> NUMBER .)
    COMMA           reduce using rule 52 (sexp -> NUMBER .)


state 74

    (53) sexp -> NULL .

    SEMI            reduce using rule 53 (sexp -> NULL .)
    RPAREN          reduce using rule 53 (sexp -> NULL .)
    RBRACK          reduce using rule 53 (sexp -> NULL .)
    LAND            reduce using rule 53 (sexp -> NULL .)
    LOR             reduce using rule 53 (sexp -> NULL .)
    LT              reduce using rule 53 (sexp -> NULL .)
    EQ              reduce using rule 53 (sexp -> NULL .)
    NE              reduce using rule 53 (sexp -> NULL .)
    PLUS            reduce using rule 53 (sexp -> NULL .)
    MINUS           reduce using rule 53 (sexp -> NULL .)
    TIMES           reduce using rule 53 (sexp -> NULL .)
    DIVIDE          reduce using rule 53 (sexp -> NULL .)
    COMMA           reduce using rule 53 (sexp -> NULL .)


state 75

    (54) sexp -> NEW . INT LBRACK exp RBRACK
    (60) pexp -> NEW . ID LPAREN RPAREN

    INT             shift and go to state 97
    ID              shift and go to state 98


state 76

    (55) sexp -> pexp . POINT LENGTH
    (56) sexp -> pexp . LBRACK exp RBRACK
    (57) sexp -> pexp .
    (61) pexp -> pexp . POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> pexp . POINT ID LPAREN RPAREN
    (63) pexp -> pexp . POINT ID

    POINT           shift and go to state 99
    LBRACK          shift and go to state 100
    SEMI            reduce using rule 57 (sexp -> pexp .)
    RPAREN          reduce using rule 57 (sexp -> pexp .)
    RBRACK          reduce using rule 57 (sexp -> pexp .)
    LAND            reduce using rule 57 (sexp -> pexp .)
    LOR             reduce using rule 57 (sexp -> pexp .)
    LT              reduce using rule 57 (sexp -> pexp .)
    EQ              reduce using rule 57 (sexp -> pexp .)
    NE              reduce using rule 57 (sexp -> pexp .)
    PLUS            reduce using rule 57 (sexp -> pexp .)
    MINUS           reduce using rule 57 (sexp -> pexp .)
    TIMES           reduce using rule 57 (sexp -> pexp .)
    DIVIDE          reduce using rule 57 (sexp -> pexp .)
    COMMA           reduce using rule 57 (sexp -> pexp .)


state 77

    (59) pexp -> THIS .

    POINT           reduce using rule 59 (pexp -> THIS .)
    LBRACK          reduce using rule 59 (pexp -> THIS .)
    SEMI            reduce using rule 59 (pexp -> THIS .)
    RPAREN          reduce using rule 59 (pexp -> THIS .)
    RBRACK          reduce using rule 59 (pexp -> THIS .)
    LAND            reduce using rule 59 (pexp -> THIS .)
    LOR             reduce using rule 59 (pexp -> THIS .)
    LT              reduce using rule 59 (pexp -> THIS .)
    EQ              reduce using rule 59 (pexp -> THIS .)
    NE              reduce using rule 59 (pexp -> THIS .)
    PLUS            reduce using rule 59 (pexp -> THIS .)
    MINUS           reduce using rule 59 (pexp -> THIS .)
    TIMES           reduce using rule 59 (pexp -> THIS .)
    DIVIDE          reduce using rule 59 (pexp -> THIS .)
    COMMA           reduce using rule 59 (pexp -> THIS .)


state 78

    (31) otherstmt -> ID LBRACK exp . RBRACK ASSIGN exp SEMI
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    RBRACK          shift and go to state 101
    LAND            shift and go to state 86
    LOR             shift and go to state 87


state 79

    (27) otherstmt -> LBRACE cmds RBRACE .

    RBRACE          reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    RETURN          reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    IF              reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    LBRACE          reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    WHILE           reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    SOUTPL          reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    ID              reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    ELSE            reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)


state 80

    (32) condstmt -> IF LPAREN exp . RPAREN cmd matchornot
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    RPAREN          shift and go to state 102
    LAND            shift and go to state 86
    LOR             shift and go to state 87


state 81

    (28) otherstmt -> WHILE LPAREN exp . RPAREN cmd
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    RPAREN          shift and go to state 103
    LAND            shift and go to state 86
    LOR             shift and go to state 87


state 82

    (29) otherstmt -> SOUTPL LPAREN exp . RPAREN SEMI
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    RPAREN          shift and go to state 104
    LAND            shift and go to state 86
    LOR             shift and go to state 87


state 83

    (18) params -> tipo ID . listaparamsextra
    (19) listaparamsextra -> . listaparamsextra COMMA tipo ID
    (20) listaparamsextra -> .

    RPAREN          reduce using rule 20 (listaparamsextra -> .)
    COMMA           reduce using rule 20 (listaparamsextra -> .)

    listaparamsextra               shift and go to state 105

state 84

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN . LBRACE variaveis cmds RETURN exp SEMI RBRACE

    LBRACE          shift and go to state 106


state 85

    (30) otherstmt -> ID ASSIGN exp SEMI .

    RBRACE          reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    RETURN          reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    IF              reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    LBRACE          reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    WHILE           reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    SOUTPL          reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    ID              reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    ELSE            reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)


state 86

    (35) exp -> exp LAND . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    rexp                           shift and go to state 107
    aexp                           shift and go to state 66
    mexp                           shift and go to state 67
    sexp                           shift and go to state 69
    pexp                           shift and go to state 76

state 87

    (36) exp -> exp LOR . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    rexp                           shift and go to state 108
    aexp                           shift and go to state 66
    mexp                           shift and go to state 67
    sexp                           shift and go to state 69
    pexp                           shift and go to state 76

state 88

    (38) rexp -> rexp LT . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    aexp                           shift and go to state 109
    mexp                           shift and go to state 67
    sexp                           shift and go to state 69
    pexp                           shift and go to state 76

state 89

    (39) rexp -> rexp EQ . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    aexp                           shift and go to state 110
    mexp                           shift and go to state 67
    sexp                           shift and go to state 69
    pexp                           shift and go to state 76

state 90

    (40) rexp -> rexp NE . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    aexp                           shift and go to state 111
    mexp                           shift and go to state 67
    sexp                           shift and go to state 69
    pexp                           shift and go to state 76

state 91

    (42) aexp -> aexp PLUS . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    mexp                           shift and go to state 112
    sexp                           shift and go to state 69
    pexp                           shift and go to state 76

state 92

    (43) aexp -> aexp MINUS . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    mexp                           shift and go to state 113
    sexp                           shift and go to state 69
    pexp                           shift and go to state 76

state 93

    (45) mexp -> mexp TIMES . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    sexp                           shift and go to state 114
    pexp                           shift and go to state 76

state 94

    (46) mexp -> mexp DIVIDE . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    sexp                           shift and go to state 115
    pexp                           shift and go to state 76

state 95

    (49) sexp -> MINUS sexp .

    SEMI            reduce using rule 49 (sexp -> MINUS sexp .)
    RPAREN          reduce using rule 49 (sexp -> MINUS sexp .)
    RBRACK          reduce using rule 49 (sexp -> MINUS sexp .)
    LAND            reduce using rule 49 (sexp -> MINUS sexp .)
    LOR             reduce using rule 49 (sexp -> MINUS sexp .)
    LT              reduce using rule 49 (sexp -> MINUS sexp .)
    EQ              reduce using rule 49 (sexp -> MINUS sexp .)
    NE              reduce using rule 49 (sexp -> MINUS sexp .)
    PLUS            reduce using rule 49 (sexp -> MINUS sexp .)
    MINUS           reduce using rule 49 (sexp -> MINUS sexp .)
    TIMES           reduce using rule 49 (sexp -> MINUS sexp .)
    DIVIDE          reduce using rule 49 (sexp -> MINUS sexp .)
    COMMA           reduce using rule 49 (sexp -> MINUS sexp .)


state 96

    (48) sexp -> LNOT sexp .

    SEMI            reduce using rule 48 (sexp -> LNOT sexp .)
    RPAREN          reduce using rule 48 (sexp -> LNOT sexp .)
    RBRACK          reduce using rule 48 (sexp -> LNOT sexp .)
    LAND            reduce using rule 48 (sexp -> LNOT sexp .)
    LOR             reduce using rule 48 (sexp -> LNOT sexp .)
    LT              reduce using rule 48 (sexp -> LNOT sexp .)
    EQ              reduce using rule 48 (sexp -> LNOT sexp .)
    NE              reduce using rule 48 (sexp -> LNOT sexp .)
    PLUS            reduce using rule 48 (sexp -> LNOT sexp .)
    MINUS           reduce using rule 48 (sexp -> LNOT sexp .)
    TIMES           reduce using rule 48 (sexp -> LNOT sexp .)
    DIVIDE          reduce using rule 48 (sexp -> LNOT sexp .)
    COMMA           reduce using rule 48 (sexp -> LNOT sexp .)


state 97

    (54) sexp -> NEW INT . LBRACK exp RBRACK

    LBRACK          shift and go to state 116


state 98

    (60) pexp -> NEW ID . LPAREN RPAREN

    LPAREN          shift and go to state 117


state 99

    (55) sexp -> pexp POINT . LENGTH
    (61) pexp -> pexp POINT . ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> pexp POINT . ID LPAREN RPAREN
    (63) pexp -> pexp POINT . ID

    LENGTH          shift and go to state 118
    ID              shift and go to state 119


state 100

    (56) sexp -> pexp LBRACK . exp RBRACK
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    pexp                           shift and go to state 76
    exp                            shift and go to state 120
    rexp                           shift and go to state 65
    aexp                           shift and go to state 66
    mexp                           shift and go to state 67
    sexp                           shift and go to state 69

state 101

    (31) otherstmt -> ID LBRACK exp RBRACK . ASSIGN exp SEMI

    ASSIGN          shift and go to state 121


state 102

    (32) condstmt -> IF LPAREN exp RPAREN . cmd matchornot
    (25) cmd -> . condstmt
    (26) cmd -> . otherstmt
    (32) condstmt -> . IF LPAREN exp RPAREN cmd matchornot
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    IF              shift and go to state 50
    LBRACE          shift and go to state 45
    WHILE           shift and go to state 51
    SOUTPL          shift and go to state 52
    ID              shift and go to state 44

    cmd                            shift and go to state 122
    condstmt                       shift and go to state 48
    otherstmt                      shift and go to state 49

state 103

    (28) otherstmt -> WHILE LPAREN exp RPAREN . cmd
    (25) cmd -> . condstmt
    (26) cmd -> . otherstmt
    (32) condstmt -> . IF LPAREN exp RPAREN cmd matchornot
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    IF              shift and go to state 50
    LBRACE          shift and go to state 45
    WHILE           shift and go to state 51
    SOUTPL          shift and go to state 52
    ID              shift and go to state 44

    cmd                            shift and go to state 123
    condstmt                       shift and go to state 48
    otherstmt                      shift and go to state 49

state 104

    (29) otherstmt -> SOUTPL LPAREN exp RPAREN . SEMI

    SEMI            shift and go to state 124


state 105

    (18) params -> tipo ID listaparamsextra .
    (19) listaparamsextra -> listaparamsextra . COMMA tipo ID

    RPAREN          reduce using rule 18 (params -> tipo ID listaparamsextra .)
    COMMA           shift and go to state 125


state 106

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE . variaveis cmds RETURN exp SEMI RBRACE
    (8) variaveis -> . variaveis var
    (9) variaveis -> .

    PUBLIC          reduce using rule 9 (variaveis -> .)
    RBRACE          reduce using rule 9 (variaveis -> .)
    INT             reduce using rule 9 (variaveis -> .)
    BOOL            reduce using rule 9 (variaveis -> .)
    ID              reduce using rule 9 (variaveis -> .)
    IF              reduce using rule 9 (variaveis -> .)
    LBRACE          reduce using rule 9 (variaveis -> .)
    WHILE           reduce using rule 9 (variaveis -> .)
    SOUTPL          reduce using rule 9 (variaveis -> .)
    RETURN          reduce using rule 9 (variaveis -> .)

    variaveis                      shift and go to state 126

state 107

    (35) exp -> exp LAND rexp .
    (38) rexp -> rexp . LT aexp
    (39) rexp -> rexp . EQ aexp
    (40) rexp -> rexp . NE aexp

    SEMI            reduce using rule 35 (exp -> exp LAND rexp .)
    RPAREN          reduce using rule 35 (exp -> exp LAND rexp .)
    RBRACK          reduce using rule 35 (exp -> exp LAND rexp .)
    LAND            reduce using rule 35 (exp -> exp LAND rexp .)
    LOR             reduce using rule 35 (exp -> exp LAND rexp .)
    COMMA           reduce using rule 35 (exp -> exp LAND rexp .)
    LT              shift and go to state 88
    EQ              shift and go to state 89
    NE              shift and go to state 90


state 108

    (36) exp -> exp LOR rexp .
    (38) rexp -> rexp . LT aexp
    (39) rexp -> rexp . EQ aexp
    (40) rexp -> rexp . NE aexp

    SEMI            reduce using rule 36 (exp -> exp LOR rexp .)
    RPAREN          reduce using rule 36 (exp -> exp LOR rexp .)
    RBRACK          reduce using rule 36 (exp -> exp LOR rexp .)
    LAND            reduce using rule 36 (exp -> exp LOR rexp .)
    LOR             reduce using rule 36 (exp -> exp LOR rexp .)
    COMMA           reduce using rule 36 (exp -> exp LOR rexp .)
    LT              shift and go to state 88
    EQ              shift and go to state 89
    NE              shift and go to state 90


state 109

    (38) rexp -> rexp LT aexp .
    (42) aexp -> aexp . PLUS mexp
    (43) aexp -> aexp . MINUS mexp

    SEMI            reduce using rule 38 (rexp -> rexp LT aexp .)
    RPAREN          reduce using rule 38 (rexp -> rexp LT aexp .)
    RBRACK          reduce using rule 38 (rexp -> rexp LT aexp .)
    LAND            reduce using rule 38 (rexp -> rexp LT aexp .)
    LOR             reduce using rule 38 (rexp -> rexp LT aexp .)
    LT              reduce using rule 38 (rexp -> rexp LT aexp .)
    EQ              reduce using rule 38 (rexp -> rexp LT aexp .)
    NE              reduce using rule 38 (rexp -> rexp LT aexp .)
    COMMA           reduce using rule 38 (rexp -> rexp LT aexp .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92


state 110

    (39) rexp -> rexp EQ aexp .
    (42) aexp -> aexp . PLUS mexp
    (43) aexp -> aexp . MINUS mexp

    SEMI            reduce using rule 39 (rexp -> rexp EQ aexp .)
    RPAREN          reduce using rule 39 (rexp -> rexp EQ aexp .)
    RBRACK          reduce using rule 39 (rexp -> rexp EQ aexp .)
    LAND            reduce using rule 39 (rexp -> rexp EQ aexp .)
    LOR             reduce using rule 39 (rexp -> rexp EQ aexp .)
    LT              reduce using rule 39 (rexp -> rexp EQ aexp .)
    EQ              reduce using rule 39 (rexp -> rexp EQ aexp .)
    NE              reduce using rule 39 (rexp -> rexp EQ aexp .)
    COMMA           reduce using rule 39 (rexp -> rexp EQ aexp .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92


state 111

    (40) rexp -> rexp NE aexp .
    (42) aexp -> aexp . PLUS mexp
    (43) aexp -> aexp . MINUS mexp

    SEMI            reduce using rule 40 (rexp -> rexp NE aexp .)
    RPAREN          reduce using rule 40 (rexp -> rexp NE aexp .)
    RBRACK          reduce using rule 40 (rexp -> rexp NE aexp .)
    LAND            reduce using rule 40 (rexp -> rexp NE aexp .)
    LOR             reduce using rule 40 (rexp -> rexp NE aexp .)
    LT              reduce using rule 40 (rexp -> rexp NE aexp .)
    EQ              reduce using rule 40 (rexp -> rexp NE aexp .)
    NE              reduce using rule 40 (rexp -> rexp NE aexp .)
    COMMA           reduce using rule 40 (rexp -> rexp NE aexp .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92


state 112

    (42) aexp -> aexp PLUS mexp .
    (45) mexp -> mexp . TIMES sexp
    (46) mexp -> mexp . DIVIDE sexp

    SEMI            reduce using rule 42 (aexp -> aexp PLUS mexp .)
    RPAREN          reduce using rule 42 (aexp -> aexp PLUS mexp .)
    RBRACK          reduce using rule 42 (aexp -> aexp PLUS mexp .)
    LAND            reduce using rule 42 (aexp -> aexp PLUS mexp .)
    LOR             reduce using rule 42 (aexp -> aexp PLUS mexp .)
    LT              reduce using rule 42 (aexp -> aexp PLUS mexp .)
    EQ              reduce using rule 42 (aexp -> aexp PLUS mexp .)
    NE              reduce using rule 42 (aexp -> aexp PLUS mexp .)
    PLUS            reduce using rule 42 (aexp -> aexp PLUS mexp .)
    MINUS           reduce using rule 42 (aexp -> aexp PLUS mexp .)
    COMMA           reduce using rule 42 (aexp -> aexp PLUS mexp .)
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 94


state 113

    (43) aexp -> aexp MINUS mexp .
    (45) mexp -> mexp . TIMES sexp
    (46) mexp -> mexp . DIVIDE sexp

    SEMI            reduce using rule 43 (aexp -> aexp MINUS mexp .)
    RPAREN          reduce using rule 43 (aexp -> aexp MINUS mexp .)
    RBRACK          reduce using rule 43 (aexp -> aexp MINUS mexp .)
    LAND            reduce using rule 43 (aexp -> aexp MINUS mexp .)
    LOR             reduce using rule 43 (aexp -> aexp MINUS mexp .)
    LT              reduce using rule 43 (aexp -> aexp MINUS mexp .)
    EQ              reduce using rule 43 (aexp -> aexp MINUS mexp .)
    NE              reduce using rule 43 (aexp -> aexp MINUS mexp .)
    PLUS            reduce using rule 43 (aexp -> aexp MINUS mexp .)
    MINUS           reduce using rule 43 (aexp -> aexp MINUS mexp .)
    COMMA           reduce using rule 43 (aexp -> aexp MINUS mexp .)
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 94


state 114

    (45) mexp -> mexp TIMES sexp .

    SEMI            reduce using rule 45 (mexp -> mexp TIMES sexp .)
    RPAREN          reduce using rule 45 (mexp -> mexp TIMES sexp .)
    RBRACK          reduce using rule 45 (mexp -> mexp TIMES sexp .)
    LAND            reduce using rule 45 (mexp -> mexp TIMES sexp .)
    LOR             reduce using rule 45 (mexp -> mexp TIMES sexp .)
    LT              reduce using rule 45 (mexp -> mexp TIMES sexp .)
    EQ              reduce using rule 45 (mexp -> mexp TIMES sexp .)
    NE              reduce using rule 45 (mexp -> mexp TIMES sexp .)
    PLUS            reduce using rule 45 (mexp -> mexp TIMES sexp .)
    MINUS           reduce using rule 45 (mexp -> mexp TIMES sexp .)
    TIMES           reduce using rule 45 (mexp -> mexp TIMES sexp .)
    DIVIDE          reduce using rule 45 (mexp -> mexp TIMES sexp .)
    COMMA           reduce using rule 45 (mexp -> mexp TIMES sexp .)


state 115

    (46) mexp -> mexp DIVIDE sexp .

    SEMI            reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    RPAREN          reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    RBRACK          reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    LAND            reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    LOR             reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    LT              reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    EQ              reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    NE              reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    PLUS            reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    MINUS           reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    TIMES           reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    DIVIDE          reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    COMMA           reduce using rule 46 (mexp -> mexp DIVIDE sexp .)


state 116

    (54) sexp -> NEW INT LBRACK . exp RBRACK
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    exp                            shift and go to state 127
    rexp                           shift and go to state 65
    aexp                           shift and go to state 66
    mexp                           shift and go to state 67
    sexp                           shift and go to state 69
    pexp                           shift and go to state 76

state 117

    (60) pexp -> NEW ID LPAREN . RPAREN

    RPAREN          shift and go to state 128


state 118

    (55) sexp -> pexp POINT LENGTH .

    SEMI            reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    RPAREN          reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    RBRACK          reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    LAND            reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    LOR             reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    LT              reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    EQ              reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    NE              reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    PLUS            reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    MINUS           reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    TIMES           reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    DIVIDE          reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    COMMA           reduce using rule 55 (sexp -> pexp POINT LENGTH .)


state 119

    (61) pexp -> pexp POINT ID . LPAREN expopcionalmetodo RPAREN
    (62) pexp -> pexp POINT ID . LPAREN RPAREN
    (63) pexp -> pexp POINT ID .

    LPAREN          shift and go to state 129
    POINT           reduce using rule 63 (pexp -> pexp POINT ID .)
    LBRACK          reduce using rule 63 (pexp -> pexp POINT ID .)
    SEMI            reduce using rule 63 (pexp -> pexp POINT ID .)
    RPAREN          reduce using rule 63 (pexp -> pexp POINT ID .)
    RBRACK          reduce using rule 63 (pexp -> pexp POINT ID .)
    LAND            reduce using rule 63 (pexp -> pexp POINT ID .)
    LOR             reduce using rule 63 (pexp -> pexp POINT ID .)
    LT              reduce using rule 63 (pexp -> pexp POINT ID .)
    EQ              reduce using rule 63 (pexp -> pexp POINT ID .)
    NE              reduce using rule 63 (pexp -> pexp POINT ID .)
    PLUS            reduce using rule 63 (pexp -> pexp POINT ID .)
    MINUS           reduce using rule 63 (pexp -> pexp POINT ID .)
    TIMES           reduce using rule 63 (pexp -> pexp POINT ID .)
    DIVIDE          reduce using rule 63 (pexp -> pexp POINT ID .)
    COMMA           reduce using rule 63 (pexp -> pexp POINT ID .)


state 120

    (56) sexp -> pexp LBRACK exp . RBRACK
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    RBRACK          shift and go to state 130
    LAND            shift and go to state 86
    LOR             shift and go to state 87


state 121

    (31) otherstmt -> ID LBRACK exp RBRACK ASSIGN . exp SEMI
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    exp                            shift and go to state 131
    rexp                           shift and go to state 65
    aexp                           shift and go to state 66
    mexp                           shift and go to state 67
    sexp                           shift and go to state 69
    pexp                           shift and go to state 76

state 122

    (32) condstmt -> IF LPAREN exp RPAREN cmd . matchornot
    (33) matchornot -> . ELSE cmd
    (34) matchornot -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 133
    RBRACE          reduce using rule 34 (matchornot -> .)
    RETURN          reduce using rule 34 (matchornot -> .)
    IF              reduce using rule 34 (matchornot -> .)
    LBRACE          reduce using rule 34 (matchornot -> .)
    WHILE           reduce using rule 34 (matchornot -> .)
    SOUTPL          reduce using rule 34 (matchornot -> .)
    ID              reduce using rule 34 (matchornot -> .)

  ! ELSE            [ reduce using rule 34 (matchornot -> .) ]

    matchornot                     shift and go to state 132

state 123

    (28) otherstmt -> WHILE LPAREN exp RPAREN cmd .

    RBRACE          reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    RETURN          reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    IF              reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    LBRACE          reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    WHILE           reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    SOUTPL          reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    ID              reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    ELSE            reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)


state 124

    (29) otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .

    RBRACE          reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    RETURN          reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    IF              reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    LBRACE          reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    WHILE           reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    SOUTPL          reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    ID              reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    ELSE            reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)


state 125

    (19) listaparamsextra -> listaparamsextra COMMA . tipo ID
    (21) tipo -> . INT LBRACK RBRACK
    (22) tipo -> . BOOL
    (23) tipo -> . INT
    (24) tipo -> . ID

    INT             shift and go to state 30
    BOOL            shift and go to state 31
    ID              shift and go to state 26

    tipo                           shift and go to state 134

state 126

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis . cmds RETURN exp SEMI RBRACE
    (8) variaveis -> variaveis . var
    (16) cmds -> . cmds cmd
    (17) cmds -> .
    (12) var -> . tipo ID SEMI
    (21) tipo -> . INT LBRACK RBRACK
    (22) tipo -> . BOOL
    (23) tipo -> . INT
    (24) tipo -> . ID

  ! shift/reduce conflict for ID resolved as shift
    RBRACE          reduce using rule 17 (cmds -> .)
    RETURN          reduce using rule 17 (cmds -> .)
    IF              reduce using rule 17 (cmds -> .)
    LBRACE          reduce using rule 17 (cmds -> .)
    WHILE           reduce using rule 17 (cmds -> .)
    SOUTPL          reduce using rule 17 (cmds -> .)
    INT             shift and go to state 30
    BOOL            shift and go to state 31
    ID              shift and go to state 26

  ! ID              [ reduce using rule 17 (cmds -> .) ]

    tipo                           shift and go to state 29
    cmds                           shift and go to state 135
    var                            shift and go to state 28

state 127

    (54) sexp -> NEW INT LBRACK exp . RBRACK
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    RBRACK          shift and go to state 136
    LAND            shift and go to state 86
    LOR             shift and go to state 87


state 128

    (60) pexp -> NEW ID LPAREN RPAREN .

    POINT           reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    LBRACK          reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    SEMI            reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    RPAREN          reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    RBRACK          reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    LAND            reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    LOR             reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    LT              reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    EQ              reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    NE              reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    PLUS            reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    MINUS           reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    TIMES           reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    COMMA           reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)


state 129

    (61) pexp -> pexp POINT ID LPAREN . expopcionalmetodo RPAREN
    (62) pexp -> pexp POINT ID LPAREN . RPAREN
    (64) expopcionalmetodo -> . exps
    (65) exps -> . exp expslist
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    RPAREN          shift and go to state 138
    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    pexp                           shift and go to state 76
    expopcionalmetodo              shift and go to state 137
    exps                           shift and go to state 139
    exp                            shift and go to state 140
    rexp                           shift and go to state 65
    aexp                           shift and go to state 66
    mexp                           shift and go to state 67
    sexp                           shift and go to state 69

state 130

    (56) sexp -> pexp LBRACK exp RBRACK .

    SEMI            reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    RPAREN          reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    RBRACK          reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    LAND            reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    LOR             reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    LT              reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    EQ              reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    NE              reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    PLUS            reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    MINUS           reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    TIMES           reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    DIVIDE          reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    COMMA           reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)


state 131

    (31) otherstmt -> ID LBRACK exp RBRACK ASSIGN exp . SEMI
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    SEMI            shift and go to state 141
    LAND            shift and go to state 86
    LOR             shift and go to state 87


state 132

    (32) condstmt -> IF LPAREN exp RPAREN cmd matchornot .

    RBRACE          reduce using rule 32 (condstmt -> IF LPAREN exp RPAREN cmd matchornot .)
    RETURN          reduce using rule 32 (condstmt -> IF LPAREN exp RPAREN cmd matchornot .)
    IF              reduce using rule 32 (condstmt -> IF LPAREN exp RPAREN cmd matchornot .)
    LBRACE          reduce using rule 32 (condstmt -> IF LPAREN exp RPAREN cmd matchornot .)
    WHILE           reduce using rule 32 (condstmt -> IF LPAREN exp RPAREN cmd matchornot .)
    SOUTPL          reduce using rule 32 (condstmt -> IF LPAREN exp RPAREN cmd matchornot .)
    ID              reduce using rule 32 (condstmt -> IF LPAREN exp RPAREN cmd matchornot .)
    ELSE            reduce using rule 32 (condstmt -> IF LPAREN exp RPAREN cmd matchornot .)


state 133

    (33) matchornot -> ELSE . cmd
    (25) cmd -> . condstmt
    (26) cmd -> . otherstmt
    (32) condstmt -> . IF LPAREN exp RPAREN cmd matchornot
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    IF              shift and go to state 50
    LBRACE          shift and go to state 45
    WHILE           shift and go to state 51
    SOUTPL          shift and go to state 52
    ID              shift and go to state 44

    cmd                            shift and go to state 142
    condstmt                       shift and go to state 48
    otherstmt                      shift and go to state 49

state 134

    (19) listaparamsextra -> listaparamsextra COMMA tipo . ID

    ID              shift and go to state 143


state 135

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds . RETURN exp SEMI RBRACE
    (16) cmds -> cmds . cmd
    (25) cmd -> . condstmt
    (26) cmd -> . otherstmt
    (32) condstmt -> . IF LPAREN exp RPAREN cmd matchornot
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    RETURN          shift and go to state 144
    IF              shift and go to state 50
    LBRACE          shift and go to state 45
    WHILE           shift and go to state 51
    SOUTPL          shift and go to state 52
    ID              shift and go to state 44

    cmd                            shift and go to state 47
    condstmt                       shift and go to state 48
    otherstmt                      shift and go to state 49

state 136

    (54) sexp -> NEW INT LBRACK exp RBRACK .

    SEMI            reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    RPAREN          reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    RBRACK          reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    LAND            reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    LOR             reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    LT              reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    EQ              reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    NE              reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    PLUS            reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    MINUS           reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    TIMES           reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    DIVIDE          reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    COMMA           reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)


state 137

    (61) pexp -> pexp POINT ID LPAREN expopcionalmetodo . RPAREN

    RPAREN          shift and go to state 145


state 138

    (62) pexp -> pexp POINT ID LPAREN RPAREN .

    POINT           reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LBRACK          reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    SEMI            reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    RPAREN          reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    RBRACK          reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LAND            reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LOR             reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LT              reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    EQ              reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    NE              reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    PLUS            reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    MINUS           reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    TIMES           reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    COMMA           reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)


state 139

    (64) expopcionalmetodo -> exps .

    RPAREN          reduce using rule 64 (expopcionalmetodo -> exps .)


state 140

    (65) exps -> exp . expslist
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp
    (66) expslist -> . expslist COMMA exp
    (67) expslist -> .

    LAND            shift and go to state 86
    LOR             shift and go to state 87
    RPAREN          reduce using rule 67 (expslist -> .)
    COMMA           reduce using rule 67 (expslist -> .)

    expslist                       shift and go to state 146

state 141

    (31) otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .

    RBRACE          reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    RETURN          reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    IF              reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    LBRACE          reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    WHILE           reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    SOUTPL          reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    ID              reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    ELSE            reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)


state 142

    (33) matchornot -> ELSE cmd .

    RBRACE          reduce using rule 33 (matchornot -> ELSE cmd .)
    RETURN          reduce using rule 33 (matchornot -> ELSE cmd .)
    IF              reduce using rule 33 (matchornot -> ELSE cmd .)
    LBRACE          reduce using rule 33 (matchornot -> ELSE cmd .)
    WHILE           reduce using rule 33 (matchornot -> ELSE cmd .)
    SOUTPL          reduce using rule 33 (matchornot -> ELSE cmd .)
    ID              reduce using rule 33 (matchornot -> ELSE cmd .)
    ELSE            reduce using rule 33 (matchornot -> ELSE cmd .)


state 143

    (19) listaparamsextra -> listaparamsextra COMMA tipo ID .

    RPAREN          reduce using rule 19 (listaparamsextra -> listaparamsextra COMMA tipo ID .)
    COMMA           reduce using rule 19 (listaparamsextra -> listaparamsextra COMMA tipo ID .)


state 144

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN . exp SEMI RBRACE
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    exp                            shift and go to state 147
    rexp                           shift and go to state 65
    aexp                           shift and go to state 66
    mexp                           shift and go to state 67
    sexp                           shift and go to state 69
    pexp                           shift and go to state 76

state 145

    (61) pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .

    POINT           reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LBRACK          reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    SEMI            reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    RPAREN          reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    RBRACK          reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LAND            reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LOR             reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LT              reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    EQ              reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    NE              reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    PLUS            reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    MINUS           reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    TIMES           reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    DIVIDE          reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    COMMA           reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)


state 146

    (65) exps -> exp expslist .
    (66) expslist -> expslist . COMMA exp

    RPAREN          reduce using rule 65 (exps -> exp expslist .)
    COMMA           shift and go to state 148


state 147

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp . SEMI RBRACE
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    SEMI            shift and go to state 149
    LAND            shift and go to state 86
    LOR             shift and go to state 87


state 148

    (66) expslist -> expslist COMMA . exp
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 70
    MINUS           shift and go to state 68
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    NUMBER          shift and go to state 73
    NULL            shift and go to state 74
    NEW             shift and go to state 75
    ID              shift and go to state 63
    THIS            shift and go to state 77

    exp                            shift and go to state 150
    rexp                           shift and go to state 65
    aexp                           shift and go to state 66
    mexp                           shift and go to state 67
    sexp                           shift and go to state 69
    pexp                           shift and go to state 76

state 149

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI . RBRACE

    RBRACE          shift and go to state 151


state 150

    (66) expslist -> expslist COMMA exp .
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    RPAREN          reduce using rule 66 (expslist -> expslist COMMA exp .)
    COMMA           reduce using rule 66 (expslist -> expslist COMMA exp .)
    LAND            shift and go to state 86
    LOR             shift and go to state 87


state 151

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE .

    RBRACE          reduce using rule 13 (metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE .)
    PUBLIC          reduce using rule 13 (metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 122 resolved as shift
WARNING: shift/reduce conflict for ID in state 126 resolved as shift
