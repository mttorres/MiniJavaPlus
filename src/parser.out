Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    GE
    GT
    LE

Grammar

Rule 0     S' -> prog
Rule 1     prog -> CLASS ID extends LBRACE PUBLIC mainclasse RBRACE
Rule 2     mainclasse -> STATIC main multiclass
Rule 3     mainclasse -> multiclass
Rule 4     multiclass -> multiclass classe
Rule 5     multiclass -> <empty>
Rule 6     main -> VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE
Rule 7     classe -> CLASS ID extends LBRACE variaveis metodos RBRACE
Rule 8     extends -> EXTENDS ID
Rule 9     extends -> <empty>
Rule 10    variaveis -> variaveis var
Rule 11    variaveis -> <empty>
Rule 12    metodos -> metodos metodo
Rule 13    metodos -> <empty>
Rule 14    var -> tipo ID SEMI
Rule 15    metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE
Rule 16    paramsopcional -> params
Rule 17    paramsopcional -> <empty>
Rule 18    cmds -> cmds cmd
Rule 19    cmds -> <empty>
Rule 20    params -> tipo ID listaparamsextra
Rule 21    listaparamsextra -> listaparamsextra COMMA tipo ID
Rule 22    listaparamsextra -> <empty>
Rule 23    tipo -> INT LBRACK RBRACK
Rule 24    tipo -> BOOL
Rule 25    tipo -> INT
Rule 26    tipo -> ID
Rule 27    cmd -> condstmt
Rule 28    cmd -> otherstmt
Rule 29    otherstmt -> LBRACE cmds RBRACE
Rule 30    otherstmt -> WHILE LPAREN exp RPAREN cmd
Rule 31    otherstmt -> SOUTPL LPAREN exp RPAREN SEMI
Rule 32    otherstmt -> ID ASSIGN exp SEMI
Rule 33    otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI
Rule 34    condstmt -> IF LPAREN exp RPAREN cmd matchornot
Rule 35    matchornot -> ELSE cmd
Rule 36    matchornot -> <empty>
Rule 37    exp -> exp LAND rexp
Rule 38    exp -> exp LOR rexp
Rule 39    exp -> rexp
Rule 40    rexp -> rexp LT aexp
Rule 41    rexp -> rexp EQ aexp
Rule 42    rexp -> rexp NE aexp
Rule 43    rexp -> aexp
Rule 44    aexp -> aexp PLUS mexp
Rule 45    aexp -> aexp MINUS mexp
Rule 46    aexp -> mexp
Rule 47    mexp -> mexp TIMES sexp
Rule 48    mexp -> mexp DIVIDE sexp
Rule 49    mexp -> sexp
Rule 50    sexp -> LNOT sexp
Rule 51    sexp -> MINUS sexp
Rule 52    sexp -> TRUE
Rule 53    sexp -> FALSE
Rule 54    sexp -> NUMBER
Rule 55    sexp -> NULL
Rule 56    sexp -> NEW INT LBRACK exp RBRACK
Rule 57    sexp -> pexp POINT LENGTH
Rule 58    sexp -> pexp LBRACK exp RBRACK
Rule 59    sexp -> pexp
Rule 60    pexp -> ID
Rule 61    pexp -> THIS
Rule 62    pexp -> NEW ID LPAREN RPAREN
Rule 63    pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN
Rule 64    pexp -> pexp POINT ID LPAREN RPAREN
Rule 65    pexp -> pexp POINT ID
Rule 66    expopcionalmetodo -> exps
Rule 67    exps -> exp expslist
Rule 68    expslist -> expslist COMMA exp
Rule 69    expslist -> <empty>

Terminals, with rules where they appear

ASSIGN               : 32 33
BOOL                 : 24
CLASS                : 1 7
COLON                : 
COMMA                : 21 68
DIVIDE               : 48
ELSE                 : 35
EQ                   : 41
EXTENDS              : 8
FALSE                : 53
GE                   : 
GT                   : 
ID                   : 1 6 7 8 14 15 20 21 26 32 33 60 62 63 64 65
IF                   : 34
INT                  : 23 25 56
LAND                 : 37
LBRACE               : 1 6 7 15 29
LBRACK               : 6 23 33 56 58
LE                   : 
LENGTH               : 57
LNOT                 : 50
LOR                  : 38
LPAREN               : 6 15 30 31 34 62 63 64
LT                   : 40
MAIN                 : 6
MINUS                : 45 51
NE                   : 42
NEW                  : 56 62
NULL                 : 55
NUMBER               : 54
PLUS                 : 44
POINT                : 57 63 64 65
PUBLIC               : 1 15
RBRACE               : 1 6 7 15 29
RBRACK               : 6 23 33 56 58
RETURN               : 15
RPAREN               : 6 15 30 31 34 62 63 64
SEMI                 : 14 15 31 32 33
SOUTPL               : 31
STATIC               : 2
STRING               : 6
THIS                 : 61
TIMES                : 47
TRUE                 : 52
VOID                 : 6
WHILE                : 30
error                : 

Nonterminals, with rules where they appear

aexp                 : 40 41 42 43 44 45
classe               : 4
cmd                  : 18 30 34 35
cmds                 : 6 15 18 29
condstmt             : 27
exp                  : 15 30 31 32 33 33 34 37 38 56 58 67 68
expopcionalmetodo    : 63
exps                 : 66
expslist             : 67 68
extends              : 1 7
listaparamsextra     : 20 21
main                 : 2
mainclasse           : 1
matchornot           : 34
metodo               : 12
metodos              : 7 12
mexp                 : 44 45 46 47 48
multiclass           : 2 3 4
otherstmt            : 28
params               : 16
paramsopcional       : 15
pexp                 : 57 58 59 63 64 65
prog                 : 0
rexp                 : 37 38 39 40 41 42
sexp                 : 47 48 49 50 51
tipo                 : 14 15 20 21
var                  : 10
variaveis            : 7 10 15

Parsing method: SLR

state 0

    (0) S' -> . prog
    (1) prog -> . CLASS ID extends LBRACE PUBLIC mainclasse RBRACE

    CLASS           shift and go to state 2

    prog                           shift and go to state 1

state 1

    (0) S' -> prog .



state 2

    (1) prog -> CLASS . ID extends LBRACE PUBLIC mainclasse RBRACE

    ID              shift and go to state 3


state 3

    (1) prog -> CLASS ID . extends LBRACE PUBLIC mainclasse RBRACE
    (8) extends -> . EXTENDS ID
    (9) extends -> .

    EXTENDS         shift and go to state 5
    LBRACE          reduce using rule 9 (extends -> .)

    extends                        shift and go to state 4

state 4

    (1) prog -> CLASS ID extends . LBRACE PUBLIC mainclasse RBRACE

    LBRACE          shift and go to state 6


state 5

    (8) extends -> EXTENDS . ID

    ID              shift and go to state 7


state 6

    (1) prog -> CLASS ID extends LBRACE . PUBLIC mainclasse RBRACE

    PUBLIC          shift and go to state 8


state 7

    (8) extends -> EXTENDS ID .

    LBRACE          reduce using rule 8 (extends -> EXTENDS ID .)


state 8

    (1) prog -> CLASS ID extends LBRACE PUBLIC . mainclasse RBRACE
    (2) mainclasse -> . STATIC main multiclass
    (3) mainclasse -> . multiclass
    (4) multiclass -> . multiclass classe
    (5) multiclass -> .

    STATIC          shift and go to state 10
    RBRACE          reduce using rule 5 (multiclass -> .)
    CLASS           reduce using rule 5 (multiclass -> .)

    mainclasse                     shift and go to state 9
    multiclass                     shift and go to state 11

state 9

    (1) prog -> CLASS ID extends LBRACE PUBLIC mainclasse . RBRACE

    RBRACE          shift and go to state 12


state 10

    (2) mainclasse -> STATIC . main multiclass
    (6) main -> . VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE

    VOID            shift and go to state 14

    main                           shift and go to state 13

state 11

    (3) mainclasse -> multiclass .
    (4) multiclass -> multiclass . classe
    (7) classe -> . CLASS ID extends LBRACE variaveis metodos RBRACE

    RBRACE          reduce using rule 3 (mainclasse -> multiclass .)
    CLASS           shift and go to state 16

    classe                         shift and go to state 15

state 12

    (1) prog -> CLASS ID extends LBRACE PUBLIC mainclasse RBRACE .

    $end            reduce using rule 1 (prog -> CLASS ID extends LBRACE PUBLIC mainclasse RBRACE .)


state 13

    (2) mainclasse -> STATIC main . multiclass
    (4) multiclass -> . multiclass classe
    (5) multiclass -> .

    RBRACE          reduce using rule 5 (multiclass -> .)
    CLASS           reduce using rule 5 (multiclass -> .)

    multiclass                     shift and go to state 17

state 14

    (6) main -> VOID . MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE

    MAIN            shift and go to state 18


state 15

    (4) multiclass -> multiclass classe .

    RBRACE          reduce using rule 4 (multiclass -> multiclass classe .)
    CLASS           reduce using rule 4 (multiclass -> multiclass classe .)


state 16

    (7) classe -> CLASS . ID extends LBRACE variaveis metodos RBRACE

    ID              shift and go to state 19


state 17

    (2) mainclasse -> STATIC main multiclass .
    (4) multiclass -> multiclass . classe
    (7) classe -> . CLASS ID extends LBRACE variaveis metodos RBRACE

    RBRACE          reduce using rule 2 (mainclasse -> STATIC main multiclass .)
    CLASS           shift and go to state 16

    classe                         shift and go to state 15

state 18

    (6) main -> VOID MAIN . LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE

    LPAREN          shift and go to state 20


state 19

    (7) classe -> CLASS ID . extends LBRACE variaveis metodos RBRACE
    (8) extends -> . EXTENDS ID
    (9) extends -> .

    EXTENDS         shift and go to state 5
    LBRACE          reduce using rule 9 (extends -> .)

    extends                        shift and go to state 21

state 20

    (6) main -> VOID MAIN LPAREN . STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE

    STRING          shift and go to state 22


state 21

    (7) classe -> CLASS ID extends . LBRACE variaveis metodos RBRACE

    LBRACE          shift and go to state 23


state 22

    (6) main -> VOID MAIN LPAREN STRING . LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE

    LBRACK          shift and go to state 24


state 23

    (7) classe -> CLASS ID extends LBRACE . variaveis metodos RBRACE
    (10) variaveis -> . variaveis var
    (11) variaveis -> .

    PUBLIC          reduce using rule 11 (variaveis -> .)
    RBRACE          reduce using rule 11 (variaveis -> .)
    INT             reduce using rule 11 (variaveis -> .)
    BOOL            reduce using rule 11 (variaveis -> .)
    ID              reduce using rule 11 (variaveis -> .)
    IF              reduce using rule 11 (variaveis -> .)
    LBRACE          reduce using rule 11 (variaveis -> .)
    WHILE           reduce using rule 11 (variaveis -> .)
    SOUTPL          reduce using rule 11 (variaveis -> .)
    RETURN          reduce using rule 11 (variaveis -> .)

    variaveis                      shift and go to state 25

state 24

    (6) main -> VOID MAIN LPAREN STRING LBRACK . RBRACK ID RPAREN LBRACE cmds RBRACE

    RBRACK          shift and go to state 26


state 25

    (7) classe -> CLASS ID extends LBRACE variaveis . metodos RBRACE
    (10) variaveis -> variaveis . var
    (12) metodos -> . metodos metodo
    (13) metodos -> .
    (14) var -> . tipo ID SEMI
    (23) tipo -> . INT LBRACK RBRACK
    (24) tipo -> . BOOL
    (25) tipo -> . INT
    (26) tipo -> . ID

    RBRACE          reduce using rule 13 (metodos -> .)
    PUBLIC          reduce using rule 13 (metodos -> .)
    INT             shift and go to state 31
    BOOL            shift and go to state 32
    ID              shift and go to state 27

    metodos                        shift and go to state 28
    var                            shift and go to state 29
    tipo                           shift and go to state 30

state 26

    (6) main -> VOID MAIN LPAREN STRING LBRACK RBRACK . ID RPAREN LBRACE cmds RBRACE

    ID              shift and go to state 33


state 27

    (26) tipo -> ID .

    ID              reduce using rule 26 (tipo -> ID .)


state 28

    (7) classe -> CLASS ID extends LBRACE variaveis metodos . RBRACE
    (12) metodos -> metodos . metodo
    (15) metodo -> . PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE

    RBRACE          shift and go to state 34
    PUBLIC          shift and go to state 36

    metodo                         shift and go to state 35

state 29

    (10) variaveis -> variaveis var .

    PUBLIC          reduce using rule 10 (variaveis -> variaveis var .)
    RBRACE          reduce using rule 10 (variaveis -> variaveis var .)
    INT             reduce using rule 10 (variaveis -> variaveis var .)
    BOOL            reduce using rule 10 (variaveis -> variaveis var .)
    ID              reduce using rule 10 (variaveis -> variaveis var .)
    IF              reduce using rule 10 (variaveis -> variaveis var .)
    LBRACE          reduce using rule 10 (variaveis -> variaveis var .)
    WHILE           reduce using rule 10 (variaveis -> variaveis var .)
    SOUTPL          reduce using rule 10 (variaveis -> variaveis var .)
    RETURN          reduce using rule 10 (variaveis -> variaveis var .)


state 30

    (14) var -> tipo . ID SEMI

    ID              shift and go to state 37


state 31

    (23) tipo -> INT . LBRACK RBRACK
    (25) tipo -> INT .

    LBRACK          shift and go to state 38
    ID              reduce using rule 25 (tipo -> INT .)


state 32

    (24) tipo -> BOOL .

    ID              reduce using rule 24 (tipo -> BOOL .)


state 33

    (6) main -> VOID MAIN LPAREN STRING LBRACK RBRACK ID . RPAREN LBRACE cmds RBRACE

    RPAREN          shift and go to state 39


state 34

    (7) classe -> CLASS ID extends LBRACE variaveis metodos RBRACE .

    RBRACE          reduce using rule 7 (classe -> CLASS ID extends LBRACE variaveis metodos RBRACE .)
    CLASS           reduce using rule 7 (classe -> CLASS ID extends LBRACE variaveis metodos RBRACE .)


state 35

    (12) metodos -> metodos metodo .

    RBRACE          reduce using rule 12 (metodos -> metodos metodo .)
    PUBLIC          reduce using rule 12 (metodos -> metodos metodo .)


state 36

    (15) metodo -> PUBLIC . tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE
    (23) tipo -> . INT LBRACK RBRACK
    (24) tipo -> . BOOL
    (25) tipo -> . INT
    (26) tipo -> . ID

    INT             shift and go to state 31
    BOOL            shift and go to state 32
    ID              shift and go to state 27

    tipo                           shift and go to state 40

state 37

    (14) var -> tipo ID . SEMI

    SEMI            shift and go to state 41


state 38

    (23) tipo -> INT LBRACK . RBRACK

    RBRACK          shift and go to state 42


state 39

    (6) main -> VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN . LBRACE cmds RBRACE

    LBRACE          shift and go to state 43


state 40

    (15) metodo -> PUBLIC tipo . ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE

    ID              shift and go to state 44


state 41

    (14) var -> tipo ID SEMI .

    PUBLIC          reduce using rule 14 (var -> tipo ID SEMI .)
    RBRACE          reduce using rule 14 (var -> tipo ID SEMI .)
    INT             reduce using rule 14 (var -> tipo ID SEMI .)
    BOOL            reduce using rule 14 (var -> tipo ID SEMI .)
    ID              reduce using rule 14 (var -> tipo ID SEMI .)
    IF              reduce using rule 14 (var -> tipo ID SEMI .)
    LBRACE          reduce using rule 14 (var -> tipo ID SEMI .)
    WHILE           reduce using rule 14 (var -> tipo ID SEMI .)
    SOUTPL          reduce using rule 14 (var -> tipo ID SEMI .)
    RETURN          reduce using rule 14 (var -> tipo ID SEMI .)


state 42

    (23) tipo -> INT LBRACK RBRACK .

    ID              reduce using rule 23 (tipo -> INT LBRACK RBRACK .)


state 43

    (6) main -> VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE . cmds RBRACE
    (18) cmds -> . cmds cmd
    (19) cmds -> .

    RBRACE          reduce using rule 19 (cmds -> .)
    RETURN          reduce using rule 19 (cmds -> .)
    IF              reduce using rule 19 (cmds -> .)
    LBRACE          reduce using rule 19 (cmds -> .)
    WHILE           reduce using rule 19 (cmds -> .)
    SOUTPL          reduce using rule 19 (cmds -> .)
    ID              reduce using rule 19 (cmds -> .)

    cmds                           shift and go to state 45

state 44

    (15) metodo -> PUBLIC tipo ID . LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE

    LPAREN          shift and go to state 46


state 45

    (6) main -> VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds . RBRACE
    (18) cmds -> cmds . cmd
    (27) cmd -> . condstmt
    (28) cmd -> . otherstmt
    (34) condstmt -> . IF LPAREN exp RPAREN cmd matchornot
    (29) otherstmt -> . LBRACE cmds RBRACE
    (30) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (31) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (32) otherstmt -> . ID ASSIGN exp SEMI
    (33) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    RBRACE          shift and go to state 49
    IF              shift and go to state 53
    LBRACE          shift and go to state 48
    WHILE           shift and go to state 54
    SOUTPL          shift and go to state 55
    ID              shift and go to state 47

    cmd                            shift and go to state 50
    condstmt                       shift and go to state 51
    otherstmt                      shift and go to state 52

state 46

    (15) metodo -> PUBLIC tipo ID LPAREN . paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE
    (16) paramsopcional -> . params
    (17) paramsopcional -> .
    (20) params -> . tipo ID listaparamsextra
    (23) tipo -> . INT LBRACK RBRACK
    (24) tipo -> . BOOL
    (25) tipo -> . INT
    (26) tipo -> . ID

    RPAREN          reduce using rule 17 (paramsopcional -> .)
    INT             shift and go to state 31
    BOOL            shift and go to state 32
    ID              shift and go to state 27

    tipo                           shift and go to state 56
    paramsopcional                 shift and go to state 57
    params                         shift and go to state 58

state 47

    (32) otherstmt -> ID . ASSIGN exp SEMI
    (33) otherstmt -> ID . LBRACK exp RBRACK ASSIGN exp SEMI

    ASSIGN          shift and go to state 59
    LBRACK          shift and go to state 60


state 48

    (29) otherstmt -> LBRACE . cmds RBRACE
    (18) cmds -> . cmds cmd
    (19) cmds -> .

    RBRACE          reduce using rule 19 (cmds -> .)
    RETURN          reduce using rule 19 (cmds -> .)
    IF              reduce using rule 19 (cmds -> .)
    LBRACE          reduce using rule 19 (cmds -> .)
    WHILE           reduce using rule 19 (cmds -> .)
    SOUTPL          reduce using rule 19 (cmds -> .)
    ID              reduce using rule 19 (cmds -> .)

    cmds                           shift and go to state 61

state 49

    (6) main -> VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE .

    CLASS           reduce using rule 6 (main -> VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE .)
    RBRACE          reduce using rule 6 (main -> VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE .)


state 50

    (18) cmds -> cmds cmd .

    RBRACE          reduce using rule 18 (cmds -> cmds cmd .)
    RETURN          reduce using rule 18 (cmds -> cmds cmd .)
    IF              reduce using rule 18 (cmds -> cmds cmd .)
    LBRACE          reduce using rule 18 (cmds -> cmds cmd .)
    WHILE           reduce using rule 18 (cmds -> cmds cmd .)
    SOUTPL          reduce using rule 18 (cmds -> cmds cmd .)
    ID              reduce using rule 18 (cmds -> cmds cmd .)


state 51

    (27) cmd -> condstmt .

    RBRACE          reduce using rule 27 (cmd -> condstmt .)
    RETURN          reduce using rule 27 (cmd -> condstmt .)
    IF              reduce using rule 27 (cmd -> condstmt .)
    LBRACE          reduce using rule 27 (cmd -> condstmt .)
    WHILE           reduce using rule 27 (cmd -> condstmt .)
    SOUTPL          reduce using rule 27 (cmd -> condstmt .)
    ID              reduce using rule 27 (cmd -> condstmt .)
    ELSE            reduce using rule 27 (cmd -> condstmt .)


state 52

    (28) cmd -> otherstmt .

    RBRACE          reduce using rule 28 (cmd -> otherstmt .)
    RETURN          reduce using rule 28 (cmd -> otherstmt .)
    IF              reduce using rule 28 (cmd -> otherstmt .)
    LBRACE          reduce using rule 28 (cmd -> otherstmt .)
    WHILE           reduce using rule 28 (cmd -> otherstmt .)
    SOUTPL          reduce using rule 28 (cmd -> otherstmt .)
    ID              reduce using rule 28 (cmd -> otherstmt .)
    ELSE            reduce using rule 28 (cmd -> otherstmt .)


state 53

    (34) condstmt -> IF . LPAREN exp RPAREN cmd matchornot

    LPAREN          shift and go to state 62


state 54

    (30) otherstmt -> WHILE . LPAREN exp RPAREN cmd

    LPAREN          shift and go to state 63


state 55

    (31) otherstmt -> SOUTPL . LPAREN exp RPAREN SEMI

    LPAREN          shift and go to state 64


state 56

    (20) params -> tipo . ID listaparamsextra

    ID              shift and go to state 65


state 57

    (15) metodo -> PUBLIC tipo ID LPAREN paramsopcional . RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE

    RPAREN          shift and go to state 66


state 58

    (16) paramsopcional -> params .

    RPAREN          reduce using rule 16 (paramsopcional -> params .)


state 59

    (32) otherstmt -> ID ASSIGN . exp SEMI
    (37) exp -> . exp LAND rexp
    (38) exp -> . exp LOR rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LT aexp
    (41) rexp -> . rexp EQ aexp
    (42) rexp -> . rexp NE aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    exp                            shift and go to state 68
    rexp                           shift and go to state 69
    aexp                           shift and go to state 70
    mexp                           shift and go to state 71
    sexp                           shift and go to state 73
    pexp                           shift and go to state 80

state 60

    (33) otherstmt -> ID LBRACK . exp RBRACK ASSIGN exp SEMI
    (37) exp -> . exp LAND rexp
    (38) exp -> . exp LOR rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LT aexp
    (41) rexp -> . rexp EQ aexp
    (42) rexp -> . rexp NE aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    exp                            shift and go to state 82
    rexp                           shift and go to state 69
    aexp                           shift and go to state 70
    mexp                           shift and go to state 71
    sexp                           shift and go to state 73
    pexp                           shift and go to state 80

state 61

    (29) otherstmt -> LBRACE cmds . RBRACE
    (18) cmds -> cmds . cmd
    (27) cmd -> . condstmt
    (28) cmd -> . otherstmt
    (34) condstmt -> . IF LPAREN exp RPAREN cmd matchornot
    (29) otherstmt -> . LBRACE cmds RBRACE
    (30) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (31) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (32) otherstmt -> . ID ASSIGN exp SEMI
    (33) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    RBRACE          shift and go to state 83
    IF              shift and go to state 53
    LBRACE          shift and go to state 48
    WHILE           shift and go to state 54
    SOUTPL          shift and go to state 55
    ID              shift and go to state 47

    cmd                            shift and go to state 50
    condstmt                       shift and go to state 51
    otherstmt                      shift and go to state 52

state 62

    (34) condstmt -> IF LPAREN . exp RPAREN cmd matchornot
    (37) exp -> . exp LAND rexp
    (38) exp -> . exp LOR rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LT aexp
    (41) rexp -> . rexp EQ aexp
    (42) rexp -> . rexp NE aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    exp                            shift and go to state 84
    rexp                           shift and go to state 69
    aexp                           shift and go to state 70
    mexp                           shift and go to state 71
    sexp                           shift and go to state 73
    pexp                           shift and go to state 80

state 63

    (30) otherstmt -> WHILE LPAREN . exp RPAREN cmd
    (37) exp -> . exp LAND rexp
    (38) exp -> . exp LOR rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LT aexp
    (41) rexp -> . rexp EQ aexp
    (42) rexp -> . rexp NE aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    exp                            shift and go to state 85
    rexp                           shift and go to state 69
    aexp                           shift and go to state 70
    mexp                           shift and go to state 71
    sexp                           shift and go to state 73
    pexp                           shift and go to state 80

state 64

    (31) otherstmt -> SOUTPL LPAREN . exp RPAREN SEMI
    (37) exp -> . exp LAND rexp
    (38) exp -> . exp LOR rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LT aexp
    (41) rexp -> . rexp EQ aexp
    (42) rexp -> . rexp NE aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    exp                            shift and go to state 86
    rexp                           shift and go to state 69
    aexp                           shift and go to state 70
    mexp                           shift and go to state 71
    sexp                           shift and go to state 73
    pexp                           shift and go to state 80

state 65

    (20) params -> tipo ID . listaparamsextra
    (21) listaparamsextra -> . listaparamsextra COMMA tipo ID
    (22) listaparamsextra -> .

    RPAREN          reduce using rule 22 (listaparamsextra -> .)
    COMMA           reduce using rule 22 (listaparamsextra -> .)

    listaparamsextra               shift and go to state 87

state 66

    (15) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN . LBRACE variaveis cmds RETURN exp SEMI RBRACE

    LBRACE          shift and go to state 88


state 67

    (60) pexp -> ID .

    POINT           reduce using rule 60 (pexp -> ID .)
    LBRACK          reduce using rule 60 (pexp -> ID .)
    SEMI            reduce using rule 60 (pexp -> ID .)
    RPAREN          reduce using rule 60 (pexp -> ID .)
    RBRACK          reduce using rule 60 (pexp -> ID .)
    LAND            reduce using rule 60 (pexp -> ID .)
    LOR             reduce using rule 60 (pexp -> ID .)
    LT              reduce using rule 60 (pexp -> ID .)
    EQ              reduce using rule 60 (pexp -> ID .)
    NE              reduce using rule 60 (pexp -> ID .)
    PLUS            reduce using rule 60 (pexp -> ID .)
    MINUS           reduce using rule 60 (pexp -> ID .)
    TIMES           reduce using rule 60 (pexp -> ID .)
    DIVIDE          reduce using rule 60 (pexp -> ID .)
    COMMA           reduce using rule 60 (pexp -> ID .)


state 68

    (32) otherstmt -> ID ASSIGN exp . SEMI
    (37) exp -> exp . LAND rexp
    (38) exp -> exp . LOR rexp

    SEMI            shift and go to state 89
    LAND            shift and go to state 90
    LOR             shift and go to state 91


state 69

    (39) exp -> rexp .
    (40) rexp -> rexp . LT aexp
    (41) rexp -> rexp . EQ aexp
    (42) rexp -> rexp . NE aexp

    SEMI            reduce using rule 39 (exp -> rexp .)
    RPAREN          reduce using rule 39 (exp -> rexp .)
    RBRACK          reduce using rule 39 (exp -> rexp .)
    LAND            reduce using rule 39 (exp -> rexp .)
    LOR             reduce using rule 39 (exp -> rexp .)
    COMMA           reduce using rule 39 (exp -> rexp .)
    LT              shift and go to state 92
    EQ              shift and go to state 93
    NE              shift and go to state 94


state 70

    (43) rexp -> aexp .
    (44) aexp -> aexp . PLUS mexp
    (45) aexp -> aexp . MINUS mexp

    SEMI            reduce using rule 43 (rexp -> aexp .)
    RPAREN          reduce using rule 43 (rexp -> aexp .)
    RBRACK          reduce using rule 43 (rexp -> aexp .)
    LAND            reduce using rule 43 (rexp -> aexp .)
    LOR             reduce using rule 43 (rexp -> aexp .)
    LT              reduce using rule 43 (rexp -> aexp .)
    EQ              reduce using rule 43 (rexp -> aexp .)
    NE              reduce using rule 43 (rexp -> aexp .)
    COMMA           reduce using rule 43 (rexp -> aexp .)
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 71

    (46) aexp -> mexp .
    (47) mexp -> mexp . TIMES sexp
    (48) mexp -> mexp . DIVIDE sexp

    SEMI            reduce using rule 46 (aexp -> mexp .)
    RPAREN          reduce using rule 46 (aexp -> mexp .)
    RBRACK          reduce using rule 46 (aexp -> mexp .)
    LAND            reduce using rule 46 (aexp -> mexp .)
    LOR             reduce using rule 46 (aexp -> mexp .)
    LT              reduce using rule 46 (aexp -> mexp .)
    EQ              reduce using rule 46 (aexp -> mexp .)
    NE              reduce using rule 46 (aexp -> mexp .)
    PLUS            reduce using rule 46 (aexp -> mexp .)
    MINUS           reduce using rule 46 (aexp -> mexp .)
    COMMA           reduce using rule 46 (aexp -> mexp .)
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98


state 72

    (51) sexp -> MINUS . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    sexp                           shift and go to state 99
    pexp                           shift and go to state 80

state 73

    (49) mexp -> sexp .

    SEMI            reduce using rule 49 (mexp -> sexp .)
    RPAREN          reduce using rule 49 (mexp -> sexp .)
    RBRACK          reduce using rule 49 (mexp -> sexp .)
    LAND            reduce using rule 49 (mexp -> sexp .)
    LOR             reduce using rule 49 (mexp -> sexp .)
    LT              reduce using rule 49 (mexp -> sexp .)
    EQ              reduce using rule 49 (mexp -> sexp .)
    NE              reduce using rule 49 (mexp -> sexp .)
    PLUS            reduce using rule 49 (mexp -> sexp .)
    MINUS           reduce using rule 49 (mexp -> sexp .)
    TIMES           reduce using rule 49 (mexp -> sexp .)
    DIVIDE          reduce using rule 49 (mexp -> sexp .)
    COMMA           reduce using rule 49 (mexp -> sexp .)


state 74

    (50) sexp -> LNOT . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    sexp                           shift and go to state 100
    pexp                           shift and go to state 80

state 75

    (52) sexp -> TRUE .

    SEMI            reduce using rule 52 (sexp -> TRUE .)
    RPAREN          reduce using rule 52 (sexp -> TRUE .)
    RBRACK          reduce using rule 52 (sexp -> TRUE .)
    LAND            reduce using rule 52 (sexp -> TRUE .)
    LOR             reduce using rule 52 (sexp -> TRUE .)
    LT              reduce using rule 52 (sexp -> TRUE .)
    EQ              reduce using rule 52 (sexp -> TRUE .)
    NE              reduce using rule 52 (sexp -> TRUE .)
    PLUS            reduce using rule 52 (sexp -> TRUE .)
    MINUS           reduce using rule 52 (sexp -> TRUE .)
    TIMES           reduce using rule 52 (sexp -> TRUE .)
    DIVIDE          reduce using rule 52 (sexp -> TRUE .)
    COMMA           reduce using rule 52 (sexp -> TRUE .)


state 76

    (53) sexp -> FALSE .

    SEMI            reduce using rule 53 (sexp -> FALSE .)
    RPAREN          reduce using rule 53 (sexp -> FALSE .)
    RBRACK          reduce using rule 53 (sexp -> FALSE .)
    LAND            reduce using rule 53 (sexp -> FALSE .)
    LOR             reduce using rule 53 (sexp -> FALSE .)
    LT              reduce using rule 53 (sexp -> FALSE .)
    EQ              reduce using rule 53 (sexp -> FALSE .)
    NE              reduce using rule 53 (sexp -> FALSE .)
    PLUS            reduce using rule 53 (sexp -> FALSE .)
    MINUS           reduce using rule 53 (sexp -> FALSE .)
    TIMES           reduce using rule 53 (sexp -> FALSE .)
    DIVIDE          reduce using rule 53 (sexp -> FALSE .)
    COMMA           reduce using rule 53 (sexp -> FALSE .)


state 77

    (54) sexp -> NUMBER .

    SEMI            reduce using rule 54 (sexp -> NUMBER .)
    RPAREN          reduce using rule 54 (sexp -> NUMBER .)
    RBRACK          reduce using rule 54 (sexp -> NUMBER .)
    LAND            reduce using rule 54 (sexp -> NUMBER .)
    LOR             reduce using rule 54 (sexp -> NUMBER .)
    LT              reduce using rule 54 (sexp -> NUMBER .)
    EQ              reduce using rule 54 (sexp -> NUMBER .)
    NE              reduce using rule 54 (sexp -> NUMBER .)
    PLUS            reduce using rule 54 (sexp -> NUMBER .)
    MINUS           reduce using rule 54 (sexp -> NUMBER .)
    TIMES           reduce using rule 54 (sexp -> NUMBER .)
    DIVIDE          reduce using rule 54 (sexp -> NUMBER .)
    COMMA           reduce using rule 54 (sexp -> NUMBER .)


state 78

    (55) sexp -> NULL .

    SEMI            reduce using rule 55 (sexp -> NULL .)
    RPAREN          reduce using rule 55 (sexp -> NULL .)
    RBRACK          reduce using rule 55 (sexp -> NULL .)
    LAND            reduce using rule 55 (sexp -> NULL .)
    LOR             reduce using rule 55 (sexp -> NULL .)
    LT              reduce using rule 55 (sexp -> NULL .)
    EQ              reduce using rule 55 (sexp -> NULL .)
    NE              reduce using rule 55 (sexp -> NULL .)
    PLUS            reduce using rule 55 (sexp -> NULL .)
    MINUS           reduce using rule 55 (sexp -> NULL .)
    TIMES           reduce using rule 55 (sexp -> NULL .)
    DIVIDE          reduce using rule 55 (sexp -> NULL .)
    COMMA           reduce using rule 55 (sexp -> NULL .)


state 79

    (56) sexp -> NEW . INT LBRACK exp RBRACK
    (62) pexp -> NEW . ID LPAREN RPAREN

    INT             shift and go to state 101
    ID              shift and go to state 102


state 80

    (57) sexp -> pexp . POINT LENGTH
    (58) sexp -> pexp . LBRACK exp RBRACK
    (59) sexp -> pexp .
    (63) pexp -> pexp . POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> pexp . POINT ID LPAREN RPAREN
    (65) pexp -> pexp . POINT ID

    POINT           shift and go to state 103
    LBRACK          shift and go to state 104
    SEMI            reduce using rule 59 (sexp -> pexp .)
    RPAREN          reduce using rule 59 (sexp -> pexp .)
    RBRACK          reduce using rule 59 (sexp -> pexp .)
    LAND            reduce using rule 59 (sexp -> pexp .)
    LOR             reduce using rule 59 (sexp -> pexp .)
    LT              reduce using rule 59 (sexp -> pexp .)
    EQ              reduce using rule 59 (sexp -> pexp .)
    NE              reduce using rule 59 (sexp -> pexp .)
    PLUS            reduce using rule 59 (sexp -> pexp .)
    MINUS           reduce using rule 59 (sexp -> pexp .)
    TIMES           reduce using rule 59 (sexp -> pexp .)
    DIVIDE          reduce using rule 59 (sexp -> pexp .)
    COMMA           reduce using rule 59 (sexp -> pexp .)


state 81

    (61) pexp -> THIS .

    POINT           reduce using rule 61 (pexp -> THIS .)
    LBRACK          reduce using rule 61 (pexp -> THIS .)
    SEMI            reduce using rule 61 (pexp -> THIS .)
    RPAREN          reduce using rule 61 (pexp -> THIS .)
    RBRACK          reduce using rule 61 (pexp -> THIS .)
    LAND            reduce using rule 61 (pexp -> THIS .)
    LOR             reduce using rule 61 (pexp -> THIS .)
    LT              reduce using rule 61 (pexp -> THIS .)
    EQ              reduce using rule 61 (pexp -> THIS .)
    NE              reduce using rule 61 (pexp -> THIS .)
    PLUS            reduce using rule 61 (pexp -> THIS .)
    MINUS           reduce using rule 61 (pexp -> THIS .)
    TIMES           reduce using rule 61 (pexp -> THIS .)
    DIVIDE          reduce using rule 61 (pexp -> THIS .)
    COMMA           reduce using rule 61 (pexp -> THIS .)


state 82

    (33) otherstmt -> ID LBRACK exp . RBRACK ASSIGN exp SEMI
    (37) exp -> exp . LAND rexp
    (38) exp -> exp . LOR rexp

    RBRACK          shift and go to state 105
    LAND            shift and go to state 90
    LOR             shift and go to state 91


state 83

    (29) otherstmt -> LBRACE cmds RBRACE .

    RBRACE          reduce using rule 29 (otherstmt -> LBRACE cmds RBRACE .)
    RETURN          reduce using rule 29 (otherstmt -> LBRACE cmds RBRACE .)
    IF              reduce using rule 29 (otherstmt -> LBRACE cmds RBRACE .)
    LBRACE          reduce using rule 29 (otherstmt -> LBRACE cmds RBRACE .)
    WHILE           reduce using rule 29 (otherstmt -> LBRACE cmds RBRACE .)
    SOUTPL          reduce using rule 29 (otherstmt -> LBRACE cmds RBRACE .)
    ID              reduce using rule 29 (otherstmt -> LBRACE cmds RBRACE .)
    ELSE            reduce using rule 29 (otherstmt -> LBRACE cmds RBRACE .)


state 84

    (34) condstmt -> IF LPAREN exp . RPAREN cmd matchornot
    (37) exp -> exp . LAND rexp
    (38) exp -> exp . LOR rexp

    RPAREN          shift and go to state 106
    LAND            shift and go to state 90
    LOR             shift and go to state 91


state 85

    (30) otherstmt -> WHILE LPAREN exp . RPAREN cmd
    (37) exp -> exp . LAND rexp
    (38) exp -> exp . LOR rexp

    RPAREN          shift and go to state 107
    LAND            shift and go to state 90
    LOR             shift and go to state 91


state 86

    (31) otherstmt -> SOUTPL LPAREN exp . RPAREN SEMI
    (37) exp -> exp . LAND rexp
    (38) exp -> exp . LOR rexp

    RPAREN          shift and go to state 108
    LAND            shift and go to state 90
    LOR             shift and go to state 91


state 87

    (20) params -> tipo ID listaparamsextra .
    (21) listaparamsextra -> listaparamsextra . COMMA tipo ID

    RPAREN          reduce using rule 20 (params -> tipo ID listaparamsextra .)
    COMMA           shift and go to state 109


state 88

    (15) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE . variaveis cmds RETURN exp SEMI RBRACE
    (10) variaveis -> . variaveis var
    (11) variaveis -> .

    PUBLIC          reduce using rule 11 (variaveis -> .)
    RBRACE          reduce using rule 11 (variaveis -> .)
    INT             reduce using rule 11 (variaveis -> .)
    BOOL            reduce using rule 11 (variaveis -> .)
    ID              reduce using rule 11 (variaveis -> .)
    IF              reduce using rule 11 (variaveis -> .)
    LBRACE          reduce using rule 11 (variaveis -> .)
    WHILE           reduce using rule 11 (variaveis -> .)
    SOUTPL          reduce using rule 11 (variaveis -> .)
    RETURN          reduce using rule 11 (variaveis -> .)

    variaveis                      shift and go to state 110

state 89

    (32) otherstmt -> ID ASSIGN exp SEMI .

    RBRACE          reduce using rule 32 (otherstmt -> ID ASSIGN exp SEMI .)
    RETURN          reduce using rule 32 (otherstmt -> ID ASSIGN exp SEMI .)
    IF              reduce using rule 32 (otherstmt -> ID ASSIGN exp SEMI .)
    LBRACE          reduce using rule 32 (otherstmt -> ID ASSIGN exp SEMI .)
    WHILE           reduce using rule 32 (otherstmt -> ID ASSIGN exp SEMI .)
    SOUTPL          reduce using rule 32 (otherstmt -> ID ASSIGN exp SEMI .)
    ID              reduce using rule 32 (otherstmt -> ID ASSIGN exp SEMI .)
    ELSE            reduce using rule 32 (otherstmt -> ID ASSIGN exp SEMI .)


state 90

    (37) exp -> exp LAND . rexp
    (40) rexp -> . rexp LT aexp
    (41) rexp -> . rexp EQ aexp
    (42) rexp -> . rexp NE aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    rexp                           shift and go to state 111
    aexp                           shift and go to state 70
    mexp                           shift and go to state 71
    sexp                           shift and go to state 73
    pexp                           shift and go to state 80

state 91

    (38) exp -> exp LOR . rexp
    (40) rexp -> . rexp LT aexp
    (41) rexp -> . rexp EQ aexp
    (42) rexp -> . rexp NE aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    rexp                           shift and go to state 112
    aexp                           shift and go to state 70
    mexp                           shift and go to state 71
    sexp                           shift and go to state 73
    pexp                           shift and go to state 80

state 92

    (40) rexp -> rexp LT . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    aexp                           shift and go to state 113
    mexp                           shift and go to state 71
    sexp                           shift and go to state 73
    pexp                           shift and go to state 80

state 93

    (41) rexp -> rexp EQ . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    aexp                           shift and go to state 114
    mexp                           shift and go to state 71
    sexp                           shift and go to state 73
    pexp                           shift and go to state 80

state 94

    (42) rexp -> rexp NE . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    aexp                           shift and go to state 115
    mexp                           shift and go to state 71
    sexp                           shift and go to state 73
    pexp                           shift and go to state 80

state 95

    (44) aexp -> aexp PLUS . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    mexp                           shift and go to state 116
    sexp                           shift and go to state 73
    pexp                           shift and go to state 80

state 96

    (45) aexp -> aexp MINUS . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    mexp                           shift and go to state 117
    sexp                           shift and go to state 73
    pexp                           shift and go to state 80

state 97

    (47) mexp -> mexp TIMES . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    sexp                           shift and go to state 118
    pexp                           shift and go to state 80

state 98

    (48) mexp -> mexp DIVIDE . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    sexp                           shift and go to state 119
    pexp                           shift and go to state 80

state 99

    (51) sexp -> MINUS sexp .

    SEMI            reduce using rule 51 (sexp -> MINUS sexp .)
    RPAREN          reduce using rule 51 (sexp -> MINUS sexp .)
    RBRACK          reduce using rule 51 (sexp -> MINUS sexp .)
    LAND            reduce using rule 51 (sexp -> MINUS sexp .)
    LOR             reduce using rule 51 (sexp -> MINUS sexp .)
    LT              reduce using rule 51 (sexp -> MINUS sexp .)
    EQ              reduce using rule 51 (sexp -> MINUS sexp .)
    NE              reduce using rule 51 (sexp -> MINUS sexp .)
    PLUS            reduce using rule 51 (sexp -> MINUS sexp .)
    MINUS           reduce using rule 51 (sexp -> MINUS sexp .)
    TIMES           reduce using rule 51 (sexp -> MINUS sexp .)
    DIVIDE          reduce using rule 51 (sexp -> MINUS sexp .)
    COMMA           reduce using rule 51 (sexp -> MINUS sexp .)


state 100

    (50) sexp -> LNOT sexp .

    SEMI            reduce using rule 50 (sexp -> LNOT sexp .)
    RPAREN          reduce using rule 50 (sexp -> LNOT sexp .)
    RBRACK          reduce using rule 50 (sexp -> LNOT sexp .)
    LAND            reduce using rule 50 (sexp -> LNOT sexp .)
    LOR             reduce using rule 50 (sexp -> LNOT sexp .)
    LT              reduce using rule 50 (sexp -> LNOT sexp .)
    EQ              reduce using rule 50 (sexp -> LNOT sexp .)
    NE              reduce using rule 50 (sexp -> LNOT sexp .)
    PLUS            reduce using rule 50 (sexp -> LNOT sexp .)
    MINUS           reduce using rule 50 (sexp -> LNOT sexp .)
    TIMES           reduce using rule 50 (sexp -> LNOT sexp .)
    DIVIDE          reduce using rule 50 (sexp -> LNOT sexp .)
    COMMA           reduce using rule 50 (sexp -> LNOT sexp .)


state 101

    (56) sexp -> NEW INT . LBRACK exp RBRACK

    LBRACK          shift and go to state 120


state 102

    (62) pexp -> NEW ID . LPAREN RPAREN

    LPAREN          shift and go to state 121


state 103

    (57) sexp -> pexp POINT . LENGTH
    (63) pexp -> pexp POINT . ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> pexp POINT . ID LPAREN RPAREN
    (65) pexp -> pexp POINT . ID

    LENGTH          shift and go to state 122
    ID              shift and go to state 123


state 104

    (58) sexp -> pexp LBRACK . exp RBRACK
    (37) exp -> . exp LAND rexp
    (38) exp -> . exp LOR rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LT aexp
    (41) rexp -> . rexp EQ aexp
    (42) rexp -> . rexp NE aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    pexp                           shift and go to state 80
    exp                            shift and go to state 124
    rexp                           shift and go to state 69
    aexp                           shift and go to state 70
    mexp                           shift and go to state 71
    sexp                           shift and go to state 73

state 105

    (33) otherstmt -> ID LBRACK exp RBRACK . ASSIGN exp SEMI

    ASSIGN          shift and go to state 125


state 106

    (34) condstmt -> IF LPAREN exp RPAREN . cmd matchornot
    (27) cmd -> . condstmt
    (28) cmd -> . otherstmt
    (34) condstmt -> . IF LPAREN exp RPAREN cmd matchornot
    (29) otherstmt -> . LBRACE cmds RBRACE
    (30) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (31) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (32) otherstmt -> . ID ASSIGN exp SEMI
    (33) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    IF              shift and go to state 53
    LBRACE          shift and go to state 48
    WHILE           shift and go to state 54
    SOUTPL          shift and go to state 55
    ID              shift and go to state 47

    cmd                            shift and go to state 126
    condstmt                       shift and go to state 51
    otherstmt                      shift and go to state 52

state 107

    (30) otherstmt -> WHILE LPAREN exp RPAREN . cmd
    (27) cmd -> . condstmt
    (28) cmd -> . otherstmt
    (34) condstmt -> . IF LPAREN exp RPAREN cmd matchornot
    (29) otherstmt -> . LBRACE cmds RBRACE
    (30) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (31) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (32) otherstmt -> . ID ASSIGN exp SEMI
    (33) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    IF              shift and go to state 53
    LBRACE          shift and go to state 48
    WHILE           shift and go to state 54
    SOUTPL          shift and go to state 55
    ID              shift and go to state 47

    cmd                            shift and go to state 127
    condstmt                       shift and go to state 51
    otherstmt                      shift and go to state 52

state 108

    (31) otherstmt -> SOUTPL LPAREN exp RPAREN . SEMI

    SEMI            shift and go to state 128


state 109

    (21) listaparamsextra -> listaparamsextra COMMA . tipo ID
    (23) tipo -> . INT LBRACK RBRACK
    (24) tipo -> . BOOL
    (25) tipo -> . INT
    (26) tipo -> . ID

    INT             shift and go to state 31
    BOOL            shift and go to state 32
    ID              shift and go to state 27

    tipo                           shift and go to state 129

state 110

    (15) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis . cmds RETURN exp SEMI RBRACE
    (10) variaveis -> variaveis . var
    (18) cmds -> . cmds cmd
    (19) cmds -> .
    (14) var -> . tipo ID SEMI
    (23) tipo -> . INT LBRACK RBRACK
    (24) tipo -> . BOOL
    (25) tipo -> . INT
    (26) tipo -> . ID

  ! shift/reduce conflict for ID resolved as shift
    RBRACE          reduce using rule 19 (cmds -> .)
    RETURN          reduce using rule 19 (cmds -> .)
    IF              reduce using rule 19 (cmds -> .)
    LBRACE          reduce using rule 19 (cmds -> .)
    WHILE           reduce using rule 19 (cmds -> .)
    SOUTPL          reduce using rule 19 (cmds -> .)
    INT             shift and go to state 31
    BOOL            shift and go to state 32
    ID              shift and go to state 27

  ! ID              [ reduce using rule 19 (cmds -> .) ]

    tipo                           shift and go to state 30
    cmds                           shift and go to state 130
    var                            shift and go to state 29

state 111

    (37) exp -> exp LAND rexp .
    (40) rexp -> rexp . LT aexp
    (41) rexp -> rexp . EQ aexp
    (42) rexp -> rexp . NE aexp

    SEMI            reduce using rule 37 (exp -> exp LAND rexp .)
    RPAREN          reduce using rule 37 (exp -> exp LAND rexp .)
    RBRACK          reduce using rule 37 (exp -> exp LAND rexp .)
    LAND            reduce using rule 37 (exp -> exp LAND rexp .)
    LOR             reduce using rule 37 (exp -> exp LAND rexp .)
    COMMA           reduce using rule 37 (exp -> exp LAND rexp .)
    LT              shift and go to state 92
    EQ              shift and go to state 93
    NE              shift and go to state 94


state 112

    (38) exp -> exp LOR rexp .
    (40) rexp -> rexp . LT aexp
    (41) rexp -> rexp . EQ aexp
    (42) rexp -> rexp . NE aexp

    SEMI            reduce using rule 38 (exp -> exp LOR rexp .)
    RPAREN          reduce using rule 38 (exp -> exp LOR rexp .)
    RBRACK          reduce using rule 38 (exp -> exp LOR rexp .)
    LAND            reduce using rule 38 (exp -> exp LOR rexp .)
    LOR             reduce using rule 38 (exp -> exp LOR rexp .)
    COMMA           reduce using rule 38 (exp -> exp LOR rexp .)
    LT              shift and go to state 92
    EQ              shift and go to state 93
    NE              shift and go to state 94


state 113

    (40) rexp -> rexp LT aexp .
    (44) aexp -> aexp . PLUS mexp
    (45) aexp -> aexp . MINUS mexp

    SEMI            reduce using rule 40 (rexp -> rexp LT aexp .)
    RPAREN          reduce using rule 40 (rexp -> rexp LT aexp .)
    RBRACK          reduce using rule 40 (rexp -> rexp LT aexp .)
    LAND            reduce using rule 40 (rexp -> rexp LT aexp .)
    LOR             reduce using rule 40 (rexp -> rexp LT aexp .)
    LT              reduce using rule 40 (rexp -> rexp LT aexp .)
    EQ              reduce using rule 40 (rexp -> rexp LT aexp .)
    NE              reduce using rule 40 (rexp -> rexp LT aexp .)
    COMMA           reduce using rule 40 (rexp -> rexp LT aexp .)
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 114

    (41) rexp -> rexp EQ aexp .
    (44) aexp -> aexp . PLUS mexp
    (45) aexp -> aexp . MINUS mexp

    SEMI            reduce using rule 41 (rexp -> rexp EQ aexp .)
    RPAREN          reduce using rule 41 (rexp -> rexp EQ aexp .)
    RBRACK          reduce using rule 41 (rexp -> rexp EQ aexp .)
    LAND            reduce using rule 41 (rexp -> rexp EQ aexp .)
    LOR             reduce using rule 41 (rexp -> rexp EQ aexp .)
    LT              reduce using rule 41 (rexp -> rexp EQ aexp .)
    EQ              reduce using rule 41 (rexp -> rexp EQ aexp .)
    NE              reduce using rule 41 (rexp -> rexp EQ aexp .)
    COMMA           reduce using rule 41 (rexp -> rexp EQ aexp .)
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 115

    (42) rexp -> rexp NE aexp .
    (44) aexp -> aexp . PLUS mexp
    (45) aexp -> aexp . MINUS mexp

    SEMI            reduce using rule 42 (rexp -> rexp NE aexp .)
    RPAREN          reduce using rule 42 (rexp -> rexp NE aexp .)
    RBRACK          reduce using rule 42 (rexp -> rexp NE aexp .)
    LAND            reduce using rule 42 (rexp -> rexp NE aexp .)
    LOR             reduce using rule 42 (rexp -> rexp NE aexp .)
    LT              reduce using rule 42 (rexp -> rexp NE aexp .)
    EQ              reduce using rule 42 (rexp -> rexp NE aexp .)
    NE              reduce using rule 42 (rexp -> rexp NE aexp .)
    COMMA           reduce using rule 42 (rexp -> rexp NE aexp .)
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 116

    (44) aexp -> aexp PLUS mexp .
    (47) mexp -> mexp . TIMES sexp
    (48) mexp -> mexp . DIVIDE sexp

    SEMI            reduce using rule 44 (aexp -> aexp PLUS mexp .)
    RPAREN          reduce using rule 44 (aexp -> aexp PLUS mexp .)
    RBRACK          reduce using rule 44 (aexp -> aexp PLUS mexp .)
    LAND            reduce using rule 44 (aexp -> aexp PLUS mexp .)
    LOR             reduce using rule 44 (aexp -> aexp PLUS mexp .)
    LT              reduce using rule 44 (aexp -> aexp PLUS mexp .)
    EQ              reduce using rule 44 (aexp -> aexp PLUS mexp .)
    NE              reduce using rule 44 (aexp -> aexp PLUS mexp .)
    PLUS            reduce using rule 44 (aexp -> aexp PLUS mexp .)
    MINUS           reduce using rule 44 (aexp -> aexp PLUS mexp .)
    COMMA           reduce using rule 44 (aexp -> aexp PLUS mexp .)
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98


state 117

    (45) aexp -> aexp MINUS mexp .
    (47) mexp -> mexp . TIMES sexp
    (48) mexp -> mexp . DIVIDE sexp

    SEMI            reduce using rule 45 (aexp -> aexp MINUS mexp .)
    RPAREN          reduce using rule 45 (aexp -> aexp MINUS mexp .)
    RBRACK          reduce using rule 45 (aexp -> aexp MINUS mexp .)
    LAND            reduce using rule 45 (aexp -> aexp MINUS mexp .)
    LOR             reduce using rule 45 (aexp -> aexp MINUS mexp .)
    LT              reduce using rule 45 (aexp -> aexp MINUS mexp .)
    EQ              reduce using rule 45 (aexp -> aexp MINUS mexp .)
    NE              reduce using rule 45 (aexp -> aexp MINUS mexp .)
    PLUS            reduce using rule 45 (aexp -> aexp MINUS mexp .)
    MINUS           reduce using rule 45 (aexp -> aexp MINUS mexp .)
    COMMA           reduce using rule 45 (aexp -> aexp MINUS mexp .)
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98


state 118

    (47) mexp -> mexp TIMES sexp .

    SEMI            reduce using rule 47 (mexp -> mexp TIMES sexp .)
    RPAREN          reduce using rule 47 (mexp -> mexp TIMES sexp .)
    RBRACK          reduce using rule 47 (mexp -> mexp TIMES sexp .)
    LAND            reduce using rule 47 (mexp -> mexp TIMES sexp .)
    LOR             reduce using rule 47 (mexp -> mexp TIMES sexp .)
    LT              reduce using rule 47 (mexp -> mexp TIMES sexp .)
    EQ              reduce using rule 47 (mexp -> mexp TIMES sexp .)
    NE              reduce using rule 47 (mexp -> mexp TIMES sexp .)
    PLUS            reduce using rule 47 (mexp -> mexp TIMES sexp .)
    MINUS           reduce using rule 47 (mexp -> mexp TIMES sexp .)
    TIMES           reduce using rule 47 (mexp -> mexp TIMES sexp .)
    DIVIDE          reduce using rule 47 (mexp -> mexp TIMES sexp .)
    COMMA           reduce using rule 47 (mexp -> mexp TIMES sexp .)


state 119

    (48) mexp -> mexp DIVIDE sexp .

    SEMI            reduce using rule 48 (mexp -> mexp DIVIDE sexp .)
    RPAREN          reduce using rule 48 (mexp -> mexp DIVIDE sexp .)
    RBRACK          reduce using rule 48 (mexp -> mexp DIVIDE sexp .)
    LAND            reduce using rule 48 (mexp -> mexp DIVIDE sexp .)
    LOR             reduce using rule 48 (mexp -> mexp DIVIDE sexp .)
    LT              reduce using rule 48 (mexp -> mexp DIVIDE sexp .)
    EQ              reduce using rule 48 (mexp -> mexp DIVIDE sexp .)
    NE              reduce using rule 48 (mexp -> mexp DIVIDE sexp .)
    PLUS            reduce using rule 48 (mexp -> mexp DIVIDE sexp .)
    MINUS           reduce using rule 48 (mexp -> mexp DIVIDE sexp .)
    TIMES           reduce using rule 48 (mexp -> mexp DIVIDE sexp .)
    DIVIDE          reduce using rule 48 (mexp -> mexp DIVIDE sexp .)
    COMMA           reduce using rule 48 (mexp -> mexp DIVIDE sexp .)


state 120

    (56) sexp -> NEW INT LBRACK . exp RBRACK
    (37) exp -> . exp LAND rexp
    (38) exp -> . exp LOR rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LT aexp
    (41) rexp -> . rexp EQ aexp
    (42) rexp -> . rexp NE aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    exp                            shift and go to state 131
    rexp                           shift and go to state 69
    aexp                           shift and go to state 70
    mexp                           shift and go to state 71
    sexp                           shift and go to state 73
    pexp                           shift and go to state 80

state 121

    (62) pexp -> NEW ID LPAREN . RPAREN

    RPAREN          shift and go to state 132


state 122

    (57) sexp -> pexp POINT LENGTH .

    SEMI            reduce using rule 57 (sexp -> pexp POINT LENGTH .)
    RPAREN          reduce using rule 57 (sexp -> pexp POINT LENGTH .)
    RBRACK          reduce using rule 57 (sexp -> pexp POINT LENGTH .)
    LAND            reduce using rule 57 (sexp -> pexp POINT LENGTH .)
    LOR             reduce using rule 57 (sexp -> pexp POINT LENGTH .)
    LT              reduce using rule 57 (sexp -> pexp POINT LENGTH .)
    EQ              reduce using rule 57 (sexp -> pexp POINT LENGTH .)
    NE              reduce using rule 57 (sexp -> pexp POINT LENGTH .)
    PLUS            reduce using rule 57 (sexp -> pexp POINT LENGTH .)
    MINUS           reduce using rule 57 (sexp -> pexp POINT LENGTH .)
    TIMES           reduce using rule 57 (sexp -> pexp POINT LENGTH .)
    DIVIDE          reduce using rule 57 (sexp -> pexp POINT LENGTH .)
    COMMA           reduce using rule 57 (sexp -> pexp POINT LENGTH .)


state 123

    (63) pexp -> pexp POINT ID . LPAREN expopcionalmetodo RPAREN
    (64) pexp -> pexp POINT ID . LPAREN RPAREN
    (65) pexp -> pexp POINT ID .

    LPAREN          shift and go to state 133
    POINT           reduce using rule 65 (pexp -> pexp POINT ID .)
    LBRACK          reduce using rule 65 (pexp -> pexp POINT ID .)
    SEMI            reduce using rule 65 (pexp -> pexp POINT ID .)
    RPAREN          reduce using rule 65 (pexp -> pexp POINT ID .)
    RBRACK          reduce using rule 65 (pexp -> pexp POINT ID .)
    LAND            reduce using rule 65 (pexp -> pexp POINT ID .)
    LOR             reduce using rule 65 (pexp -> pexp POINT ID .)
    LT              reduce using rule 65 (pexp -> pexp POINT ID .)
    EQ              reduce using rule 65 (pexp -> pexp POINT ID .)
    NE              reduce using rule 65 (pexp -> pexp POINT ID .)
    PLUS            reduce using rule 65 (pexp -> pexp POINT ID .)
    MINUS           reduce using rule 65 (pexp -> pexp POINT ID .)
    TIMES           reduce using rule 65 (pexp -> pexp POINT ID .)
    DIVIDE          reduce using rule 65 (pexp -> pexp POINT ID .)
    COMMA           reduce using rule 65 (pexp -> pexp POINT ID .)


state 124

    (58) sexp -> pexp LBRACK exp . RBRACK
    (37) exp -> exp . LAND rexp
    (38) exp -> exp . LOR rexp

    RBRACK          shift and go to state 134
    LAND            shift and go to state 90
    LOR             shift and go to state 91


state 125

    (33) otherstmt -> ID LBRACK exp RBRACK ASSIGN . exp SEMI
    (37) exp -> . exp LAND rexp
    (38) exp -> . exp LOR rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LT aexp
    (41) rexp -> . rexp EQ aexp
    (42) rexp -> . rexp NE aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    exp                            shift and go to state 135
    rexp                           shift and go to state 69
    aexp                           shift and go to state 70
    mexp                           shift and go to state 71
    sexp                           shift and go to state 73
    pexp                           shift and go to state 80

state 126

    (34) condstmt -> IF LPAREN exp RPAREN cmd . matchornot
    (35) matchornot -> . ELSE cmd
    (36) matchornot -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 137
    RBRACE          reduce using rule 36 (matchornot -> .)
    RETURN          reduce using rule 36 (matchornot -> .)
    IF              reduce using rule 36 (matchornot -> .)
    LBRACE          reduce using rule 36 (matchornot -> .)
    WHILE           reduce using rule 36 (matchornot -> .)
    SOUTPL          reduce using rule 36 (matchornot -> .)
    ID              reduce using rule 36 (matchornot -> .)

  ! ELSE            [ reduce using rule 36 (matchornot -> .) ]

    matchornot                     shift and go to state 136

state 127

    (30) otherstmt -> WHILE LPAREN exp RPAREN cmd .

    RBRACE          reduce using rule 30 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    RETURN          reduce using rule 30 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    IF              reduce using rule 30 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    LBRACE          reduce using rule 30 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    WHILE           reduce using rule 30 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    SOUTPL          reduce using rule 30 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    ID              reduce using rule 30 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    ELSE            reduce using rule 30 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)


state 128

    (31) otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .

    RBRACE          reduce using rule 31 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    RETURN          reduce using rule 31 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    IF              reduce using rule 31 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    LBRACE          reduce using rule 31 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    WHILE           reduce using rule 31 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    SOUTPL          reduce using rule 31 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    ID              reduce using rule 31 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    ELSE            reduce using rule 31 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)


state 129

    (21) listaparamsextra -> listaparamsextra COMMA tipo . ID

    ID              shift and go to state 138


state 130

    (15) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds . RETURN exp SEMI RBRACE
    (18) cmds -> cmds . cmd
    (27) cmd -> . condstmt
    (28) cmd -> . otherstmt
    (34) condstmt -> . IF LPAREN exp RPAREN cmd matchornot
    (29) otherstmt -> . LBRACE cmds RBRACE
    (30) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (31) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (32) otherstmt -> . ID ASSIGN exp SEMI
    (33) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    RETURN          shift and go to state 139
    IF              shift and go to state 53
    LBRACE          shift and go to state 48
    WHILE           shift and go to state 54
    SOUTPL          shift and go to state 55
    ID              shift and go to state 47

    cmd                            shift and go to state 50
    condstmt                       shift and go to state 51
    otherstmt                      shift and go to state 52

state 131

    (56) sexp -> NEW INT LBRACK exp . RBRACK
    (37) exp -> exp . LAND rexp
    (38) exp -> exp . LOR rexp

    RBRACK          shift and go to state 140
    LAND            shift and go to state 90
    LOR             shift and go to state 91


state 132

    (62) pexp -> NEW ID LPAREN RPAREN .

    POINT           reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    LBRACK          reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    SEMI            reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    RPAREN          reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    RBRACK          reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    LAND            reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    LOR             reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    LT              reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    EQ              reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    NE              reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    PLUS            reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    MINUS           reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    TIMES           reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    COMMA           reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)


state 133

    (63) pexp -> pexp POINT ID LPAREN . expopcionalmetodo RPAREN
    (64) pexp -> pexp POINT ID LPAREN . RPAREN
    (66) expopcionalmetodo -> . exps
    (67) exps -> . exp expslist
    (37) exp -> . exp LAND rexp
    (38) exp -> . exp LOR rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LT aexp
    (41) rexp -> . rexp EQ aexp
    (42) rexp -> . rexp NE aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    RPAREN          shift and go to state 142
    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    pexp                           shift and go to state 80
    expopcionalmetodo              shift and go to state 141
    exps                           shift and go to state 143
    exp                            shift and go to state 144
    rexp                           shift and go to state 69
    aexp                           shift and go to state 70
    mexp                           shift and go to state 71
    sexp                           shift and go to state 73

state 134

    (58) sexp -> pexp LBRACK exp RBRACK .

    SEMI            reduce using rule 58 (sexp -> pexp LBRACK exp RBRACK .)
    RPAREN          reduce using rule 58 (sexp -> pexp LBRACK exp RBRACK .)
    RBRACK          reduce using rule 58 (sexp -> pexp LBRACK exp RBRACK .)
    LAND            reduce using rule 58 (sexp -> pexp LBRACK exp RBRACK .)
    LOR             reduce using rule 58 (sexp -> pexp LBRACK exp RBRACK .)
    LT              reduce using rule 58 (sexp -> pexp LBRACK exp RBRACK .)
    EQ              reduce using rule 58 (sexp -> pexp LBRACK exp RBRACK .)
    NE              reduce using rule 58 (sexp -> pexp LBRACK exp RBRACK .)
    PLUS            reduce using rule 58 (sexp -> pexp LBRACK exp RBRACK .)
    MINUS           reduce using rule 58 (sexp -> pexp LBRACK exp RBRACK .)
    TIMES           reduce using rule 58 (sexp -> pexp LBRACK exp RBRACK .)
    DIVIDE          reduce using rule 58 (sexp -> pexp LBRACK exp RBRACK .)
    COMMA           reduce using rule 58 (sexp -> pexp LBRACK exp RBRACK .)


state 135

    (33) otherstmt -> ID LBRACK exp RBRACK ASSIGN exp . SEMI
    (37) exp -> exp . LAND rexp
    (38) exp -> exp . LOR rexp

    SEMI            shift and go to state 145
    LAND            shift and go to state 90
    LOR             shift and go to state 91


state 136

    (34) condstmt -> IF LPAREN exp RPAREN cmd matchornot .

    RBRACE          reduce using rule 34 (condstmt -> IF LPAREN exp RPAREN cmd matchornot .)
    RETURN          reduce using rule 34 (condstmt -> IF LPAREN exp RPAREN cmd matchornot .)
    IF              reduce using rule 34 (condstmt -> IF LPAREN exp RPAREN cmd matchornot .)
    LBRACE          reduce using rule 34 (condstmt -> IF LPAREN exp RPAREN cmd matchornot .)
    WHILE           reduce using rule 34 (condstmt -> IF LPAREN exp RPAREN cmd matchornot .)
    SOUTPL          reduce using rule 34 (condstmt -> IF LPAREN exp RPAREN cmd matchornot .)
    ID              reduce using rule 34 (condstmt -> IF LPAREN exp RPAREN cmd matchornot .)
    ELSE            reduce using rule 34 (condstmt -> IF LPAREN exp RPAREN cmd matchornot .)


state 137

    (35) matchornot -> ELSE . cmd
    (27) cmd -> . condstmt
    (28) cmd -> . otherstmt
    (34) condstmt -> . IF LPAREN exp RPAREN cmd matchornot
    (29) otherstmt -> . LBRACE cmds RBRACE
    (30) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (31) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (32) otherstmt -> . ID ASSIGN exp SEMI
    (33) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    IF              shift and go to state 53
    LBRACE          shift and go to state 48
    WHILE           shift and go to state 54
    SOUTPL          shift and go to state 55
    ID              shift and go to state 47

    cmd                            shift and go to state 146
    condstmt                       shift and go to state 51
    otherstmt                      shift and go to state 52

state 138

    (21) listaparamsextra -> listaparamsextra COMMA tipo ID .

    RPAREN          reduce using rule 21 (listaparamsextra -> listaparamsextra COMMA tipo ID .)
    COMMA           reduce using rule 21 (listaparamsextra -> listaparamsextra COMMA tipo ID .)


state 139

    (15) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN . exp SEMI RBRACE
    (37) exp -> . exp LAND rexp
    (38) exp -> . exp LOR rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LT aexp
    (41) rexp -> . rexp EQ aexp
    (42) rexp -> . rexp NE aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    exp                            shift and go to state 147
    rexp                           shift and go to state 69
    aexp                           shift and go to state 70
    mexp                           shift and go to state 71
    sexp                           shift and go to state 73
    pexp                           shift and go to state 80

state 140

    (56) sexp -> NEW INT LBRACK exp RBRACK .

    SEMI            reduce using rule 56 (sexp -> NEW INT LBRACK exp RBRACK .)
    RPAREN          reduce using rule 56 (sexp -> NEW INT LBRACK exp RBRACK .)
    RBRACK          reduce using rule 56 (sexp -> NEW INT LBRACK exp RBRACK .)
    LAND            reduce using rule 56 (sexp -> NEW INT LBRACK exp RBRACK .)
    LOR             reduce using rule 56 (sexp -> NEW INT LBRACK exp RBRACK .)
    LT              reduce using rule 56 (sexp -> NEW INT LBRACK exp RBRACK .)
    EQ              reduce using rule 56 (sexp -> NEW INT LBRACK exp RBRACK .)
    NE              reduce using rule 56 (sexp -> NEW INT LBRACK exp RBRACK .)
    PLUS            reduce using rule 56 (sexp -> NEW INT LBRACK exp RBRACK .)
    MINUS           reduce using rule 56 (sexp -> NEW INT LBRACK exp RBRACK .)
    TIMES           reduce using rule 56 (sexp -> NEW INT LBRACK exp RBRACK .)
    DIVIDE          reduce using rule 56 (sexp -> NEW INT LBRACK exp RBRACK .)
    COMMA           reduce using rule 56 (sexp -> NEW INT LBRACK exp RBRACK .)


state 141

    (63) pexp -> pexp POINT ID LPAREN expopcionalmetodo . RPAREN

    RPAREN          shift and go to state 148


state 142

    (64) pexp -> pexp POINT ID LPAREN RPAREN .

    POINT           reduce using rule 64 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LBRACK          reduce using rule 64 (pexp -> pexp POINT ID LPAREN RPAREN .)
    SEMI            reduce using rule 64 (pexp -> pexp POINT ID LPAREN RPAREN .)
    RPAREN          reduce using rule 64 (pexp -> pexp POINT ID LPAREN RPAREN .)
    RBRACK          reduce using rule 64 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LAND            reduce using rule 64 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LOR             reduce using rule 64 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LT              reduce using rule 64 (pexp -> pexp POINT ID LPAREN RPAREN .)
    EQ              reduce using rule 64 (pexp -> pexp POINT ID LPAREN RPAREN .)
    NE              reduce using rule 64 (pexp -> pexp POINT ID LPAREN RPAREN .)
    PLUS            reduce using rule 64 (pexp -> pexp POINT ID LPAREN RPAREN .)
    MINUS           reduce using rule 64 (pexp -> pexp POINT ID LPAREN RPAREN .)
    TIMES           reduce using rule 64 (pexp -> pexp POINT ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 64 (pexp -> pexp POINT ID LPAREN RPAREN .)
    COMMA           reduce using rule 64 (pexp -> pexp POINT ID LPAREN RPAREN .)


state 143

    (66) expopcionalmetodo -> exps .

    RPAREN          reduce using rule 66 (expopcionalmetodo -> exps .)


state 144

    (67) exps -> exp . expslist
    (37) exp -> exp . LAND rexp
    (38) exp -> exp . LOR rexp
    (68) expslist -> . expslist COMMA exp
    (69) expslist -> .

    LAND            shift and go to state 90
    LOR             shift and go to state 91
    RPAREN          reduce using rule 69 (expslist -> .)
    COMMA           reduce using rule 69 (expslist -> .)

    expslist                       shift and go to state 149

state 145

    (33) otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .

    RBRACE          reduce using rule 33 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    RETURN          reduce using rule 33 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    IF              reduce using rule 33 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    LBRACE          reduce using rule 33 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    WHILE           reduce using rule 33 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    SOUTPL          reduce using rule 33 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    ID              reduce using rule 33 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    ELSE            reduce using rule 33 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)


state 146

    (35) matchornot -> ELSE cmd .

    RBRACE          reduce using rule 35 (matchornot -> ELSE cmd .)
    RETURN          reduce using rule 35 (matchornot -> ELSE cmd .)
    IF              reduce using rule 35 (matchornot -> ELSE cmd .)
    LBRACE          reduce using rule 35 (matchornot -> ELSE cmd .)
    WHILE           reduce using rule 35 (matchornot -> ELSE cmd .)
    SOUTPL          reduce using rule 35 (matchornot -> ELSE cmd .)
    ID              reduce using rule 35 (matchornot -> ELSE cmd .)
    ELSE            reduce using rule 35 (matchornot -> ELSE cmd .)


state 147

    (15) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp . SEMI RBRACE
    (37) exp -> exp . LAND rexp
    (38) exp -> exp . LOR rexp

    SEMI            shift and go to state 150
    LAND            shift and go to state 90
    LOR             shift and go to state 91


state 148

    (63) pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .

    POINT           reduce using rule 63 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LBRACK          reduce using rule 63 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    SEMI            reduce using rule 63 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    RPAREN          reduce using rule 63 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    RBRACK          reduce using rule 63 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LAND            reduce using rule 63 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LOR             reduce using rule 63 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LT              reduce using rule 63 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    EQ              reduce using rule 63 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    NE              reduce using rule 63 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    PLUS            reduce using rule 63 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    MINUS           reduce using rule 63 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    TIMES           reduce using rule 63 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    DIVIDE          reduce using rule 63 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    COMMA           reduce using rule 63 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)


state 149

    (67) exps -> exp expslist .
    (68) expslist -> expslist . COMMA exp

    RPAREN          reduce using rule 67 (exps -> exp expslist .)
    COMMA           shift and go to state 151


state 150

    (15) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI . RBRACE

    RBRACE          shift and go to state 152


state 151

    (68) expslist -> expslist COMMA . exp
    (37) exp -> . exp LAND rexp
    (38) exp -> . exp LOR rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LT aexp
    (41) rexp -> . rexp EQ aexp
    (42) rexp -> . rexp NE aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . mexp DIVIDE sexp
    (49) mexp -> . sexp
    (50) sexp -> . LNOT sexp
    (51) sexp -> . MINUS sexp
    (52) sexp -> . TRUE
    (53) sexp -> . FALSE
    (54) sexp -> . NUMBER
    (55) sexp -> . NULL
    (56) sexp -> . NEW INT LBRACK exp RBRACK
    (57) sexp -> . pexp POINT LENGTH
    (58) sexp -> . pexp LBRACK exp RBRACK
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (64) pexp -> . pexp POINT ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID

    LNOT            shift and go to state 74
    MINUS           shift and go to state 72
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NUMBER          shift and go to state 77
    NULL            shift and go to state 78
    NEW             shift and go to state 79
    ID              shift and go to state 67
    THIS            shift and go to state 81

    exp                            shift and go to state 153
    rexp                           shift and go to state 69
    aexp                           shift and go to state 70
    mexp                           shift and go to state 71
    sexp                           shift and go to state 73
    pexp                           shift and go to state 80

state 152

    (15) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE .

    RBRACE          reduce using rule 15 (metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE .)
    PUBLIC          reduce using rule 15 (metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE .)


state 153

    (68) expslist -> expslist COMMA exp .
    (37) exp -> exp . LAND rexp
    (38) exp -> exp . LOR rexp

    RPAREN          reduce using rule 68 (expslist -> expslist COMMA exp .)
    COMMA           reduce using rule 68 (expslist -> expslist COMMA exp .)
    LAND            shift and go to state 90
    LOR             shift and go to state 91

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 110 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 126 resolved as shift
