Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    GE
    GT
    LE

Grammar

Rule 0     S' -> prog
Rule 1     prog -> main multiclass
Rule 2     multiclass -> multiclass classe
Rule 3     multiclass -> <empty>
Rule 4     main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE
Rule 5     classe -> CLASS ID extends LBRACE variaveis metodos RBRACE
Rule 6     extends -> EXTENDS ID
Rule 7     extends -> <empty>
Rule 8     variaveis -> variaveis var
Rule 9     variaveis -> <empty>
Rule 10    metodos -> metodos metodo
Rule 11    metodos -> <empty>
Rule 12    var -> tipo ID
Rule 13    metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE
Rule 14    paramsopcional -> params
Rule 15    paramsopcional -> <empty>
Rule 16    cmds -> cmds cmd
Rule 17    cmds -> <empty>
Rule 18    params -> tipo ID listaparamsextra
Rule 19    listaparamsextra -> listaparamsextra COMMA tipo ID
Rule 20    listaparamsextra -> <empty>
Rule 21    tipo -> INT LBRACK RBRACK
Rule 22    tipo -> BOOL
Rule 23    tipo -> INT
Rule 24    tipo -> ID
Rule 25    cmd -> condstmt
Rule 26    cmd -> otherstmt
Rule 27    otherstmt -> LBRACE cmds RBRACE
Rule 28    otherstmt -> WHILE LPAREN exp RPAREN cmd
Rule 29    otherstmt -> SOUTPL LPAREN exp RPAREN SEMI
Rule 30    otherstmt -> ID ASSIGN exp SEMI
Rule 31    otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI
Rule 32    condstmt -> match
Rule 33    condstmt -> unmatch
Rule 34    match -> IF LPAREN exp RPAREN match ELSE match
Rule 35    match -> otherstmt
Rule 36    unmatch -> IF LPAREN exp RPAREN unmatch
Rule 37    unmatch -> IF LPAREN exp RPAREN match ELSE unmatch
Rule 38    unmatch -> otherstmt
Rule 39    exp -> exp LAND rexp
Rule 40    exp -> exp LOR rexp
Rule 41    exp -> rexp
Rule 42    rexp -> rexp LT aexp
Rule 43    rexp -> rexp EQ aexp
Rule 44    rexp -> rexp NE aexp
Rule 45    rexp -> aexp
Rule 46    aexp -> aexp PLUS mexp
Rule 47    aexp -> aexp MINUS mexp
Rule 48    aexp -> mexp
Rule 49    mexp -> mexp TIMES sexp
Rule 50    mexp -> mexp DIVIDE sexp
Rule 51    mexp -> sexp
Rule 52    sexp -> LNOT sexp
Rule 53    sexp -> MINUS sexp
Rule 54    sexp -> TRUE
Rule 55    sexp -> FALSE
Rule 56    sexp -> NUMBER
Rule 57    sexp -> NULL
Rule 58    sexp -> NEW INT LBRACK exp RBRACK
Rule 59    sexp -> pexp POINT LENGTH
Rule 60    sexp -> pexp LBRACK exp RBRACK
Rule 61    sexp -> pexp
Rule 62    pexp -> ID
Rule 63    pexp -> THIS
Rule 64    pexp -> NEW ID LPAREN RPAREN
Rule 65    pexp -> pexp POINT ID
Rule 66    pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN
Rule 67    pexp -> pexp POINT ID LPAREN RPAREN
Rule 68    expopcionalmetodo -> exps
Rule 69    exps -> exp expslist
Rule 70    expslist -> expslist COMMA exp
Rule 71    expslist -> <empty>

Terminals, with rules where they appear

ASSIGN               : 30 31
BOOL                 : 22
CLASS                : 4 5
COLON                : 
COMMA                : 19 70
DIVIDE               : 50
ELSE                 : 34 37
EQ                   : 43
EXTENDS              : 6
FALSE                : 55
GE                   : 
GT                   : 
ID                   : 4 4 5 6 12 13 18 19 24 30 31 62 64 65 66 67
IF                   : 34 36 37
INT                  : 21 23 58
LAND                 : 39
LBRACE               : 4 4 5 13 27
LBRACK               : 4 21 31 58 60
LE                   : 
LENGTH               : 59
LNOT                 : 52
LOR                  : 40
LPAREN               : 4 13 28 29 34 36 37 64 66 67
LT                   : 42
MAIN                 : 4
MINUS                : 47 53
NE                   : 44
NEW                  : 58 64
NULL                 : 57
NUMBER               : 56
PLUS                 : 46
POINT                : 59 65 66 67
PUBLIC               : 4 13
RBRACE               : 4 4 5 13 27
RBRACK               : 4 21 31 58 60
RETURN               : 13
RPAREN               : 4 13 28 29 34 36 37 64 66 67
SEMI                 : 13 29 30 31
SOUTPL               : 29
STATIC               : 4
STRING               : 4
THIS                 : 63
TIMES                : 49
TRUE                 : 54
VOID                 : 4
WHILE                : 28
error                : 

Nonterminals, with rules where they appear

aexp                 : 42 43 44 45 46 47
classe               : 2
cmd                  : 16 28
cmds                 : 4 13 16 27
condstmt             : 25
exp                  : 13 28 29 30 31 31 34 36 37 39 40 58 60 69 70
expopcionalmetodo    : 66
exps                 : 68
expslist             : 69 70
extends              : 5
listaparamsextra     : 18 19
main                 : 1
match                : 32 34 34 37
metodo               : 10
metodos              : 5 10
mexp                 : 46 47 48 49 50
multiclass           : 1 2
otherstmt            : 26 35 38
params               : 14
paramsopcional       : 13
pexp                 : 59 60 61 65 66 67
prog                 : 0
rexp                 : 39 40 41 42 43 44
sexp                 : 49 50 51 52 53
tipo                 : 12 13 18 19
unmatch              : 33 36 37
var                  : 8
variaveis            : 5 8 13

Parsing method: SLR

state 0

    (0) S' -> . prog
    (1) prog -> . main multiclass
    (4) main -> . CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    CLASS           shift and go to state 3

    prog                           shift and go to state 1
    main                           shift and go to state 2

state 1

    (0) S' -> prog .



state 2

    (1) prog -> main . multiclass
    (2) multiclass -> . multiclass classe
    (3) multiclass -> .

    $end            reduce using rule 3 (multiclass -> .)
    CLASS           reduce using rule 3 (multiclass -> .)

    multiclass                     shift and go to state 4

state 3

    (4) main -> CLASS . ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    ID              shift and go to state 5


state 4

    (1) prog -> main multiclass .
    (2) multiclass -> multiclass . classe
    (5) classe -> . CLASS ID extends LBRACE variaveis metodos RBRACE

    $end            reduce using rule 1 (prog -> main multiclass .)
    CLASS           shift and go to state 7

    classe                         shift and go to state 6

state 5

    (4) main -> CLASS ID . LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    LBRACE          shift and go to state 8


state 6

    (2) multiclass -> multiclass classe .

    $end            reduce using rule 2 (multiclass -> multiclass classe .)
    CLASS           reduce using rule 2 (multiclass -> multiclass classe .)


state 7

    (5) classe -> CLASS . ID extends LBRACE variaveis metodos RBRACE

    ID              shift and go to state 9


state 8

    (4) main -> CLASS ID LBRACE . PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    PUBLIC          shift and go to state 10


state 9

    (5) classe -> CLASS ID . extends LBRACE variaveis metodos RBRACE
    (6) extends -> . EXTENDS ID
    (7) extends -> .

    EXTENDS         shift and go to state 12
    LBRACE          reduce using rule 7 (extends -> .)

    extends                        shift and go to state 11

state 10

    (4) main -> CLASS ID LBRACE PUBLIC . STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    STATIC          shift and go to state 13


state 11

    (5) classe -> CLASS ID extends . LBRACE variaveis metodos RBRACE

    LBRACE          shift and go to state 14


state 12

    (6) extends -> EXTENDS . ID

    ID              shift and go to state 15


state 13

    (4) main -> CLASS ID LBRACE PUBLIC STATIC . VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    VOID            shift and go to state 16


state 14

    (5) classe -> CLASS ID extends LBRACE . variaveis metodos RBRACE
    (8) variaveis -> . variaveis var
    (9) variaveis -> .

    PUBLIC          reduce using rule 9 (variaveis -> .)
    RBRACE          reduce using rule 9 (variaveis -> .)
    INT             reduce using rule 9 (variaveis -> .)
    BOOL            reduce using rule 9 (variaveis -> .)
    ID              reduce using rule 9 (variaveis -> .)
    LBRACE          reduce using rule 9 (variaveis -> .)
    WHILE           reduce using rule 9 (variaveis -> .)
    SOUTPL          reduce using rule 9 (variaveis -> .)
    IF              reduce using rule 9 (variaveis -> .)
    RETURN          reduce using rule 9 (variaveis -> .)

    variaveis                      shift and go to state 17

state 15

    (6) extends -> EXTENDS ID .

    LBRACE          reduce using rule 6 (extends -> EXTENDS ID .)


state 16

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID . MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    MAIN            shift and go to state 18


state 17

    (5) classe -> CLASS ID extends LBRACE variaveis . metodos RBRACE
    (8) variaveis -> variaveis . var
    (10) metodos -> . metodos metodo
    (11) metodos -> .
    (12) var -> . tipo ID
    (21) tipo -> . INT LBRACK RBRACK
    (22) tipo -> . BOOL
    (23) tipo -> . INT
    (24) tipo -> . ID

    RBRACE          reduce using rule 11 (metodos -> .)
    PUBLIC          reduce using rule 11 (metodos -> .)
    INT             shift and go to state 23
    BOOL            shift and go to state 24
    ID              shift and go to state 19

    metodos                        shift and go to state 20
    var                            shift and go to state 21
    tipo                           shift and go to state 22

state 18

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN . LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    LPAREN          shift and go to state 25


state 19

    (24) tipo -> ID .

    ID              reduce using rule 24 (tipo -> ID .)


state 20

    (5) classe -> CLASS ID extends LBRACE variaveis metodos . RBRACE
    (10) metodos -> metodos . metodo
    (13) metodo -> . PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE

    RBRACE          shift and go to state 26
    PUBLIC          shift and go to state 28

    metodo                         shift and go to state 27

state 21

    (8) variaveis -> variaveis var .

    PUBLIC          reduce using rule 8 (variaveis -> variaveis var .)
    RBRACE          reduce using rule 8 (variaveis -> variaveis var .)
    INT             reduce using rule 8 (variaveis -> variaveis var .)
    BOOL            reduce using rule 8 (variaveis -> variaveis var .)
    ID              reduce using rule 8 (variaveis -> variaveis var .)
    LBRACE          reduce using rule 8 (variaveis -> variaveis var .)
    WHILE           reduce using rule 8 (variaveis -> variaveis var .)
    SOUTPL          reduce using rule 8 (variaveis -> variaveis var .)
    IF              reduce using rule 8 (variaveis -> variaveis var .)
    RETURN          reduce using rule 8 (variaveis -> variaveis var .)


state 22

    (12) var -> tipo . ID

    ID              shift and go to state 29


state 23

    (21) tipo -> INT . LBRACK RBRACK
    (23) tipo -> INT .

    LBRACK          shift and go to state 30
    ID              reduce using rule 23 (tipo -> INT .)


state 24

    (22) tipo -> BOOL .

    ID              reduce using rule 22 (tipo -> BOOL .)


state 25

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN . STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    STRING          shift and go to state 31


state 26

    (5) classe -> CLASS ID extends LBRACE variaveis metodos RBRACE .

    $end            reduce using rule 5 (classe -> CLASS ID extends LBRACE variaveis metodos RBRACE .)
    CLASS           reduce using rule 5 (classe -> CLASS ID extends LBRACE variaveis metodos RBRACE .)


state 27

    (10) metodos -> metodos metodo .

    RBRACE          reduce using rule 10 (metodos -> metodos metodo .)
    PUBLIC          reduce using rule 10 (metodos -> metodos metodo .)


state 28

    (13) metodo -> PUBLIC . tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE
    (21) tipo -> . INT LBRACK RBRACK
    (22) tipo -> . BOOL
    (23) tipo -> . INT
    (24) tipo -> . ID

    INT             shift and go to state 23
    BOOL            shift and go to state 24
    ID              shift and go to state 19

    tipo                           shift and go to state 32

state 29

    (12) var -> tipo ID .

    PUBLIC          reduce using rule 12 (var -> tipo ID .)
    RBRACE          reduce using rule 12 (var -> tipo ID .)
    INT             reduce using rule 12 (var -> tipo ID .)
    BOOL            reduce using rule 12 (var -> tipo ID .)
    ID              reduce using rule 12 (var -> tipo ID .)
    LBRACE          reduce using rule 12 (var -> tipo ID .)
    WHILE           reduce using rule 12 (var -> tipo ID .)
    SOUTPL          reduce using rule 12 (var -> tipo ID .)
    IF              reduce using rule 12 (var -> tipo ID .)
    RETURN          reduce using rule 12 (var -> tipo ID .)


state 30

    (21) tipo -> INT LBRACK . RBRACK

    RBRACK          shift and go to state 33


state 31

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING . LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    LBRACK          shift and go to state 34


state 32

    (13) metodo -> PUBLIC tipo . ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE

    ID              shift and go to state 35


state 33

    (21) tipo -> INT LBRACK RBRACK .

    ID              reduce using rule 21 (tipo -> INT LBRACK RBRACK .)


state 34

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK . RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    RBRACK          shift and go to state 36


state 35

    (13) metodo -> PUBLIC tipo ID . LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE

    LPAREN          shift and go to state 37


state 36

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK . ID RPAREN LBRACE cmds RBRACE RBRACE

    ID              shift and go to state 38


state 37

    (13) metodo -> PUBLIC tipo ID LPAREN . paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE
    (14) paramsopcional -> . params
    (15) paramsopcional -> .
    (18) params -> . tipo ID listaparamsextra
    (21) tipo -> . INT LBRACK RBRACK
    (22) tipo -> . BOOL
    (23) tipo -> . INT
    (24) tipo -> . ID

    RPAREN          reduce using rule 15 (paramsopcional -> .)
    INT             shift and go to state 23
    BOOL            shift and go to state 24
    ID              shift and go to state 19

    tipo                           shift and go to state 39
    paramsopcional                 shift and go to state 40
    params                         shift and go to state 41

state 38

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID . RPAREN LBRACE cmds RBRACE RBRACE

    RPAREN          shift and go to state 42


state 39

    (18) params -> tipo . ID listaparamsextra

    ID              shift and go to state 43


state 40

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional . RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE

    RPAREN          shift and go to state 44


state 41

    (14) paramsopcional -> params .

    RPAREN          reduce using rule 14 (paramsopcional -> params .)


state 42

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN . LBRACE cmds RBRACE RBRACE

    LBRACE          shift and go to state 45


state 43

    (18) params -> tipo ID . listaparamsextra
    (19) listaparamsextra -> . listaparamsextra COMMA tipo ID
    (20) listaparamsextra -> .

    RPAREN          reduce using rule 20 (listaparamsextra -> .)
    COMMA           reduce using rule 20 (listaparamsextra -> .)

    listaparamsextra               shift and go to state 46

state 44

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN . LBRACE variaveis cmds RETURN exp SEMI RBRACE

    LBRACE          shift and go to state 47


state 45

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE . cmds RBRACE RBRACE
    (16) cmds -> . cmds cmd
    (17) cmds -> .

    RBRACE          reduce using rule 17 (cmds -> .)
    RETURN          reduce using rule 17 (cmds -> .)
    LBRACE          reduce using rule 17 (cmds -> .)
    WHILE           reduce using rule 17 (cmds -> .)
    SOUTPL          reduce using rule 17 (cmds -> .)
    ID              reduce using rule 17 (cmds -> .)
    IF              reduce using rule 17 (cmds -> .)

    cmds                           shift and go to state 48

state 46

    (18) params -> tipo ID listaparamsextra .
    (19) listaparamsextra -> listaparamsextra . COMMA tipo ID

    RPAREN          reduce using rule 18 (params -> tipo ID listaparamsextra .)
    COMMA           shift and go to state 49


state 47

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE . variaveis cmds RETURN exp SEMI RBRACE
    (8) variaveis -> . variaveis var
    (9) variaveis -> .

    PUBLIC          reduce using rule 9 (variaveis -> .)
    RBRACE          reduce using rule 9 (variaveis -> .)
    INT             reduce using rule 9 (variaveis -> .)
    BOOL            reduce using rule 9 (variaveis -> .)
    ID              reduce using rule 9 (variaveis -> .)
    LBRACE          reduce using rule 9 (variaveis -> .)
    WHILE           reduce using rule 9 (variaveis -> .)
    SOUTPL          reduce using rule 9 (variaveis -> .)
    IF              reduce using rule 9 (variaveis -> .)
    RETURN          reduce using rule 9 (variaveis -> .)

    variaveis                      shift and go to state 50

state 48

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds . RBRACE RBRACE
    (16) cmds -> cmds . cmd
    (25) cmd -> . condstmt
    (26) cmd -> . otherstmt
    (32) condstmt -> . match
    (33) condstmt -> . unmatch
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI
    (34) match -> . IF LPAREN exp RPAREN match ELSE match
    (35) match -> . otherstmt
    (36) unmatch -> . IF LPAREN exp RPAREN unmatch
    (37) unmatch -> . IF LPAREN exp RPAREN match ELSE unmatch
    (38) unmatch -> . otherstmt

    RBRACE          shift and go to state 53
    LBRACE          shift and go to state 52
    WHILE           shift and go to state 59
    SOUTPL          shift and go to state 60
    ID              shift and go to state 51
    IF              shift and go to state 61

    cmd                            shift and go to state 54
    condstmt                       shift and go to state 55
    otherstmt                      shift and go to state 56
    match                          shift and go to state 57
    unmatch                        shift and go to state 58

state 49

    (19) listaparamsextra -> listaparamsextra COMMA . tipo ID
    (21) tipo -> . INT LBRACK RBRACK
    (22) tipo -> . BOOL
    (23) tipo -> . INT
    (24) tipo -> . ID

    INT             shift and go to state 23
    BOOL            shift and go to state 24
    ID              shift and go to state 19

    tipo                           shift and go to state 62

state 50

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis . cmds RETURN exp SEMI RBRACE
    (8) variaveis -> variaveis . var
    (16) cmds -> . cmds cmd
    (17) cmds -> .
    (12) var -> . tipo ID
    (21) tipo -> . INT LBRACK RBRACK
    (22) tipo -> . BOOL
    (23) tipo -> . INT
    (24) tipo -> . ID

  ! shift/reduce conflict for ID resolved as shift
    RBRACE          reduce using rule 17 (cmds -> .)
    RETURN          reduce using rule 17 (cmds -> .)
    LBRACE          reduce using rule 17 (cmds -> .)
    WHILE           reduce using rule 17 (cmds -> .)
    SOUTPL          reduce using rule 17 (cmds -> .)
    IF              reduce using rule 17 (cmds -> .)
    INT             shift and go to state 23
    BOOL            shift and go to state 24
    ID              shift and go to state 19

  ! ID              [ reduce using rule 17 (cmds -> .) ]

    tipo                           shift and go to state 22
    cmds                           shift and go to state 63
    var                            shift and go to state 21

state 51

    (30) otherstmt -> ID . ASSIGN exp SEMI
    (31) otherstmt -> ID . LBRACK exp RBRACK ASSIGN exp SEMI

    ASSIGN          shift and go to state 64
    LBRACK          shift and go to state 65


state 52

    (27) otherstmt -> LBRACE . cmds RBRACE
    (16) cmds -> . cmds cmd
    (17) cmds -> .

    RBRACE          reduce using rule 17 (cmds -> .)
    RETURN          reduce using rule 17 (cmds -> .)
    LBRACE          reduce using rule 17 (cmds -> .)
    WHILE           reduce using rule 17 (cmds -> .)
    SOUTPL          reduce using rule 17 (cmds -> .)
    ID              reduce using rule 17 (cmds -> .)
    IF              reduce using rule 17 (cmds -> .)

    cmds                           shift and go to state 66

state 53

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE . RBRACE

    RBRACE          shift and go to state 67


state 54

    (16) cmds -> cmds cmd .

    RBRACE          reduce using rule 16 (cmds -> cmds cmd .)
    RETURN          reduce using rule 16 (cmds -> cmds cmd .)
    LBRACE          reduce using rule 16 (cmds -> cmds cmd .)
    WHILE           reduce using rule 16 (cmds -> cmds cmd .)
    SOUTPL          reduce using rule 16 (cmds -> cmds cmd .)
    ID              reduce using rule 16 (cmds -> cmds cmd .)
    IF              reduce using rule 16 (cmds -> cmds cmd .)


state 55

    (25) cmd -> condstmt .

    RBRACE          reduce using rule 25 (cmd -> condstmt .)
    RETURN          reduce using rule 25 (cmd -> condstmt .)
    LBRACE          reduce using rule 25 (cmd -> condstmt .)
    WHILE           reduce using rule 25 (cmd -> condstmt .)
    SOUTPL          reduce using rule 25 (cmd -> condstmt .)
    ID              reduce using rule 25 (cmd -> condstmt .)
    IF              reduce using rule 25 (cmd -> condstmt .)
    ELSE            reduce using rule 25 (cmd -> condstmt .)


state 56

    (26) cmd -> otherstmt .
    (35) match -> otherstmt .
    (38) unmatch -> otherstmt .

  ! reduce/reduce conflict for RBRACE resolved using rule 26 (cmd -> otherstmt .)
  ! reduce/reduce conflict for RETURN resolved using rule 26 (cmd -> otherstmt .)
  ! reduce/reduce conflict for LBRACE resolved using rule 26 (cmd -> otherstmt .)
  ! reduce/reduce conflict for WHILE resolved using rule 26 (cmd -> otherstmt .)
  ! reduce/reduce conflict for SOUTPL resolved using rule 26 (cmd -> otherstmt .)
  ! reduce/reduce conflict for ID resolved using rule 26 (cmd -> otherstmt .)
  ! reduce/reduce conflict for IF resolved using rule 26 (cmd -> otherstmt .)
  ! reduce/reduce conflict for ELSE resolved using rule 26 (cmd -> otherstmt .)
  ! reduce/reduce conflict for RBRACE resolved using rule 26 (cmd -> otherstmt .)
  ! reduce/reduce conflict for RETURN resolved using rule 26 (cmd -> otherstmt .)
  ! reduce/reduce conflict for LBRACE resolved using rule 26 (cmd -> otherstmt .)
  ! reduce/reduce conflict for WHILE resolved using rule 26 (cmd -> otherstmt .)
  ! reduce/reduce conflict for SOUTPL resolved using rule 26 (cmd -> otherstmt .)
  ! reduce/reduce conflict for ID resolved using rule 26 (cmd -> otherstmt .)
  ! reduce/reduce conflict for IF resolved using rule 26 (cmd -> otherstmt .)
  ! reduce/reduce conflict for ELSE resolved using rule 26 (cmd -> otherstmt .)
    RBRACE          reduce using rule 26 (cmd -> otherstmt .)
    RETURN          reduce using rule 26 (cmd -> otherstmt .)
    LBRACE          reduce using rule 26 (cmd -> otherstmt .)
    WHILE           reduce using rule 26 (cmd -> otherstmt .)
    SOUTPL          reduce using rule 26 (cmd -> otherstmt .)
    ID              reduce using rule 26 (cmd -> otherstmt .)
    IF              reduce using rule 26 (cmd -> otherstmt .)
    ELSE            reduce using rule 26 (cmd -> otherstmt .)

  ! RBRACE          [ reduce using rule 35 (match -> otherstmt .) ]
  ! RETURN          [ reduce using rule 35 (match -> otherstmt .) ]
  ! LBRACE          [ reduce using rule 35 (match -> otherstmt .) ]
  ! WHILE           [ reduce using rule 35 (match -> otherstmt .) ]
  ! SOUTPL          [ reduce using rule 35 (match -> otherstmt .) ]
  ! ID              [ reduce using rule 35 (match -> otherstmt .) ]
  ! IF              [ reduce using rule 35 (match -> otherstmt .) ]
  ! ELSE            [ reduce using rule 35 (match -> otherstmt .) ]
  ! RBRACE          [ reduce using rule 38 (unmatch -> otherstmt .) ]
  ! RETURN          [ reduce using rule 38 (unmatch -> otherstmt .) ]
  ! LBRACE          [ reduce using rule 38 (unmatch -> otherstmt .) ]
  ! WHILE           [ reduce using rule 38 (unmatch -> otherstmt .) ]
  ! SOUTPL          [ reduce using rule 38 (unmatch -> otherstmt .) ]
  ! ID              [ reduce using rule 38 (unmatch -> otherstmt .) ]
  ! IF              [ reduce using rule 38 (unmatch -> otherstmt .) ]
  ! ELSE            [ reduce using rule 38 (unmatch -> otherstmt .) ]


state 57

    (32) condstmt -> match .

    RBRACE          reduce using rule 32 (condstmt -> match .)
    RETURN          reduce using rule 32 (condstmt -> match .)
    LBRACE          reduce using rule 32 (condstmt -> match .)
    WHILE           reduce using rule 32 (condstmt -> match .)
    SOUTPL          reduce using rule 32 (condstmt -> match .)
    ID              reduce using rule 32 (condstmt -> match .)
    IF              reduce using rule 32 (condstmt -> match .)
    ELSE            reduce using rule 32 (condstmt -> match .)


state 58

    (33) condstmt -> unmatch .

    RBRACE          reduce using rule 33 (condstmt -> unmatch .)
    RETURN          reduce using rule 33 (condstmt -> unmatch .)
    LBRACE          reduce using rule 33 (condstmt -> unmatch .)
    WHILE           reduce using rule 33 (condstmt -> unmatch .)
    SOUTPL          reduce using rule 33 (condstmt -> unmatch .)
    ID              reduce using rule 33 (condstmt -> unmatch .)
    IF              reduce using rule 33 (condstmt -> unmatch .)
    ELSE            reduce using rule 33 (condstmt -> unmatch .)


state 59

    (28) otherstmt -> WHILE . LPAREN exp RPAREN cmd

    LPAREN          shift and go to state 68


state 60

    (29) otherstmt -> SOUTPL . LPAREN exp RPAREN SEMI

    LPAREN          shift and go to state 69


state 61

    (34) match -> IF . LPAREN exp RPAREN match ELSE match
    (36) unmatch -> IF . LPAREN exp RPAREN unmatch
    (37) unmatch -> IF . LPAREN exp RPAREN match ELSE unmatch

    LPAREN          shift and go to state 70


state 62

    (19) listaparamsextra -> listaparamsextra COMMA tipo . ID

    ID              shift and go to state 71


state 63

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds . RETURN exp SEMI RBRACE
    (16) cmds -> cmds . cmd
    (25) cmd -> . condstmt
    (26) cmd -> . otherstmt
    (32) condstmt -> . match
    (33) condstmt -> . unmatch
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI
    (34) match -> . IF LPAREN exp RPAREN match ELSE match
    (35) match -> . otherstmt
    (36) unmatch -> . IF LPAREN exp RPAREN unmatch
    (37) unmatch -> . IF LPAREN exp RPAREN match ELSE unmatch
    (38) unmatch -> . otherstmt

    RETURN          shift and go to state 72
    LBRACE          shift and go to state 52
    WHILE           shift and go to state 59
    SOUTPL          shift and go to state 60
    ID              shift and go to state 51
    IF              shift and go to state 61

    cmd                            shift and go to state 54
    condstmt                       shift and go to state 55
    otherstmt                      shift and go to state 56
    match                          shift and go to state 57
    unmatch                        shift and go to state 58

state 64

    (30) otherstmt -> ID ASSIGN . exp SEMI
    (39) exp -> . exp LAND rexp
    (40) exp -> . exp LOR rexp
    (41) exp -> . rexp
    (42) rexp -> . rexp LT aexp
    (43) rexp -> . rexp EQ aexp
    (44) rexp -> . rexp NE aexp
    (45) rexp -> . aexp
    (46) aexp -> . aexp PLUS mexp
    (47) aexp -> . aexp MINUS mexp
    (48) aexp -> . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    exp                            shift and go to state 74
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 65

    (31) otherstmt -> ID LBRACK . exp RBRACK ASSIGN exp SEMI
    (39) exp -> . exp LAND rexp
    (40) exp -> . exp LOR rexp
    (41) exp -> . rexp
    (42) rexp -> . rexp LT aexp
    (43) rexp -> . rexp EQ aexp
    (44) rexp -> . rexp NE aexp
    (45) rexp -> . aexp
    (46) aexp -> . aexp PLUS mexp
    (47) aexp -> . aexp MINUS mexp
    (48) aexp -> . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    exp                            shift and go to state 88
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 66

    (27) otherstmt -> LBRACE cmds . RBRACE
    (16) cmds -> cmds . cmd
    (25) cmd -> . condstmt
    (26) cmd -> . otherstmt
    (32) condstmt -> . match
    (33) condstmt -> . unmatch
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI
    (34) match -> . IF LPAREN exp RPAREN match ELSE match
    (35) match -> . otherstmt
    (36) unmatch -> . IF LPAREN exp RPAREN unmatch
    (37) unmatch -> . IF LPAREN exp RPAREN match ELSE unmatch
    (38) unmatch -> . otherstmt

    RBRACE          shift and go to state 89
    LBRACE          shift and go to state 52
    WHILE           shift and go to state 59
    SOUTPL          shift and go to state 60
    ID              shift and go to state 51
    IF              shift and go to state 61

    cmd                            shift and go to state 54
    condstmt                       shift and go to state 55
    otherstmt                      shift and go to state 56
    match                          shift and go to state 57
    unmatch                        shift and go to state 58

state 67

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE .

    CLASS           reduce using rule 4 (main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE .)
    $end            reduce using rule 4 (main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE .)


state 68

    (28) otherstmt -> WHILE LPAREN . exp RPAREN cmd
    (39) exp -> . exp LAND rexp
    (40) exp -> . exp LOR rexp
    (41) exp -> . rexp
    (42) rexp -> . rexp LT aexp
    (43) rexp -> . rexp EQ aexp
    (44) rexp -> . rexp NE aexp
    (45) rexp -> . aexp
    (46) aexp -> . aexp PLUS mexp
    (47) aexp -> . aexp MINUS mexp
    (48) aexp -> . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    exp                            shift and go to state 90
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 69

    (29) otherstmt -> SOUTPL LPAREN . exp RPAREN SEMI
    (39) exp -> . exp LAND rexp
    (40) exp -> . exp LOR rexp
    (41) exp -> . rexp
    (42) rexp -> . rexp LT aexp
    (43) rexp -> . rexp EQ aexp
    (44) rexp -> . rexp NE aexp
    (45) rexp -> . aexp
    (46) aexp -> . aexp PLUS mexp
    (47) aexp -> . aexp MINUS mexp
    (48) aexp -> . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    exp                            shift and go to state 91
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 70

    (34) match -> IF LPAREN . exp RPAREN match ELSE match
    (36) unmatch -> IF LPAREN . exp RPAREN unmatch
    (37) unmatch -> IF LPAREN . exp RPAREN match ELSE unmatch
    (39) exp -> . exp LAND rexp
    (40) exp -> . exp LOR rexp
    (41) exp -> . rexp
    (42) rexp -> . rexp LT aexp
    (43) rexp -> . rexp EQ aexp
    (44) rexp -> . rexp NE aexp
    (45) rexp -> . aexp
    (46) aexp -> . aexp PLUS mexp
    (47) aexp -> . aexp MINUS mexp
    (48) aexp -> . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    exp                            shift and go to state 92
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 71

    (19) listaparamsextra -> listaparamsextra COMMA tipo ID .

    RPAREN          reduce using rule 19 (listaparamsextra -> listaparamsextra COMMA tipo ID .)
    COMMA           reduce using rule 19 (listaparamsextra -> listaparamsextra COMMA tipo ID .)


state 72

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN . exp SEMI RBRACE
    (39) exp -> . exp LAND rexp
    (40) exp -> . exp LOR rexp
    (41) exp -> . rexp
    (42) rexp -> . rexp LT aexp
    (43) rexp -> . rexp EQ aexp
    (44) rexp -> . rexp NE aexp
    (45) rexp -> . aexp
    (46) aexp -> . aexp PLUS mexp
    (47) aexp -> . aexp MINUS mexp
    (48) aexp -> . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    exp                            shift and go to state 93
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 73

    (62) pexp -> ID .

    POINT           reduce using rule 62 (pexp -> ID .)
    LBRACK          reduce using rule 62 (pexp -> ID .)
    SEMI            reduce using rule 62 (pexp -> ID .)
    RPAREN          reduce using rule 62 (pexp -> ID .)
    RBRACK          reduce using rule 62 (pexp -> ID .)
    LAND            reduce using rule 62 (pexp -> ID .)
    LOR             reduce using rule 62 (pexp -> ID .)
    LT              reduce using rule 62 (pexp -> ID .)
    EQ              reduce using rule 62 (pexp -> ID .)
    NE              reduce using rule 62 (pexp -> ID .)
    PLUS            reduce using rule 62 (pexp -> ID .)
    MINUS           reduce using rule 62 (pexp -> ID .)
    TIMES           reduce using rule 62 (pexp -> ID .)
    DIVIDE          reduce using rule 62 (pexp -> ID .)
    COMMA           reduce using rule 62 (pexp -> ID .)


state 74

    (30) otherstmt -> ID ASSIGN exp . SEMI
    (39) exp -> exp . LAND rexp
    (40) exp -> exp . LOR rexp

    SEMI            shift and go to state 94
    LAND            shift and go to state 95
    LOR             shift and go to state 96


state 75

    (41) exp -> rexp .
    (42) rexp -> rexp . LT aexp
    (43) rexp -> rexp . EQ aexp
    (44) rexp -> rexp . NE aexp

    SEMI            reduce using rule 41 (exp -> rexp .)
    RPAREN          reduce using rule 41 (exp -> rexp .)
    RBRACK          reduce using rule 41 (exp -> rexp .)
    LAND            reduce using rule 41 (exp -> rexp .)
    LOR             reduce using rule 41 (exp -> rexp .)
    COMMA           reduce using rule 41 (exp -> rexp .)
    LT              shift and go to state 97
    EQ              shift and go to state 98
    NE              shift and go to state 99


state 76

    (45) rexp -> aexp .
    (46) aexp -> aexp . PLUS mexp
    (47) aexp -> aexp . MINUS mexp

    SEMI            reduce using rule 45 (rexp -> aexp .)
    RPAREN          reduce using rule 45 (rexp -> aexp .)
    RBRACK          reduce using rule 45 (rexp -> aexp .)
    LAND            reduce using rule 45 (rexp -> aexp .)
    LOR             reduce using rule 45 (rexp -> aexp .)
    LT              reduce using rule 45 (rexp -> aexp .)
    EQ              reduce using rule 45 (rexp -> aexp .)
    NE              reduce using rule 45 (rexp -> aexp .)
    COMMA           reduce using rule 45 (rexp -> aexp .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101


state 77

    (48) aexp -> mexp .
    (49) mexp -> mexp . TIMES sexp
    (50) mexp -> mexp . DIVIDE sexp

    SEMI            reduce using rule 48 (aexp -> mexp .)
    RPAREN          reduce using rule 48 (aexp -> mexp .)
    RBRACK          reduce using rule 48 (aexp -> mexp .)
    LAND            reduce using rule 48 (aexp -> mexp .)
    LOR             reduce using rule 48 (aexp -> mexp .)
    LT              reduce using rule 48 (aexp -> mexp .)
    EQ              reduce using rule 48 (aexp -> mexp .)
    NE              reduce using rule 48 (aexp -> mexp .)
    PLUS            reduce using rule 48 (aexp -> mexp .)
    MINUS           reduce using rule 48 (aexp -> mexp .)
    COMMA           reduce using rule 48 (aexp -> mexp .)
    TIMES           shift and go to state 102
    DIVIDE          shift and go to state 103


state 78

    (53) sexp -> MINUS . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    sexp                           shift and go to state 104
    pexp                           shift and go to state 86

state 79

    (51) mexp -> sexp .

    SEMI            reduce using rule 51 (mexp -> sexp .)
    RPAREN          reduce using rule 51 (mexp -> sexp .)
    RBRACK          reduce using rule 51 (mexp -> sexp .)
    LAND            reduce using rule 51 (mexp -> sexp .)
    LOR             reduce using rule 51 (mexp -> sexp .)
    LT              reduce using rule 51 (mexp -> sexp .)
    EQ              reduce using rule 51 (mexp -> sexp .)
    NE              reduce using rule 51 (mexp -> sexp .)
    PLUS            reduce using rule 51 (mexp -> sexp .)
    MINUS           reduce using rule 51 (mexp -> sexp .)
    TIMES           reduce using rule 51 (mexp -> sexp .)
    DIVIDE          reduce using rule 51 (mexp -> sexp .)
    COMMA           reduce using rule 51 (mexp -> sexp .)


state 80

    (52) sexp -> LNOT . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    sexp                           shift and go to state 105
    pexp                           shift and go to state 86

state 81

    (54) sexp -> TRUE .

    SEMI            reduce using rule 54 (sexp -> TRUE .)
    RPAREN          reduce using rule 54 (sexp -> TRUE .)
    RBRACK          reduce using rule 54 (sexp -> TRUE .)
    LAND            reduce using rule 54 (sexp -> TRUE .)
    LOR             reduce using rule 54 (sexp -> TRUE .)
    LT              reduce using rule 54 (sexp -> TRUE .)
    EQ              reduce using rule 54 (sexp -> TRUE .)
    NE              reduce using rule 54 (sexp -> TRUE .)
    PLUS            reduce using rule 54 (sexp -> TRUE .)
    MINUS           reduce using rule 54 (sexp -> TRUE .)
    TIMES           reduce using rule 54 (sexp -> TRUE .)
    DIVIDE          reduce using rule 54 (sexp -> TRUE .)
    COMMA           reduce using rule 54 (sexp -> TRUE .)


state 82

    (55) sexp -> FALSE .

    SEMI            reduce using rule 55 (sexp -> FALSE .)
    RPAREN          reduce using rule 55 (sexp -> FALSE .)
    RBRACK          reduce using rule 55 (sexp -> FALSE .)
    LAND            reduce using rule 55 (sexp -> FALSE .)
    LOR             reduce using rule 55 (sexp -> FALSE .)
    LT              reduce using rule 55 (sexp -> FALSE .)
    EQ              reduce using rule 55 (sexp -> FALSE .)
    NE              reduce using rule 55 (sexp -> FALSE .)
    PLUS            reduce using rule 55 (sexp -> FALSE .)
    MINUS           reduce using rule 55 (sexp -> FALSE .)
    TIMES           reduce using rule 55 (sexp -> FALSE .)
    DIVIDE          reduce using rule 55 (sexp -> FALSE .)
    COMMA           reduce using rule 55 (sexp -> FALSE .)


state 83

    (56) sexp -> NUMBER .

    SEMI            reduce using rule 56 (sexp -> NUMBER .)
    RPAREN          reduce using rule 56 (sexp -> NUMBER .)
    RBRACK          reduce using rule 56 (sexp -> NUMBER .)
    LAND            reduce using rule 56 (sexp -> NUMBER .)
    LOR             reduce using rule 56 (sexp -> NUMBER .)
    LT              reduce using rule 56 (sexp -> NUMBER .)
    EQ              reduce using rule 56 (sexp -> NUMBER .)
    NE              reduce using rule 56 (sexp -> NUMBER .)
    PLUS            reduce using rule 56 (sexp -> NUMBER .)
    MINUS           reduce using rule 56 (sexp -> NUMBER .)
    TIMES           reduce using rule 56 (sexp -> NUMBER .)
    DIVIDE          reduce using rule 56 (sexp -> NUMBER .)
    COMMA           reduce using rule 56 (sexp -> NUMBER .)


state 84

    (57) sexp -> NULL .

    SEMI            reduce using rule 57 (sexp -> NULL .)
    RPAREN          reduce using rule 57 (sexp -> NULL .)
    RBRACK          reduce using rule 57 (sexp -> NULL .)
    LAND            reduce using rule 57 (sexp -> NULL .)
    LOR             reduce using rule 57 (sexp -> NULL .)
    LT              reduce using rule 57 (sexp -> NULL .)
    EQ              reduce using rule 57 (sexp -> NULL .)
    NE              reduce using rule 57 (sexp -> NULL .)
    PLUS            reduce using rule 57 (sexp -> NULL .)
    MINUS           reduce using rule 57 (sexp -> NULL .)
    TIMES           reduce using rule 57 (sexp -> NULL .)
    DIVIDE          reduce using rule 57 (sexp -> NULL .)
    COMMA           reduce using rule 57 (sexp -> NULL .)


state 85

    (58) sexp -> NEW . INT LBRACK exp RBRACK
    (64) pexp -> NEW . ID LPAREN RPAREN

    INT             shift and go to state 106
    ID              shift and go to state 107


state 86

    (59) sexp -> pexp . POINT LENGTH
    (60) sexp -> pexp . LBRACK exp RBRACK
    (61) sexp -> pexp .
    (65) pexp -> pexp . POINT ID
    (66) pexp -> pexp . POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> pexp . POINT ID LPAREN RPAREN

    POINT           shift and go to state 108
    LBRACK          shift and go to state 109
    SEMI            reduce using rule 61 (sexp -> pexp .)
    RPAREN          reduce using rule 61 (sexp -> pexp .)
    RBRACK          reduce using rule 61 (sexp -> pexp .)
    LAND            reduce using rule 61 (sexp -> pexp .)
    LOR             reduce using rule 61 (sexp -> pexp .)
    LT              reduce using rule 61 (sexp -> pexp .)
    EQ              reduce using rule 61 (sexp -> pexp .)
    NE              reduce using rule 61 (sexp -> pexp .)
    PLUS            reduce using rule 61 (sexp -> pexp .)
    MINUS           reduce using rule 61 (sexp -> pexp .)
    TIMES           reduce using rule 61 (sexp -> pexp .)
    DIVIDE          reduce using rule 61 (sexp -> pexp .)
    COMMA           reduce using rule 61 (sexp -> pexp .)


state 87

    (63) pexp -> THIS .

    POINT           reduce using rule 63 (pexp -> THIS .)
    LBRACK          reduce using rule 63 (pexp -> THIS .)
    SEMI            reduce using rule 63 (pexp -> THIS .)
    RPAREN          reduce using rule 63 (pexp -> THIS .)
    RBRACK          reduce using rule 63 (pexp -> THIS .)
    LAND            reduce using rule 63 (pexp -> THIS .)
    LOR             reduce using rule 63 (pexp -> THIS .)
    LT              reduce using rule 63 (pexp -> THIS .)
    EQ              reduce using rule 63 (pexp -> THIS .)
    NE              reduce using rule 63 (pexp -> THIS .)
    PLUS            reduce using rule 63 (pexp -> THIS .)
    MINUS           reduce using rule 63 (pexp -> THIS .)
    TIMES           reduce using rule 63 (pexp -> THIS .)
    DIVIDE          reduce using rule 63 (pexp -> THIS .)
    COMMA           reduce using rule 63 (pexp -> THIS .)


state 88

    (31) otherstmt -> ID LBRACK exp . RBRACK ASSIGN exp SEMI
    (39) exp -> exp . LAND rexp
    (40) exp -> exp . LOR rexp

    RBRACK          shift and go to state 110
    LAND            shift and go to state 95
    LOR             shift and go to state 96


state 89

    (27) otherstmt -> LBRACE cmds RBRACE .

    RBRACE          reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    RETURN          reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    LBRACE          reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    WHILE           reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    SOUTPL          reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    ID              reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    IF              reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    ELSE            reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)


state 90

    (28) otherstmt -> WHILE LPAREN exp . RPAREN cmd
    (39) exp -> exp . LAND rexp
    (40) exp -> exp . LOR rexp

    RPAREN          shift and go to state 111
    LAND            shift and go to state 95
    LOR             shift and go to state 96


state 91

    (29) otherstmt -> SOUTPL LPAREN exp . RPAREN SEMI
    (39) exp -> exp . LAND rexp
    (40) exp -> exp . LOR rexp

    RPAREN          shift and go to state 112
    LAND            shift and go to state 95
    LOR             shift and go to state 96


state 92

    (34) match -> IF LPAREN exp . RPAREN match ELSE match
    (36) unmatch -> IF LPAREN exp . RPAREN unmatch
    (37) unmatch -> IF LPAREN exp . RPAREN match ELSE unmatch
    (39) exp -> exp . LAND rexp
    (40) exp -> exp . LOR rexp

    RPAREN          shift and go to state 113
    LAND            shift and go to state 95
    LOR             shift and go to state 96


state 93

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp . SEMI RBRACE
    (39) exp -> exp . LAND rexp
    (40) exp -> exp . LOR rexp

    SEMI            shift and go to state 114
    LAND            shift and go to state 95
    LOR             shift and go to state 96


state 94

    (30) otherstmt -> ID ASSIGN exp SEMI .

    RBRACE          reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    RETURN          reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    LBRACE          reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    WHILE           reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    SOUTPL          reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    ID              reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    IF              reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    ELSE            reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)


state 95

    (39) exp -> exp LAND . rexp
    (42) rexp -> . rexp LT aexp
    (43) rexp -> . rexp EQ aexp
    (44) rexp -> . rexp NE aexp
    (45) rexp -> . aexp
    (46) aexp -> . aexp PLUS mexp
    (47) aexp -> . aexp MINUS mexp
    (48) aexp -> . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    rexp                           shift and go to state 115
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 96

    (40) exp -> exp LOR . rexp
    (42) rexp -> . rexp LT aexp
    (43) rexp -> . rexp EQ aexp
    (44) rexp -> . rexp NE aexp
    (45) rexp -> . aexp
    (46) aexp -> . aexp PLUS mexp
    (47) aexp -> . aexp MINUS mexp
    (48) aexp -> . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    rexp                           shift and go to state 116
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 97

    (42) rexp -> rexp LT . aexp
    (46) aexp -> . aexp PLUS mexp
    (47) aexp -> . aexp MINUS mexp
    (48) aexp -> . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    aexp                           shift and go to state 117
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 98

    (43) rexp -> rexp EQ . aexp
    (46) aexp -> . aexp PLUS mexp
    (47) aexp -> . aexp MINUS mexp
    (48) aexp -> . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    aexp                           shift and go to state 118
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 99

    (44) rexp -> rexp NE . aexp
    (46) aexp -> . aexp PLUS mexp
    (47) aexp -> . aexp MINUS mexp
    (48) aexp -> . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    aexp                           shift and go to state 119
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 100

    (46) aexp -> aexp PLUS . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    mexp                           shift and go to state 120
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 101

    (47) aexp -> aexp MINUS . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    mexp                           shift and go to state 121
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 102

    (49) mexp -> mexp TIMES . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    sexp                           shift and go to state 122
    pexp                           shift and go to state 86

state 103

    (50) mexp -> mexp DIVIDE . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    sexp                           shift and go to state 123
    pexp                           shift and go to state 86

state 104

    (53) sexp -> MINUS sexp .

    SEMI            reduce using rule 53 (sexp -> MINUS sexp .)
    RPAREN          reduce using rule 53 (sexp -> MINUS sexp .)
    RBRACK          reduce using rule 53 (sexp -> MINUS sexp .)
    LAND            reduce using rule 53 (sexp -> MINUS sexp .)
    LOR             reduce using rule 53 (sexp -> MINUS sexp .)
    LT              reduce using rule 53 (sexp -> MINUS sexp .)
    EQ              reduce using rule 53 (sexp -> MINUS sexp .)
    NE              reduce using rule 53 (sexp -> MINUS sexp .)
    PLUS            reduce using rule 53 (sexp -> MINUS sexp .)
    MINUS           reduce using rule 53 (sexp -> MINUS sexp .)
    TIMES           reduce using rule 53 (sexp -> MINUS sexp .)
    DIVIDE          reduce using rule 53 (sexp -> MINUS sexp .)
    COMMA           reduce using rule 53 (sexp -> MINUS sexp .)


state 105

    (52) sexp -> LNOT sexp .

    SEMI            reduce using rule 52 (sexp -> LNOT sexp .)
    RPAREN          reduce using rule 52 (sexp -> LNOT sexp .)
    RBRACK          reduce using rule 52 (sexp -> LNOT sexp .)
    LAND            reduce using rule 52 (sexp -> LNOT sexp .)
    LOR             reduce using rule 52 (sexp -> LNOT sexp .)
    LT              reduce using rule 52 (sexp -> LNOT sexp .)
    EQ              reduce using rule 52 (sexp -> LNOT sexp .)
    NE              reduce using rule 52 (sexp -> LNOT sexp .)
    PLUS            reduce using rule 52 (sexp -> LNOT sexp .)
    MINUS           reduce using rule 52 (sexp -> LNOT sexp .)
    TIMES           reduce using rule 52 (sexp -> LNOT sexp .)
    DIVIDE          reduce using rule 52 (sexp -> LNOT sexp .)
    COMMA           reduce using rule 52 (sexp -> LNOT sexp .)


state 106

    (58) sexp -> NEW INT . LBRACK exp RBRACK

    LBRACK          shift and go to state 124


state 107

    (64) pexp -> NEW ID . LPAREN RPAREN

    LPAREN          shift and go to state 125


state 108

    (59) sexp -> pexp POINT . LENGTH
    (65) pexp -> pexp POINT . ID
    (66) pexp -> pexp POINT . ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> pexp POINT . ID LPAREN RPAREN

    LENGTH          shift and go to state 126
    ID              shift and go to state 127


state 109

    (60) sexp -> pexp LBRACK . exp RBRACK
    (39) exp -> . exp LAND rexp
    (40) exp -> . exp LOR rexp
    (41) exp -> . rexp
    (42) rexp -> . rexp LT aexp
    (43) rexp -> . rexp EQ aexp
    (44) rexp -> . rexp NE aexp
    (45) rexp -> . aexp
    (46) aexp -> . aexp PLUS mexp
    (47) aexp -> . aexp MINUS mexp
    (48) aexp -> . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    pexp                           shift and go to state 86
    exp                            shift and go to state 128
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79

state 110

    (31) otherstmt -> ID LBRACK exp RBRACK . ASSIGN exp SEMI

    ASSIGN          shift and go to state 129


state 111

    (28) otherstmt -> WHILE LPAREN exp RPAREN . cmd
    (25) cmd -> . condstmt
    (26) cmd -> . otherstmt
    (32) condstmt -> . match
    (33) condstmt -> . unmatch
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI
    (34) match -> . IF LPAREN exp RPAREN match ELSE match
    (35) match -> . otherstmt
    (36) unmatch -> . IF LPAREN exp RPAREN unmatch
    (37) unmatch -> . IF LPAREN exp RPAREN match ELSE unmatch
    (38) unmatch -> . otherstmt

    LBRACE          shift and go to state 52
    WHILE           shift and go to state 59
    SOUTPL          shift and go to state 60
    ID              shift and go to state 51
    IF              shift and go to state 61

    cmd                            shift and go to state 130
    condstmt                       shift and go to state 55
    otherstmt                      shift and go to state 56
    match                          shift and go to state 57
    unmatch                        shift and go to state 58

state 112

    (29) otherstmt -> SOUTPL LPAREN exp RPAREN . SEMI

    SEMI            shift and go to state 131


state 113

    (34) match -> IF LPAREN exp RPAREN . match ELSE match
    (36) unmatch -> IF LPAREN exp RPAREN . unmatch
    (37) unmatch -> IF LPAREN exp RPAREN . match ELSE unmatch
    (34) match -> . IF LPAREN exp RPAREN match ELSE match
    (35) match -> . otherstmt
    (36) unmatch -> . IF LPAREN exp RPAREN unmatch
    (37) unmatch -> . IF LPAREN exp RPAREN match ELSE unmatch
    (38) unmatch -> . otherstmt
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    IF              shift and go to state 61
    LBRACE          shift and go to state 52
    WHILE           shift and go to state 59
    SOUTPL          shift and go to state 60
    ID              shift and go to state 51

    match                          shift and go to state 132
    unmatch                        shift and go to state 133
    otherstmt                      shift and go to state 134

state 114

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI . RBRACE

    RBRACE          shift and go to state 135


state 115

    (39) exp -> exp LAND rexp .
    (42) rexp -> rexp . LT aexp
    (43) rexp -> rexp . EQ aexp
    (44) rexp -> rexp . NE aexp

    SEMI            reduce using rule 39 (exp -> exp LAND rexp .)
    RPAREN          reduce using rule 39 (exp -> exp LAND rexp .)
    RBRACK          reduce using rule 39 (exp -> exp LAND rexp .)
    LAND            reduce using rule 39 (exp -> exp LAND rexp .)
    LOR             reduce using rule 39 (exp -> exp LAND rexp .)
    COMMA           reduce using rule 39 (exp -> exp LAND rexp .)
    LT              shift and go to state 97
    EQ              shift and go to state 98
    NE              shift and go to state 99


state 116

    (40) exp -> exp LOR rexp .
    (42) rexp -> rexp . LT aexp
    (43) rexp -> rexp . EQ aexp
    (44) rexp -> rexp . NE aexp

    SEMI            reduce using rule 40 (exp -> exp LOR rexp .)
    RPAREN          reduce using rule 40 (exp -> exp LOR rexp .)
    RBRACK          reduce using rule 40 (exp -> exp LOR rexp .)
    LAND            reduce using rule 40 (exp -> exp LOR rexp .)
    LOR             reduce using rule 40 (exp -> exp LOR rexp .)
    COMMA           reduce using rule 40 (exp -> exp LOR rexp .)
    LT              shift and go to state 97
    EQ              shift and go to state 98
    NE              shift and go to state 99


state 117

    (42) rexp -> rexp LT aexp .
    (46) aexp -> aexp . PLUS mexp
    (47) aexp -> aexp . MINUS mexp

    SEMI            reduce using rule 42 (rexp -> rexp LT aexp .)
    RPAREN          reduce using rule 42 (rexp -> rexp LT aexp .)
    RBRACK          reduce using rule 42 (rexp -> rexp LT aexp .)
    LAND            reduce using rule 42 (rexp -> rexp LT aexp .)
    LOR             reduce using rule 42 (rexp -> rexp LT aexp .)
    LT              reduce using rule 42 (rexp -> rexp LT aexp .)
    EQ              reduce using rule 42 (rexp -> rexp LT aexp .)
    NE              reduce using rule 42 (rexp -> rexp LT aexp .)
    COMMA           reduce using rule 42 (rexp -> rexp LT aexp .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101


state 118

    (43) rexp -> rexp EQ aexp .
    (46) aexp -> aexp . PLUS mexp
    (47) aexp -> aexp . MINUS mexp

    SEMI            reduce using rule 43 (rexp -> rexp EQ aexp .)
    RPAREN          reduce using rule 43 (rexp -> rexp EQ aexp .)
    RBRACK          reduce using rule 43 (rexp -> rexp EQ aexp .)
    LAND            reduce using rule 43 (rexp -> rexp EQ aexp .)
    LOR             reduce using rule 43 (rexp -> rexp EQ aexp .)
    LT              reduce using rule 43 (rexp -> rexp EQ aexp .)
    EQ              reduce using rule 43 (rexp -> rexp EQ aexp .)
    NE              reduce using rule 43 (rexp -> rexp EQ aexp .)
    COMMA           reduce using rule 43 (rexp -> rexp EQ aexp .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101


state 119

    (44) rexp -> rexp NE aexp .
    (46) aexp -> aexp . PLUS mexp
    (47) aexp -> aexp . MINUS mexp

    SEMI            reduce using rule 44 (rexp -> rexp NE aexp .)
    RPAREN          reduce using rule 44 (rexp -> rexp NE aexp .)
    RBRACK          reduce using rule 44 (rexp -> rexp NE aexp .)
    LAND            reduce using rule 44 (rexp -> rexp NE aexp .)
    LOR             reduce using rule 44 (rexp -> rexp NE aexp .)
    LT              reduce using rule 44 (rexp -> rexp NE aexp .)
    EQ              reduce using rule 44 (rexp -> rexp NE aexp .)
    NE              reduce using rule 44 (rexp -> rexp NE aexp .)
    COMMA           reduce using rule 44 (rexp -> rexp NE aexp .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101


state 120

    (46) aexp -> aexp PLUS mexp .
    (49) mexp -> mexp . TIMES sexp
    (50) mexp -> mexp . DIVIDE sexp

    SEMI            reduce using rule 46 (aexp -> aexp PLUS mexp .)
    RPAREN          reduce using rule 46 (aexp -> aexp PLUS mexp .)
    RBRACK          reduce using rule 46 (aexp -> aexp PLUS mexp .)
    LAND            reduce using rule 46 (aexp -> aexp PLUS mexp .)
    LOR             reduce using rule 46 (aexp -> aexp PLUS mexp .)
    LT              reduce using rule 46 (aexp -> aexp PLUS mexp .)
    EQ              reduce using rule 46 (aexp -> aexp PLUS mexp .)
    NE              reduce using rule 46 (aexp -> aexp PLUS mexp .)
    PLUS            reduce using rule 46 (aexp -> aexp PLUS mexp .)
    MINUS           reduce using rule 46 (aexp -> aexp PLUS mexp .)
    COMMA           reduce using rule 46 (aexp -> aexp PLUS mexp .)
    TIMES           shift and go to state 102
    DIVIDE          shift and go to state 103


state 121

    (47) aexp -> aexp MINUS mexp .
    (49) mexp -> mexp . TIMES sexp
    (50) mexp -> mexp . DIVIDE sexp

    SEMI            reduce using rule 47 (aexp -> aexp MINUS mexp .)
    RPAREN          reduce using rule 47 (aexp -> aexp MINUS mexp .)
    RBRACK          reduce using rule 47 (aexp -> aexp MINUS mexp .)
    LAND            reduce using rule 47 (aexp -> aexp MINUS mexp .)
    LOR             reduce using rule 47 (aexp -> aexp MINUS mexp .)
    LT              reduce using rule 47 (aexp -> aexp MINUS mexp .)
    EQ              reduce using rule 47 (aexp -> aexp MINUS mexp .)
    NE              reduce using rule 47 (aexp -> aexp MINUS mexp .)
    PLUS            reduce using rule 47 (aexp -> aexp MINUS mexp .)
    MINUS           reduce using rule 47 (aexp -> aexp MINUS mexp .)
    COMMA           reduce using rule 47 (aexp -> aexp MINUS mexp .)
    TIMES           shift and go to state 102
    DIVIDE          shift and go to state 103


state 122

    (49) mexp -> mexp TIMES sexp .

    SEMI            reduce using rule 49 (mexp -> mexp TIMES sexp .)
    RPAREN          reduce using rule 49 (mexp -> mexp TIMES sexp .)
    RBRACK          reduce using rule 49 (mexp -> mexp TIMES sexp .)
    LAND            reduce using rule 49 (mexp -> mexp TIMES sexp .)
    LOR             reduce using rule 49 (mexp -> mexp TIMES sexp .)
    LT              reduce using rule 49 (mexp -> mexp TIMES sexp .)
    EQ              reduce using rule 49 (mexp -> mexp TIMES sexp .)
    NE              reduce using rule 49 (mexp -> mexp TIMES sexp .)
    PLUS            reduce using rule 49 (mexp -> mexp TIMES sexp .)
    MINUS           reduce using rule 49 (mexp -> mexp TIMES sexp .)
    TIMES           reduce using rule 49 (mexp -> mexp TIMES sexp .)
    DIVIDE          reduce using rule 49 (mexp -> mexp TIMES sexp .)
    COMMA           reduce using rule 49 (mexp -> mexp TIMES sexp .)


state 123

    (50) mexp -> mexp DIVIDE sexp .

    SEMI            reduce using rule 50 (mexp -> mexp DIVIDE sexp .)
    RPAREN          reduce using rule 50 (mexp -> mexp DIVIDE sexp .)
    RBRACK          reduce using rule 50 (mexp -> mexp DIVIDE sexp .)
    LAND            reduce using rule 50 (mexp -> mexp DIVIDE sexp .)
    LOR             reduce using rule 50 (mexp -> mexp DIVIDE sexp .)
    LT              reduce using rule 50 (mexp -> mexp DIVIDE sexp .)
    EQ              reduce using rule 50 (mexp -> mexp DIVIDE sexp .)
    NE              reduce using rule 50 (mexp -> mexp DIVIDE sexp .)
    PLUS            reduce using rule 50 (mexp -> mexp DIVIDE sexp .)
    MINUS           reduce using rule 50 (mexp -> mexp DIVIDE sexp .)
    TIMES           reduce using rule 50 (mexp -> mexp DIVIDE sexp .)
    DIVIDE          reduce using rule 50 (mexp -> mexp DIVIDE sexp .)
    COMMA           reduce using rule 50 (mexp -> mexp DIVIDE sexp .)


state 124

    (58) sexp -> NEW INT LBRACK . exp RBRACK
    (39) exp -> . exp LAND rexp
    (40) exp -> . exp LOR rexp
    (41) exp -> . rexp
    (42) rexp -> . rexp LT aexp
    (43) rexp -> . rexp EQ aexp
    (44) rexp -> . rexp NE aexp
    (45) rexp -> . aexp
    (46) aexp -> . aexp PLUS mexp
    (47) aexp -> . aexp MINUS mexp
    (48) aexp -> . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    exp                            shift and go to state 136
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 125

    (64) pexp -> NEW ID LPAREN . RPAREN

    RPAREN          shift and go to state 137


state 126

    (59) sexp -> pexp POINT LENGTH .

    SEMI            reduce using rule 59 (sexp -> pexp POINT LENGTH .)
    RPAREN          reduce using rule 59 (sexp -> pexp POINT LENGTH .)
    RBRACK          reduce using rule 59 (sexp -> pexp POINT LENGTH .)
    LAND            reduce using rule 59 (sexp -> pexp POINT LENGTH .)
    LOR             reduce using rule 59 (sexp -> pexp POINT LENGTH .)
    LT              reduce using rule 59 (sexp -> pexp POINT LENGTH .)
    EQ              reduce using rule 59 (sexp -> pexp POINT LENGTH .)
    NE              reduce using rule 59 (sexp -> pexp POINT LENGTH .)
    PLUS            reduce using rule 59 (sexp -> pexp POINT LENGTH .)
    MINUS           reduce using rule 59 (sexp -> pexp POINT LENGTH .)
    TIMES           reduce using rule 59 (sexp -> pexp POINT LENGTH .)
    DIVIDE          reduce using rule 59 (sexp -> pexp POINT LENGTH .)
    COMMA           reduce using rule 59 (sexp -> pexp POINT LENGTH .)


state 127

    (65) pexp -> pexp POINT ID .
    (66) pexp -> pexp POINT ID . LPAREN expopcionalmetodo RPAREN
    (67) pexp -> pexp POINT ID . LPAREN RPAREN

    POINT           reduce using rule 65 (pexp -> pexp POINT ID .)
    LBRACK          reduce using rule 65 (pexp -> pexp POINT ID .)
    SEMI            reduce using rule 65 (pexp -> pexp POINT ID .)
    RPAREN          reduce using rule 65 (pexp -> pexp POINT ID .)
    RBRACK          reduce using rule 65 (pexp -> pexp POINT ID .)
    LAND            reduce using rule 65 (pexp -> pexp POINT ID .)
    LOR             reduce using rule 65 (pexp -> pexp POINT ID .)
    LT              reduce using rule 65 (pexp -> pexp POINT ID .)
    EQ              reduce using rule 65 (pexp -> pexp POINT ID .)
    NE              reduce using rule 65 (pexp -> pexp POINT ID .)
    PLUS            reduce using rule 65 (pexp -> pexp POINT ID .)
    MINUS           reduce using rule 65 (pexp -> pexp POINT ID .)
    TIMES           reduce using rule 65 (pexp -> pexp POINT ID .)
    DIVIDE          reduce using rule 65 (pexp -> pexp POINT ID .)
    COMMA           reduce using rule 65 (pexp -> pexp POINT ID .)
    LPAREN          shift and go to state 138


state 128

    (60) sexp -> pexp LBRACK exp . RBRACK
    (39) exp -> exp . LAND rexp
    (40) exp -> exp . LOR rexp

    RBRACK          shift and go to state 139
    LAND            shift and go to state 95
    LOR             shift and go to state 96


state 129

    (31) otherstmt -> ID LBRACK exp RBRACK ASSIGN . exp SEMI
    (39) exp -> . exp LAND rexp
    (40) exp -> . exp LOR rexp
    (41) exp -> . rexp
    (42) rexp -> . rexp LT aexp
    (43) rexp -> . rexp EQ aexp
    (44) rexp -> . rexp NE aexp
    (45) rexp -> . aexp
    (46) aexp -> . aexp PLUS mexp
    (47) aexp -> . aexp MINUS mexp
    (48) aexp -> . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    exp                            shift and go to state 140
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 130

    (28) otherstmt -> WHILE LPAREN exp RPAREN cmd .

    RBRACE          reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    RETURN          reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    LBRACE          reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    WHILE           reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    SOUTPL          reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    ID              reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    IF              reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    ELSE            reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)


state 131

    (29) otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .

    RBRACE          reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    RETURN          reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    LBRACE          reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    WHILE           reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    SOUTPL          reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    ID              reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    IF              reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    ELSE            reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)


state 132

    (34) match -> IF LPAREN exp RPAREN match . ELSE match
    (37) unmatch -> IF LPAREN exp RPAREN match . ELSE unmatch

    ELSE            shift and go to state 141


state 133

    (36) unmatch -> IF LPAREN exp RPAREN unmatch .

    RBRACE          reduce using rule 36 (unmatch -> IF LPAREN exp RPAREN unmatch .)
    RETURN          reduce using rule 36 (unmatch -> IF LPAREN exp RPAREN unmatch .)
    LBRACE          reduce using rule 36 (unmatch -> IF LPAREN exp RPAREN unmatch .)
    WHILE           reduce using rule 36 (unmatch -> IF LPAREN exp RPAREN unmatch .)
    SOUTPL          reduce using rule 36 (unmatch -> IF LPAREN exp RPAREN unmatch .)
    ID              reduce using rule 36 (unmatch -> IF LPAREN exp RPAREN unmatch .)
    IF              reduce using rule 36 (unmatch -> IF LPAREN exp RPAREN unmatch .)
    ELSE            reduce using rule 36 (unmatch -> IF LPAREN exp RPAREN unmatch .)


state 134

    (35) match -> otherstmt .
    (38) unmatch -> otherstmt .

  ! reduce/reduce conflict for RBRACE resolved using rule 35 (match -> otherstmt .)
  ! reduce/reduce conflict for RETURN resolved using rule 35 (match -> otherstmt .)
  ! reduce/reduce conflict for LBRACE resolved using rule 35 (match -> otherstmt .)
  ! reduce/reduce conflict for WHILE resolved using rule 35 (match -> otherstmt .)
  ! reduce/reduce conflict for SOUTPL resolved using rule 35 (match -> otherstmt .)
  ! reduce/reduce conflict for ID resolved using rule 35 (match -> otherstmt .)
  ! reduce/reduce conflict for IF resolved using rule 35 (match -> otherstmt .)
  ! reduce/reduce conflict for ELSE resolved using rule 35 (match -> otherstmt .)
    RBRACE          reduce using rule 35 (match -> otherstmt .)
    RETURN          reduce using rule 35 (match -> otherstmt .)
    LBRACE          reduce using rule 35 (match -> otherstmt .)
    WHILE           reduce using rule 35 (match -> otherstmt .)
    SOUTPL          reduce using rule 35 (match -> otherstmt .)
    ID              reduce using rule 35 (match -> otherstmt .)
    IF              reduce using rule 35 (match -> otherstmt .)
    ELSE            reduce using rule 35 (match -> otherstmt .)

  ! RBRACE          [ reduce using rule 38 (unmatch -> otherstmt .) ]
  ! RETURN          [ reduce using rule 38 (unmatch -> otherstmt .) ]
  ! LBRACE          [ reduce using rule 38 (unmatch -> otherstmt .) ]
  ! WHILE           [ reduce using rule 38 (unmatch -> otherstmt .) ]
  ! SOUTPL          [ reduce using rule 38 (unmatch -> otherstmt .) ]
  ! ID              [ reduce using rule 38 (unmatch -> otherstmt .) ]
  ! IF              [ reduce using rule 38 (unmatch -> otherstmt .) ]
  ! ELSE            [ reduce using rule 38 (unmatch -> otherstmt .) ]


state 135

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE .

    RBRACE          reduce using rule 13 (metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE .)
    PUBLIC          reduce using rule 13 (metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE .)


state 136

    (58) sexp -> NEW INT LBRACK exp . RBRACK
    (39) exp -> exp . LAND rexp
    (40) exp -> exp . LOR rexp

    RBRACK          shift and go to state 142
    LAND            shift and go to state 95
    LOR             shift and go to state 96


state 137

    (64) pexp -> NEW ID LPAREN RPAREN .

    POINT           reduce using rule 64 (pexp -> NEW ID LPAREN RPAREN .)
    LBRACK          reduce using rule 64 (pexp -> NEW ID LPAREN RPAREN .)
    SEMI            reduce using rule 64 (pexp -> NEW ID LPAREN RPAREN .)
    RPAREN          reduce using rule 64 (pexp -> NEW ID LPAREN RPAREN .)
    RBRACK          reduce using rule 64 (pexp -> NEW ID LPAREN RPAREN .)
    LAND            reduce using rule 64 (pexp -> NEW ID LPAREN RPAREN .)
    LOR             reduce using rule 64 (pexp -> NEW ID LPAREN RPAREN .)
    LT              reduce using rule 64 (pexp -> NEW ID LPAREN RPAREN .)
    EQ              reduce using rule 64 (pexp -> NEW ID LPAREN RPAREN .)
    NE              reduce using rule 64 (pexp -> NEW ID LPAREN RPAREN .)
    PLUS            reduce using rule 64 (pexp -> NEW ID LPAREN RPAREN .)
    MINUS           reduce using rule 64 (pexp -> NEW ID LPAREN RPAREN .)
    TIMES           reduce using rule 64 (pexp -> NEW ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 64 (pexp -> NEW ID LPAREN RPAREN .)
    COMMA           reduce using rule 64 (pexp -> NEW ID LPAREN RPAREN .)


state 138

    (66) pexp -> pexp POINT ID LPAREN . expopcionalmetodo RPAREN
    (67) pexp -> pexp POINT ID LPAREN . RPAREN
    (68) expopcionalmetodo -> . exps
    (69) exps -> . exp expslist
    (39) exp -> . exp LAND rexp
    (40) exp -> . exp LOR rexp
    (41) exp -> . rexp
    (42) rexp -> . rexp LT aexp
    (43) rexp -> . rexp EQ aexp
    (44) rexp -> . rexp NE aexp
    (45) rexp -> . aexp
    (46) aexp -> . aexp PLUS mexp
    (47) aexp -> . aexp MINUS mexp
    (48) aexp -> . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    RPAREN          shift and go to state 144
    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    pexp                           shift and go to state 86
    expopcionalmetodo              shift and go to state 143
    exps                           shift and go to state 145
    exp                            shift and go to state 146
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79

state 139

    (60) sexp -> pexp LBRACK exp RBRACK .

    SEMI            reduce using rule 60 (sexp -> pexp LBRACK exp RBRACK .)
    RPAREN          reduce using rule 60 (sexp -> pexp LBRACK exp RBRACK .)
    RBRACK          reduce using rule 60 (sexp -> pexp LBRACK exp RBRACK .)
    LAND            reduce using rule 60 (sexp -> pexp LBRACK exp RBRACK .)
    LOR             reduce using rule 60 (sexp -> pexp LBRACK exp RBRACK .)
    LT              reduce using rule 60 (sexp -> pexp LBRACK exp RBRACK .)
    EQ              reduce using rule 60 (sexp -> pexp LBRACK exp RBRACK .)
    NE              reduce using rule 60 (sexp -> pexp LBRACK exp RBRACK .)
    PLUS            reduce using rule 60 (sexp -> pexp LBRACK exp RBRACK .)
    MINUS           reduce using rule 60 (sexp -> pexp LBRACK exp RBRACK .)
    TIMES           reduce using rule 60 (sexp -> pexp LBRACK exp RBRACK .)
    DIVIDE          reduce using rule 60 (sexp -> pexp LBRACK exp RBRACK .)
    COMMA           reduce using rule 60 (sexp -> pexp LBRACK exp RBRACK .)


state 140

    (31) otherstmt -> ID LBRACK exp RBRACK ASSIGN exp . SEMI
    (39) exp -> exp . LAND rexp
    (40) exp -> exp . LOR rexp

    SEMI            shift and go to state 147
    LAND            shift and go to state 95
    LOR             shift and go to state 96


state 141

    (34) match -> IF LPAREN exp RPAREN match ELSE . match
    (37) unmatch -> IF LPAREN exp RPAREN match ELSE . unmatch
    (34) match -> . IF LPAREN exp RPAREN match ELSE match
    (35) match -> . otherstmt
    (36) unmatch -> . IF LPAREN exp RPAREN unmatch
    (37) unmatch -> . IF LPAREN exp RPAREN match ELSE unmatch
    (38) unmatch -> . otherstmt
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    IF              shift and go to state 61
    LBRACE          shift and go to state 52
    WHILE           shift and go to state 59
    SOUTPL          shift and go to state 60
    ID              shift and go to state 51

    match                          shift and go to state 148
    unmatch                        shift and go to state 149
    otherstmt                      shift and go to state 134

state 142

    (58) sexp -> NEW INT LBRACK exp RBRACK .

    SEMI            reduce using rule 58 (sexp -> NEW INT LBRACK exp RBRACK .)
    RPAREN          reduce using rule 58 (sexp -> NEW INT LBRACK exp RBRACK .)
    RBRACK          reduce using rule 58 (sexp -> NEW INT LBRACK exp RBRACK .)
    LAND            reduce using rule 58 (sexp -> NEW INT LBRACK exp RBRACK .)
    LOR             reduce using rule 58 (sexp -> NEW INT LBRACK exp RBRACK .)
    LT              reduce using rule 58 (sexp -> NEW INT LBRACK exp RBRACK .)
    EQ              reduce using rule 58 (sexp -> NEW INT LBRACK exp RBRACK .)
    NE              reduce using rule 58 (sexp -> NEW INT LBRACK exp RBRACK .)
    PLUS            reduce using rule 58 (sexp -> NEW INT LBRACK exp RBRACK .)
    MINUS           reduce using rule 58 (sexp -> NEW INT LBRACK exp RBRACK .)
    TIMES           reduce using rule 58 (sexp -> NEW INT LBRACK exp RBRACK .)
    DIVIDE          reduce using rule 58 (sexp -> NEW INT LBRACK exp RBRACK .)
    COMMA           reduce using rule 58 (sexp -> NEW INT LBRACK exp RBRACK .)


state 143

    (66) pexp -> pexp POINT ID LPAREN expopcionalmetodo . RPAREN

    RPAREN          shift and go to state 150


state 144

    (67) pexp -> pexp POINT ID LPAREN RPAREN .

    POINT           reduce using rule 67 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LBRACK          reduce using rule 67 (pexp -> pexp POINT ID LPAREN RPAREN .)
    SEMI            reduce using rule 67 (pexp -> pexp POINT ID LPAREN RPAREN .)
    RPAREN          reduce using rule 67 (pexp -> pexp POINT ID LPAREN RPAREN .)
    RBRACK          reduce using rule 67 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LAND            reduce using rule 67 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LOR             reduce using rule 67 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LT              reduce using rule 67 (pexp -> pexp POINT ID LPAREN RPAREN .)
    EQ              reduce using rule 67 (pexp -> pexp POINT ID LPAREN RPAREN .)
    NE              reduce using rule 67 (pexp -> pexp POINT ID LPAREN RPAREN .)
    PLUS            reduce using rule 67 (pexp -> pexp POINT ID LPAREN RPAREN .)
    MINUS           reduce using rule 67 (pexp -> pexp POINT ID LPAREN RPAREN .)
    TIMES           reduce using rule 67 (pexp -> pexp POINT ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 67 (pexp -> pexp POINT ID LPAREN RPAREN .)
    COMMA           reduce using rule 67 (pexp -> pexp POINT ID LPAREN RPAREN .)


state 145

    (68) expopcionalmetodo -> exps .

    RPAREN          reduce using rule 68 (expopcionalmetodo -> exps .)


state 146

    (69) exps -> exp . expslist
    (39) exp -> exp . LAND rexp
    (40) exp -> exp . LOR rexp
    (70) expslist -> . expslist COMMA exp
    (71) expslist -> .

    LAND            shift and go to state 95
    LOR             shift and go to state 96
    RPAREN          reduce using rule 71 (expslist -> .)
    COMMA           reduce using rule 71 (expslist -> .)

    expslist                       shift and go to state 151

state 147

    (31) otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .

    RBRACE          reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    RETURN          reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    LBRACE          reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    WHILE           reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    SOUTPL          reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    ID              reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    IF              reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    ELSE            reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)


state 148

    (34) match -> IF LPAREN exp RPAREN match ELSE match .

    RBRACE          reduce using rule 34 (match -> IF LPAREN exp RPAREN match ELSE match .)
    RETURN          reduce using rule 34 (match -> IF LPAREN exp RPAREN match ELSE match .)
    LBRACE          reduce using rule 34 (match -> IF LPAREN exp RPAREN match ELSE match .)
    WHILE           reduce using rule 34 (match -> IF LPAREN exp RPAREN match ELSE match .)
    SOUTPL          reduce using rule 34 (match -> IF LPAREN exp RPAREN match ELSE match .)
    ID              reduce using rule 34 (match -> IF LPAREN exp RPAREN match ELSE match .)
    IF              reduce using rule 34 (match -> IF LPAREN exp RPAREN match ELSE match .)
    ELSE            reduce using rule 34 (match -> IF LPAREN exp RPAREN match ELSE match .)


state 149

    (37) unmatch -> IF LPAREN exp RPAREN match ELSE unmatch .

    RBRACE          reduce using rule 37 (unmatch -> IF LPAREN exp RPAREN match ELSE unmatch .)
    RETURN          reduce using rule 37 (unmatch -> IF LPAREN exp RPAREN match ELSE unmatch .)
    LBRACE          reduce using rule 37 (unmatch -> IF LPAREN exp RPAREN match ELSE unmatch .)
    WHILE           reduce using rule 37 (unmatch -> IF LPAREN exp RPAREN match ELSE unmatch .)
    SOUTPL          reduce using rule 37 (unmatch -> IF LPAREN exp RPAREN match ELSE unmatch .)
    ID              reduce using rule 37 (unmatch -> IF LPAREN exp RPAREN match ELSE unmatch .)
    IF              reduce using rule 37 (unmatch -> IF LPAREN exp RPAREN match ELSE unmatch .)
    ELSE            reduce using rule 37 (unmatch -> IF LPAREN exp RPAREN match ELSE unmatch .)


state 150

    (66) pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .

    POINT           reduce using rule 66 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LBRACK          reduce using rule 66 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    SEMI            reduce using rule 66 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    RPAREN          reduce using rule 66 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    RBRACK          reduce using rule 66 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LAND            reduce using rule 66 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LOR             reduce using rule 66 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LT              reduce using rule 66 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    EQ              reduce using rule 66 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    NE              reduce using rule 66 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    PLUS            reduce using rule 66 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    MINUS           reduce using rule 66 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    TIMES           reduce using rule 66 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    DIVIDE          reduce using rule 66 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    COMMA           reduce using rule 66 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)


state 151

    (69) exps -> exp expslist .
    (70) expslist -> expslist . COMMA exp

    RPAREN          reduce using rule 69 (exps -> exp expslist .)
    COMMA           shift and go to state 152


state 152

    (70) expslist -> expslist COMMA . exp
    (39) exp -> . exp LAND rexp
    (40) exp -> . exp LOR rexp
    (41) exp -> . rexp
    (42) rexp -> . rexp LT aexp
    (43) rexp -> . rexp EQ aexp
    (44) rexp -> . rexp NE aexp
    (45) rexp -> . aexp
    (46) aexp -> . aexp PLUS mexp
    (47) aexp -> . aexp MINUS mexp
    (48) aexp -> . mexp
    (49) mexp -> . mexp TIMES sexp
    (50) mexp -> . mexp DIVIDE sexp
    (51) mexp -> . sexp
    (52) sexp -> . LNOT sexp
    (53) sexp -> . MINUS sexp
    (54) sexp -> . TRUE
    (55) sexp -> . FALSE
    (56) sexp -> . NUMBER
    (57) sexp -> . NULL
    (58) sexp -> . NEW INT LBRACK exp RBRACK
    (59) sexp -> . pexp POINT LENGTH
    (60) sexp -> . pexp LBRACK exp RBRACK
    (61) sexp -> . pexp
    (62) pexp -> . ID
    (63) pexp -> . THIS
    (64) pexp -> . NEW ID LPAREN RPAREN
    (65) pexp -> . pexp POINT ID
    (66) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (67) pexp -> . pexp POINT ID LPAREN RPAREN

    LNOT            shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87

    exp                            shift and go to state 153
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 153

    (70) expslist -> expslist COMMA exp .
    (39) exp -> exp . LAND rexp
    (40) exp -> exp . LOR rexp

    RPAREN          reduce using rule 70 (expslist -> expslist COMMA exp .)
    COMMA           reduce using rule 70 (expslist -> expslist COMMA exp .)
    LAND            shift and go to state 95
    LOR             shift and go to state 96

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 50 resolved as shift
WARNING: reduce/reduce conflict in state 56 resolved using rule (cmd -> otherstmt)
WARNING: rejected rule (match -> otherstmt) in state 56
WARNING: reduce/reduce conflict in state 56 resolved using rule (cmd -> otherstmt)
WARNING: rejected rule (unmatch -> otherstmt) in state 56
WARNING: reduce/reduce conflict in state 134 resolved using rule (match -> otherstmt)
WARNING: rejected rule (unmatch -> otherstmt) in state 134
WARNING: Rule (unmatch -> otherstmt) is never reduced
