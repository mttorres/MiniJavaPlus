Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    GE
    GT
    LE

Grammar

Rule 0     S' -> prog
Rule 1     prog -> main multiclass
Rule 2     multiclass -> multiclass classe
Rule 3     multiclass -> <empty>
Rule 4     main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE
Rule 5     classe -> CLASS ID extends LBRACE variaveis metodos RBRACE
Rule 6     extends -> EXTENDS ID
Rule 7     extends -> <empty>
Rule 8     variaveis -> variaveis var
Rule 9     variaveis -> <empty>
Rule 10    metodos -> metodos metodo
Rule 11    metodos -> <empty>
Rule 12    var -> tipo ID SEMI
Rule 13    metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE
Rule 14    paramsopcional -> params
Rule 15    paramsopcional -> <empty>
Rule 16    cmds -> cmds cmd
Rule 17    cmds -> <empty>
Rule 18    params -> tipo ID listaparamsextra
Rule 19    listaparamsextra -> listaparamsextra COMMA tipo ID
Rule 20    listaparamsextra -> <empty>
Rule 21    tipo -> INT LBRACK RBRACK
Rule 22    tipo -> BOOL
Rule 23    tipo -> INT
Rule 24    tipo -> ID
Rule 25    cmd -> condstmt
Rule 26    cmd -> otherstmt
Rule 27    otherstmt -> LBRACE cmds RBRACE
Rule 28    otherstmt -> WHILE LPAREN exp RPAREN cmd
Rule 29    otherstmt -> SOUTPL LPAREN exp RPAREN SEMI
Rule 30    otherstmt -> ID ASSIGN exp SEMI
Rule 31    otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI
Rule 32    condstmt -> IF LPAREN exp cmd matchornot
Rule 33    matchornot -> ELSE cmd
Rule 34    matchornot -> <empty>
Rule 35    exp -> exp LAND rexp
Rule 36    exp -> exp LOR rexp
Rule 37    exp -> rexp
Rule 38    rexp -> rexp LT aexp
Rule 39    rexp -> rexp EQ aexp
Rule 40    rexp -> rexp NE aexp
Rule 41    rexp -> aexp
Rule 42    aexp -> aexp PLUS mexp
Rule 43    aexp -> aexp MINUS mexp
Rule 44    aexp -> mexp
Rule 45    mexp -> mexp TIMES sexp
Rule 46    mexp -> mexp DIVIDE sexp
Rule 47    mexp -> sexp
Rule 48    sexp -> LNOT sexp
Rule 49    sexp -> MINUS sexp
Rule 50    sexp -> TRUE
Rule 51    sexp -> FALSE
Rule 52    sexp -> NUMBER
Rule 53    sexp -> NULL
Rule 54    sexp -> NEW INT LBRACK exp RBRACK
Rule 55    sexp -> pexp POINT LENGTH
Rule 56    sexp -> pexp LBRACK exp RBRACK
Rule 57    sexp -> pexp
Rule 58    pexp -> ID
Rule 59    pexp -> THIS
Rule 60    pexp -> NEW ID LPAREN RPAREN
Rule 61    pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN
Rule 62    pexp -> pexp POINT ID LPAREN RPAREN
Rule 63    pexp -> pexp POINT ID
Rule 64    expopcionalmetodo -> exps
Rule 65    exps -> exp expslist
Rule 66    expslist -> expslist COMMA exp
Rule 67    expslist -> <empty>

Terminals, with rules where they appear

ASSIGN               : 30 31
BOOL                 : 22
CLASS                : 4 5
COLON                : 
COMMA                : 19 66
DIVIDE               : 46
ELSE                 : 33
EQ                   : 39
EXTENDS              : 6
FALSE                : 51
GE                   : 
GT                   : 
ID                   : 4 4 5 6 12 13 18 19 24 30 31 58 60 61 62 63
IF                   : 32
INT                  : 21 23 54
LAND                 : 35
LBRACE               : 4 4 5 13 27
LBRACK               : 4 21 31 54 56
LE                   : 
LENGTH               : 55
LNOT                 : 48
LOR                  : 36
LPAREN               : 4 13 28 29 32 60 61 62
LT                   : 38
MAIN                 : 4
MINUS                : 43 49
NE                   : 40
NEW                  : 54 60
NULL                 : 53
NUMBER               : 52
PLUS                 : 42
POINT                : 55 61 62 63
PUBLIC               : 4 13
RBRACE               : 4 4 5 13 27
RBRACK               : 4 21 31 54 56
RETURN               : 13
RPAREN               : 4 13 28 29 60 61 62
SEMI                 : 12 13 29 30 31
SOUTPL               : 29
STATIC               : 4
STRING               : 4
THIS                 : 59
TIMES                : 45
TRUE                 : 50
VOID                 : 4
WHILE                : 28
error                : 

Nonterminals, with rules where they appear

aexp                 : 38 39 40 41 42 43
classe               : 2
cmd                  : 16 28 32 33
cmds                 : 4 13 16 27
condstmt             : 25
exp                  : 13 28 29 30 31 31 32 35 36 54 56 65 66
expopcionalmetodo    : 61
exps                 : 64
expslist             : 65 66
extends              : 5
listaparamsextra     : 18 19
main                 : 1
matchornot           : 32
metodo               : 10
metodos              : 5 10
mexp                 : 42 43 44 45 46
multiclass           : 1 2
otherstmt            : 26
params               : 14
paramsopcional       : 13
pexp                 : 55 56 57 61 62 63
prog                 : 0
rexp                 : 35 36 37 38 39 40
sexp                 : 45 46 47 48 49
tipo                 : 12 13 18 19
var                  : 8
variaveis            : 5 8 13

Parsing method: SLR

state 0

    (0) S' -> . prog
    (1) prog -> . main multiclass
    (4) main -> . CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    CLASS           shift and go to state 3

    prog                           shift and go to state 1
    main                           shift and go to state 2

state 1

    (0) S' -> prog .



state 2

    (1) prog -> main . multiclass
    (2) multiclass -> . multiclass classe
    (3) multiclass -> .

    $end            reduce using rule 3 (multiclass -> .)
    CLASS           reduce using rule 3 (multiclass -> .)

    multiclass                     shift and go to state 4

state 3

    (4) main -> CLASS . ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    ID              shift and go to state 5


state 4

    (1) prog -> main multiclass .
    (2) multiclass -> multiclass . classe
    (5) classe -> . CLASS ID extends LBRACE variaveis metodos RBRACE

    $end            reduce using rule 1 (prog -> main multiclass .)
    CLASS           shift and go to state 7

    classe                         shift and go to state 6

state 5

    (4) main -> CLASS ID . LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    LBRACE          shift and go to state 8


state 6

    (2) multiclass -> multiclass classe .

    $end            reduce using rule 2 (multiclass -> multiclass classe .)
    CLASS           reduce using rule 2 (multiclass -> multiclass classe .)


state 7

    (5) classe -> CLASS . ID extends LBRACE variaveis metodos RBRACE

    ID              shift and go to state 9


state 8

    (4) main -> CLASS ID LBRACE . PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    PUBLIC          shift and go to state 10


state 9

    (5) classe -> CLASS ID . extends LBRACE variaveis metodos RBRACE
    (6) extends -> . EXTENDS ID
    (7) extends -> .

    EXTENDS         shift and go to state 12
    LBRACE          reduce using rule 7 (extends -> .)

    extends                        shift and go to state 11

state 10

    (4) main -> CLASS ID LBRACE PUBLIC . STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    STATIC          shift and go to state 13


state 11

    (5) classe -> CLASS ID extends . LBRACE variaveis metodos RBRACE

    LBRACE          shift and go to state 14


state 12

    (6) extends -> EXTENDS . ID

    ID              shift and go to state 15


state 13

    (4) main -> CLASS ID LBRACE PUBLIC STATIC . VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    VOID            shift and go to state 16


state 14

    (5) classe -> CLASS ID extends LBRACE . variaveis metodos RBRACE
    (8) variaveis -> . variaveis var
    (9) variaveis -> .

    PUBLIC          reduce using rule 9 (variaveis -> .)
    RBRACE          reduce using rule 9 (variaveis -> .)
    INT             reduce using rule 9 (variaveis -> .)
    BOOL            reduce using rule 9 (variaveis -> .)
    ID              reduce using rule 9 (variaveis -> .)
    IF              reduce using rule 9 (variaveis -> .)
    LBRACE          reduce using rule 9 (variaveis -> .)
    WHILE           reduce using rule 9 (variaveis -> .)
    SOUTPL          reduce using rule 9 (variaveis -> .)
    RETURN          reduce using rule 9 (variaveis -> .)

    variaveis                      shift and go to state 17

state 15

    (6) extends -> EXTENDS ID .

    LBRACE          reduce using rule 6 (extends -> EXTENDS ID .)


state 16

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID . MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    MAIN            shift and go to state 18


state 17

    (5) classe -> CLASS ID extends LBRACE variaveis . metodos RBRACE
    (8) variaveis -> variaveis . var
    (10) metodos -> . metodos metodo
    (11) metodos -> .
    (12) var -> . tipo ID SEMI
    (21) tipo -> . INT LBRACK RBRACK
    (22) tipo -> . BOOL
    (23) tipo -> . INT
    (24) tipo -> . ID

    RBRACE          reduce using rule 11 (metodos -> .)
    PUBLIC          reduce using rule 11 (metodos -> .)
    INT             shift and go to state 23
    BOOL            shift and go to state 24
    ID              shift and go to state 19

    metodos                        shift and go to state 20
    var                            shift and go to state 21
    tipo                           shift and go to state 22

state 18

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN . LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    LPAREN          shift and go to state 25


state 19

    (24) tipo -> ID .

    ID              reduce using rule 24 (tipo -> ID .)


state 20

    (5) classe -> CLASS ID extends LBRACE variaveis metodos . RBRACE
    (10) metodos -> metodos . metodo
    (13) metodo -> . PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE

    RBRACE          shift and go to state 26
    PUBLIC          shift and go to state 28

    metodo                         shift and go to state 27

state 21

    (8) variaveis -> variaveis var .

    PUBLIC          reduce using rule 8 (variaveis -> variaveis var .)
    RBRACE          reduce using rule 8 (variaveis -> variaveis var .)
    INT             reduce using rule 8 (variaveis -> variaveis var .)
    BOOL            reduce using rule 8 (variaveis -> variaveis var .)
    ID              reduce using rule 8 (variaveis -> variaveis var .)
    IF              reduce using rule 8 (variaveis -> variaveis var .)
    LBRACE          reduce using rule 8 (variaveis -> variaveis var .)
    WHILE           reduce using rule 8 (variaveis -> variaveis var .)
    SOUTPL          reduce using rule 8 (variaveis -> variaveis var .)
    RETURN          reduce using rule 8 (variaveis -> variaveis var .)


state 22

    (12) var -> tipo . ID SEMI

    ID              shift and go to state 29


state 23

    (21) tipo -> INT . LBRACK RBRACK
    (23) tipo -> INT .

    LBRACK          shift and go to state 30
    ID              reduce using rule 23 (tipo -> INT .)


state 24

    (22) tipo -> BOOL .

    ID              reduce using rule 22 (tipo -> BOOL .)


state 25

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN . STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    STRING          shift and go to state 31


state 26

    (5) classe -> CLASS ID extends LBRACE variaveis metodos RBRACE .

    $end            reduce using rule 5 (classe -> CLASS ID extends LBRACE variaveis metodos RBRACE .)
    CLASS           reduce using rule 5 (classe -> CLASS ID extends LBRACE variaveis metodos RBRACE .)


state 27

    (10) metodos -> metodos metodo .

    RBRACE          reduce using rule 10 (metodos -> metodos metodo .)
    PUBLIC          reduce using rule 10 (metodos -> metodos metodo .)


state 28

    (13) metodo -> PUBLIC . tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE
    (21) tipo -> . INT LBRACK RBRACK
    (22) tipo -> . BOOL
    (23) tipo -> . INT
    (24) tipo -> . ID

    INT             shift and go to state 23
    BOOL            shift and go to state 24
    ID              shift and go to state 19

    tipo                           shift and go to state 32

state 29

    (12) var -> tipo ID . SEMI

    SEMI            shift and go to state 33


state 30

    (21) tipo -> INT LBRACK . RBRACK

    RBRACK          shift and go to state 34


state 31

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING . LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    LBRACK          shift and go to state 35


state 32

    (13) metodo -> PUBLIC tipo . ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE

    ID              shift and go to state 36


state 33

    (12) var -> tipo ID SEMI .

    PUBLIC          reduce using rule 12 (var -> tipo ID SEMI .)
    RBRACE          reduce using rule 12 (var -> tipo ID SEMI .)
    INT             reduce using rule 12 (var -> tipo ID SEMI .)
    BOOL            reduce using rule 12 (var -> tipo ID SEMI .)
    ID              reduce using rule 12 (var -> tipo ID SEMI .)
    IF              reduce using rule 12 (var -> tipo ID SEMI .)
    LBRACE          reduce using rule 12 (var -> tipo ID SEMI .)
    WHILE           reduce using rule 12 (var -> tipo ID SEMI .)
    SOUTPL          reduce using rule 12 (var -> tipo ID SEMI .)
    RETURN          reduce using rule 12 (var -> tipo ID SEMI .)


state 34

    (21) tipo -> INT LBRACK RBRACK .

    ID              reduce using rule 21 (tipo -> INT LBRACK RBRACK .)


state 35

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK . RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE

    RBRACK          shift and go to state 37


state 36

    (13) metodo -> PUBLIC tipo ID . LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE

    LPAREN          shift and go to state 38


state 37

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK . ID RPAREN LBRACE cmds RBRACE RBRACE

    ID              shift and go to state 39


state 38

    (13) metodo -> PUBLIC tipo ID LPAREN . paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE
    (14) paramsopcional -> . params
    (15) paramsopcional -> .
    (18) params -> . tipo ID listaparamsextra
    (21) tipo -> . INT LBRACK RBRACK
    (22) tipo -> . BOOL
    (23) tipo -> . INT
    (24) tipo -> . ID

    RPAREN          reduce using rule 15 (paramsopcional -> .)
    INT             shift and go to state 23
    BOOL            shift and go to state 24
    ID              shift and go to state 19

    tipo                           shift and go to state 40
    paramsopcional                 shift and go to state 41
    params                         shift and go to state 42

state 39

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID . RPAREN LBRACE cmds RBRACE RBRACE

    RPAREN          shift and go to state 43


state 40

    (18) params -> tipo . ID listaparamsextra

    ID              shift and go to state 44


state 41

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional . RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE

    RPAREN          shift and go to state 45


state 42

    (14) paramsopcional -> params .

    RPAREN          reduce using rule 14 (paramsopcional -> params .)


state 43

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN . LBRACE cmds RBRACE RBRACE

    LBRACE          shift and go to state 46


state 44

    (18) params -> tipo ID . listaparamsextra
    (19) listaparamsextra -> . listaparamsextra COMMA tipo ID
    (20) listaparamsextra -> .

    RPAREN          reduce using rule 20 (listaparamsextra -> .)
    COMMA           reduce using rule 20 (listaparamsextra -> .)

    listaparamsextra               shift and go to state 47

state 45

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN . LBRACE variaveis cmds RETURN exp SEMI RBRACE

    LBRACE          shift and go to state 48


state 46

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE . cmds RBRACE RBRACE
    (16) cmds -> . cmds cmd
    (17) cmds -> .

    RBRACE          reduce using rule 17 (cmds -> .)
    RETURN          reduce using rule 17 (cmds -> .)
    IF              reduce using rule 17 (cmds -> .)
    LBRACE          reduce using rule 17 (cmds -> .)
    WHILE           reduce using rule 17 (cmds -> .)
    SOUTPL          reduce using rule 17 (cmds -> .)
    ID              reduce using rule 17 (cmds -> .)

    cmds                           shift and go to state 49

state 47

    (18) params -> tipo ID listaparamsextra .
    (19) listaparamsextra -> listaparamsextra . COMMA tipo ID

    RPAREN          reduce using rule 18 (params -> tipo ID listaparamsextra .)
    COMMA           shift and go to state 50


state 48

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE . variaveis cmds RETURN exp SEMI RBRACE
    (8) variaveis -> . variaveis var
    (9) variaveis -> .

    PUBLIC          reduce using rule 9 (variaveis -> .)
    RBRACE          reduce using rule 9 (variaveis -> .)
    INT             reduce using rule 9 (variaveis -> .)
    BOOL            reduce using rule 9 (variaveis -> .)
    ID              reduce using rule 9 (variaveis -> .)
    IF              reduce using rule 9 (variaveis -> .)
    LBRACE          reduce using rule 9 (variaveis -> .)
    WHILE           reduce using rule 9 (variaveis -> .)
    SOUTPL          reduce using rule 9 (variaveis -> .)
    RETURN          reduce using rule 9 (variaveis -> .)

    variaveis                      shift and go to state 51

state 49

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds . RBRACE RBRACE
    (16) cmds -> cmds . cmd
    (25) cmd -> . condstmt
    (26) cmd -> . otherstmt
    (32) condstmt -> . IF LPAREN exp cmd matchornot
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    RBRACE          shift and go to state 54
    IF              shift and go to state 58
    LBRACE          shift and go to state 53
    WHILE           shift and go to state 59
    SOUTPL          shift and go to state 60
    ID              shift and go to state 52

    cmd                            shift and go to state 55
    condstmt                       shift and go to state 56
    otherstmt                      shift and go to state 57

state 50

    (19) listaparamsextra -> listaparamsextra COMMA . tipo ID
    (21) tipo -> . INT LBRACK RBRACK
    (22) tipo -> . BOOL
    (23) tipo -> . INT
    (24) tipo -> . ID

    INT             shift and go to state 23
    BOOL            shift and go to state 24
    ID              shift and go to state 19

    tipo                           shift and go to state 61

state 51

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis . cmds RETURN exp SEMI RBRACE
    (8) variaveis -> variaveis . var
    (16) cmds -> . cmds cmd
    (17) cmds -> .
    (12) var -> . tipo ID SEMI
    (21) tipo -> . INT LBRACK RBRACK
    (22) tipo -> . BOOL
    (23) tipo -> . INT
    (24) tipo -> . ID

  ! shift/reduce conflict for ID resolved as shift
    RBRACE          reduce using rule 17 (cmds -> .)
    RETURN          reduce using rule 17 (cmds -> .)
    IF              reduce using rule 17 (cmds -> .)
    LBRACE          reduce using rule 17 (cmds -> .)
    WHILE           reduce using rule 17 (cmds -> .)
    SOUTPL          reduce using rule 17 (cmds -> .)
    INT             shift and go to state 23
    BOOL            shift and go to state 24
    ID              shift and go to state 19

  ! ID              [ reduce using rule 17 (cmds -> .) ]

    tipo                           shift and go to state 22
    cmds                           shift and go to state 62
    var                            shift and go to state 21

state 52

    (30) otherstmt -> ID . ASSIGN exp SEMI
    (31) otherstmt -> ID . LBRACK exp RBRACK ASSIGN exp SEMI

    ASSIGN          shift and go to state 63
    LBRACK          shift and go to state 64


state 53

    (27) otherstmt -> LBRACE . cmds RBRACE
    (16) cmds -> . cmds cmd
    (17) cmds -> .

    RBRACE          reduce using rule 17 (cmds -> .)
    RETURN          reduce using rule 17 (cmds -> .)
    IF              reduce using rule 17 (cmds -> .)
    LBRACE          reduce using rule 17 (cmds -> .)
    WHILE           reduce using rule 17 (cmds -> .)
    SOUTPL          reduce using rule 17 (cmds -> .)
    ID              reduce using rule 17 (cmds -> .)

    cmds                           shift and go to state 65

state 54

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE . RBRACE

    RBRACE          shift and go to state 66


state 55

    (16) cmds -> cmds cmd .

    RBRACE          reduce using rule 16 (cmds -> cmds cmd .)
    RETURN          reduce using rule 16 (cmds -> cmds cmd .)
    IF              reduce using rule 16 (cmds -> cmds cmd .)
    LBRACE          reduce using rule 16 (cmds -> cmds cmd .)
    WHILE           reduce using rule 16 (cmds -> cmds cmd .)
    SOUTPL          reduce using rule 16 (cmds -> cmds cmd .)
    ID              reduce using rule 16 (cmds -> cmds cmd .)


state 56

    (25) cmd -> condstmt .

    RBRACE          reduce using rule 25 (cmd -> condstmt .)
    RETURN          reduce using rule 25 (cmd -> condstmt .)
    IF              reduce using rule 25 (cmd -> condstmt .)
    LBRACE          reduce using rule 25 (cmd -> condstmt .)
    WHILE           reduce using rule 25 (cmd -> condstmt .)
    SOUTPL          reduce using rule 25 (cmd -> condstmt .)
    ID              reduce using rule 25 (cmd -> condstmt .)
    ELSE            reduce using rule 25 (cmd -> condstmt .)


state 57

    (26) cmd -> otherstmt .

    RBRACE          reduce using rule 26 (cmd -> otherstmt .)
    RETURN          reduce using rule 26 (cmd -> otherstmt .)
    IF              reduce using rule 26 (cmd -> otherstmt .)
    LBRACE          reduce using rule 26 (cmd -> otherstmt .)
    WHILE           reduce using rule 26 (cmd -> otherstmt .)
    SOUTPL          reduce using rule 26 (cmd -> otherstmt .)
    ID              reduce using rule 26 (cmd -> otherstmt .)
    ELSE            reduce using rule 26 (cmd -> otherstmt .)


state 58

    (32) condstmt -> IF . LPAREN exp cmd matchornot

    LPAREN          shift and go to state 67


state 59

    (28) otherstmt -> WHILE . LPAREN exp RPAREN cmd

    LPAREN          shift and go to state 68


state 60

    (29) otherstmt -> SOUTPL . LPAREN exp RPAREN SEMI

    LPAREN          shift and go to state 69


state 61

    (19) listaparamsextra -> listaparamsextra COMMA tipo . ID

    ID              shift and go to state 70


state 62

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds . RETURN exp SEMI RBRACE
    (16) cmds -> cmds . cmd
    (25) cmd -> . condstmt
    (26) cmd -> . otherstmt
    (32) condstmt -> . IF LPAREN exp cmd matchornot
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    RETURN          shift and go to state 71
    IF              shift and go to state 58
    LBRACE          shift and go to state 53
    WHILE           shift and go to state 59
    SOUTPL          shift and go to state 60
    ID              shift and go to state 52

    cmd                            shift and go to state 55
    condstmt                       shift and go to state 56
    otherstmt                      shift and go to state 57

state 63

    (30) otherstmt -> ID ASSIGN . exp SEMI
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    exp                            shift and go to state 73
    rexp                           shift and go to state 74
    aexp                           shift and go to state 75
    mexp                           shift and go to state 76
    sexp                           shift and go to state 78
    pexp                           shift and go to state 85

state 64

    (31) otherstmt -> ID LBRACK . exp RBRACK ASSIGN exp SEMI
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    exp                            shift and go to state 87
    rexp                           shift and go to state 74
    aexp                           shift and go to state 75
    mexp                           shift and go to state 76
    sexp                           shift and go to state 78
    pexp                           shift and go to state 85

state 65

    (27) otherstmt -> LBRACE cmds . RBRACE
    (16) cmds -> cmds . cmd
    (25) cmd -> . condstmt
    (26) cmd -> . otherstmt
    (32) condstmt -> . IF LPAREN exp cmd matchornot
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    RBRACE          shift and go to state 88
    IF              shift and go to state 58
    LBRACE          shift and go to state 53
    WHILE           shift and go to state 59
    SOUTPL          shift and go to state 60
    ID              shift and go to state 52

    cmd                            shift and go to state 55
    condstmt                       shift and go to state 56
    otherstmt                      shift and go to state 57

state 66

    (4) main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE .

    CLASS           reduce using rule 4 (main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE .)
    $end            reduce using rule 4 (main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE .)


state 67

    (32) condstmt -> IF LPAREN . exp cmd matchornot
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    exp                            shift and go to state 89
    rexp                           shift and go to state 74
    aexp                           shift and go to state 75
    mexp                           shift and go to state 76
    sexp                           shift and go to state 78
    pexp                           shift and go to state 85

state 68

    (28) otherstmt -> WHILE LPAREN . exp RPAREN cmd
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    exp                            shift and go to state 90
    rexp                           shift and go to state 74
    aexp                           shift and go to state 75
    mexp                           shift and go to state 76
    sexp                           shift and go to state 78
    pexp                           shift and go to state 85

state 69

    (29) otherstmt -> SOUTPL LPAREN . exp RPAREN SEMI
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    exp                            shift and go to state 91
    rexp                           shift and go to state 74
    aexp                           shift and go to state 75
    mexp                           shift and go to state 76
    sexp                           shift and go to state 78
    pexp                           shift and go to state 85

state 70

    (19) listaparamsextra -> listaparamsextra COMMA tipo ID .

    RPAREN          reduce using rule 19 (listaparamsextra -> listaparamsextra COMMA tipo ID .)
    COMMA           reduce using rule 19 (listaparamsextra -> listaparamsextra COMMA tipo ID .)


state 71

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN . exp SEMI RBRACE
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    exp                            shift and go to state 92
    rexp                           shift and go to state 74
    aexp                           shift and go to state 75
    mexp                           shift and go to state 76
    sexp                           shift and go to state 78
    pexp                           shift and go to state 85

state 72

    (58) pexp -> ID .

    POINT           reduce using rule 58 (pexp -> ID .)
    LBRACK          reduce using rule 58 (pexp -> ID .)
    SEMI            reduce using rule 58 (pexp -> ID .)
    RPAREN          reduce using rule 58 (pexp -> ID .)
    RBRACK          reduce using rule 58 (pexp -> ID .)
    IF              reduce using rule 58 (pexp -> ID .)
    LBRACE          reduce using rule 58 (pexp -> ID .)
    WHILE           reduce using rule 58 (pexp -> ID .)
    SOUTPL          reduce using rule 58 (pexp -> ID .)
    ID              reduce using rule 58 (pexp -> ID .)
    LAND            reduce using rule 58 (pexp -> ID .)
    LOR             reduce using rule 58 (pexp -> ID .)
    LT              reduce using rule 58 (pexp -> ID .)
    EQ              reduce using rule 58 (pexp -> ID .)
    NE              reduce using rule 58 (pexp -> ID .)
    PLUS            reduce using rule 58 (pexp -> ID .)
    MINUS           reduce using rule 58 (pexp -> ID .)
    TIMES           reduce using rule 58 (pexp -> ID .)
    DIVIDE          reduce using rule 58 (pexp -> ID .)
    COMMA           reduce using rule 58 (pexp -> ID .)


state 73

    (30) otherstmt -> ID ASSIGN exp . SEMI
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    SEMI            shift and go to state 93
    LAND            shift and go to state 94
    LOR             shift and go to state 95


state 74

    (37) exp -> rexp .
    (38) rexp -> rexp . LT aexp
    (39) rexp -> rexp . EQ aexp
    (40) rexp -> rexp . NE aexp

    SEMI            reduce using rule 37 (exp -> rexp .)
    RPAREN          reduce using rule 37 (exp -> rexp .)
    RBRACK          reduce using rule 37 (exp -> rexp .)
    IF              reduce using rule 37 (exp -> rexp .)
    LBRACE          reduce using rule 37 (exp -> rexp .)
    WHILE           reduce using rule 37 (exp -> rexp .)
    SOUTPL          reduce using rule 37 (exp -> rexp .)
    ID              reduce using rule 37 (exp -> rexp .)
    LAND            reduce using rule 37 (exp -> rexp .)
    LOR             reduce using rule 37 (exp -> rexp .)
    COMMA           reduce using rule 37 (exp -> rexp .)
    LT              shift and go to state 96
    EQ              shift and go to state 97
    NE              shift and go to state 98


state 75

    (41) rexp -> aexp .
    (42) aexp -> aexp . PLUS mexp
    (43) aexp -> aexp . MINUS mexp

    SEMI            reduce using rule 41 (rexp -> aexp .)
    RPAREN          reduce using rule 41 (rexp -> aexp .)
    RBRACK          reduce using rule 41 (rexp -> aexp .)
    IF              reduce using rule 41 (rexp -> aexp .)
    LBRACE          reduce using rule 41 (rexp -> aexp .)
    WHILE           reduce using rule 41 (rexp -> aexp .)
    SOUTPL          reduce using rule 41 (rexp -> aexp .)
    ID              reduce using rule 41 (rexp -> aexp .)
    LAND            reduce using rule 41 (rexp -> aexp .)
    LOR             reduce using rule 41 (rexp -> aexp .)
    LT              reduce using rule 41 (rexp -> aexp .)
    EQ              reduce using rule 41 (rexp -> aexp .)
    NE              reduce using rule 41 (rexp -> aexp .)
    COMMA           reduce using rule 41 (rexp -> aexp .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100


state 76

    (44) aexp -> mexp .
    (45) mexp -> mexp . TIMES sexp
    (46) mexp -> mexp . DIVIDE sexp

    SEMI            reduce using rule 44 (aexp -> mexp .)
    RPAREN          reduce using rule 44 (aexp -> mexp .)
    RBRACK          reduce using rule 44 (aexp -> mexp .)
    IF              reduce using rule 44 (aexp -> mexp .)
    LBRACE          reduce using rule 44 (aexp -> mexp .)
    WHILE           reduce using rule 44 (aexp -> mexp .)
    SOUTPL          reduce using rule 44 (aexp -> mexp .)
    ID              reduce using rule 44 (aexp -> mexp .)
    LAND            reduce using rule 44 (aexp -> mexp .)
    LOR             reduce using rule 44 (aexp -> mexp .)
    LT              reduce using rule 44 (aexp -> mexp .)
    EQ              reduce using rule 44 (aexp -> mexp .)
    NE              reduce using rule 44 (aexp -> mexp .)
    PLUS            reduce using rule 44 (aexp -> mexp .)
    MINUS           reduce using rule 44 (aexp -> mexp .)
    COMMA           reduce using rule 44 (aexp -> mexp .)
    TIMES           shift and go to state 101
    DIVIDE          shift and go to state 102


state 77

    (49) sexp -> MINUS . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    sexp                           shift and go to state 103
    pexp                           shift and go to state 85

state 78

    (47) mexp -> sexp .

    SEMI            reduce using rule 47 (mexp -> sexp .)
    RPAREN          reduce using rule 47 (mexp -> sexp .)
    RBRACK          reduce using rule 47 (mexp -> sexp .)
    IF              reduce using rule 47 (mexp -> sexp .)
    LBRACE          reduce using rule 47 (mexp -> sexp .)
    WHILE           reduce using rule 47 (mexp -> sexp .)
    SOUTPL          reduce using rule 47 (mexp -> sexp .)
    ID              reduce using rule 47 (mexp -> sexp .)
    LAND            reduce using rule 47 (mexp -> sexp .)
    LOR             reduce using rule 47 (mexp -> sexp .)
    LT              reduce using rule 47 (mexp -> sexp .)
    EQ              reduce using rule 47 (mexp -> sexp .)
    NE              reduce using rule 47 (mexp -> sexp .)
    PLUS            reduce using rule 47 (mexp -> sexp .)
    MINUS           reduce using rule 47 (mexp -> sexp .)
    TIMES           reduce using rule 47 (mexp -> sexp .)
    DIVIDE          reduce using rule 47 (mexp -> sexp .)
    COMMA           reduce using rule 47 (mexp -> sexp .)


state 79

    (48) sexp -> LNOT . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    sexp                           shift and go to state 104
    pexp                           shift and go to state 85

state 80

    (50) sexp -> TRUE .

    SEMI            reduce using rule 50 (sexp -> TRUE .)
    RPAREN          reduce using rule 50 (sexp -> TRUE .)
    RBRACK          reduce using rule 50 (sexp -> TRUE .)
    IF              reduce using rule 50 (sexp -> TRUE .)
    LBRACE          reduce using rule 50 (sexp -> TRUE .)
    WHILE           reduce using rule 50 (sexp -> TRUE .)
    SOUTPL          reduce using rule 50 (sexp -> TRUE .)
    ID              reduce using rule 50 (sexp -> TRUE .)
    LAND            reduce using rule 50 (sexp -> TRUE .)
    LOR             reduce using rule 50 (sexp -> TRUE .)
    LT              reduce using rule 50 (sexp -> TRUE .)
    EQ              reduce using rule 50 (sexp -> TRUE .)
    NE              reduce using rule 50 (sexp -> TRUE .)
    PLUS            reduce using rule 50 (sexp -> TRUE .)
    MINUS           reduce using rule 50 (sexp -> TRUE .)
    TIMES           reduce using rule 50 (sexp -> TRUE .)
    DIVIDE          reduce using rule 50 (sexp -> TRUE .)
    COMMA           reduce using rule 50 (sexp -> TRUE .)


state 81

    (51) sexp -> FALSE .

    SEMI            reduce using rule 51 (sexp -> FALSE .)
    RPAREN          reduce using rule 51 (sexp -> FALSE .)
    RBRACK          reduce using rule 51 (sexp -> FALSE .)
    IF              reduce using rule 51 (sexp -> FALSE .)
    LBRACE          reduce using rule 51 (sexp -> FALSE .)
    WHILE           reduce using rule 51 (sexp -> FALSE .)
    SOUTPL          reduce using rule 51 (sexp -> FALSE .)
    ID              reduce using rule 51 (sexp -> FALSE .)
    LAND            reduce using rule 51 (sexp -> FALSE .)
    LOR             reduce using rule 51 (sexp -> FALSE .)
    LT              reduce using rule 51 (sexp -> FALSE .)
    EQ              reduce using rule 51 (sexp -> FALSE .)
    NE              reduce using rule 51 (sexp -> FALSE .)
    PLUS            reduce using rule 51 (sexp -> FALSE .)
    MINUS           reduce using rule 51 (sexp -> FALSE .)
    TIMES           reduce using rule 51 (sexp -> FALSE .)
    DIVIDE          reduce using rule 51 (sexp -> FALSE .)
    COMMA           reduce using rule 51 (sexp -> FALSE .)


state 82

    (52) sexp -> NUMBER .

    SEMI            reduce using rule 52 (sexp -> NUMBER .)
    RPAREN          reduce using rule 52 (sexp -> NUMBER .)
    RBRACK          reduce using rule 52 (sexp -> NUMBER .)
    IF              reduce using rule 52 (sexp -> NUMBER .)
    LBRACE          reduce using rule 52 (sexp -> NUMBER .)
    WHILE           reduce using rule 52 (sexp -> NUMBER .)
    SOUTPL          reduce using rule 52 (sexp -> NUMBER .)
    ID              reduce using rule 52 (sexp -> NUMBER .)
    LAND            reduce using rule 52 (sexp -> NUMBER .)
    LOR             reduce using rule 52 (sexp -> NUMBER .)
    LT              reduce using rule 52 (sexp -> NUMBER .)
    EQ              reduce using rule 52 (sexp -> NUMBER .)
    NE              reduce using rule 52 (sexp -> NUMBER .)
    PLUS            reduce using rule 52 (sexp -> NUMBER .)
    MINUS           reduce using rule 52 (sexp -> NUMBER .)
    TIMES           reduce using rule 52 (sexp -> NUMBER .)
    DIVIDE          reduce using rule 52 (sexp -> NUMBER .)
    COMMA           reduce using rule 52 (sexp -> NUMBER .)


state 83

    (53) sexp -> NULL .

    SEMI            reduce using rule 53 (sexp -> NULL .)
    RPAREN          reduce using rule 53 (sexp -> NULL .)
    RBRACK          reduce using rule 53 (sexp -> NULL .)
    IF              reduce using rule 53 (sexp -> NULL .)
    LBRACE          reduce using rule 53 (sexp -> NULL .)
    WHILE           reduce using rule 53 (sexp -> NULL .)
    SOUTPL          reduce using rule 53 (sexp -> NULL .)
    ID              reduce using rule 53 (sexp -> NULL .)
    LAND            reduce using rule 53 (sexp -> NULL .)
    LOR             reduce using rule 53 (sexp -> NULL .)
    LT              reduce using rule 53 (sexp -> NULL .)
    EQ              reduce using rule 53 (sexp -> NULL .)
    NE              reduce using rule 53 (sexp -> NULL .)
    PLUS            reduce using rule 53 (sexp -> NULL .)
    MINUS           reduce using rule 53 (sexp -> NULL .)
    TIMES           reduce using rule 53 (sexp -> NULL .)
    DIVIDE          reduce using rule 53 (sexp -> NULL .)
    COMMA           reduce using rule 53 (sexp -> NULL .)


state 84

    (54) sexp -> NEW . INT LBRACK exp RBRACK
    (60) pexp -> NEW . ID LPAREN RPAREN

    INT             shift and go to state 105
    ID              shift and go to state 106


state 85

    (55) sexp -> pexp . POINT LENGTH
    (56) sexp -> pexp . LBRACK exp RBRACK
    (57) sexp -> pexp .
    (61) pexp -> pexp . POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> pexp . POINT ID LPAREN RPAREN
    (63) pexp -> pexp . POINT ID

    POINT           shift and go to state 107
    LBRACK          shift and go to state 108
    SEMI            reduce using rule 57 (sexp -> pexp .)
    RPAREN          reduce using rule 57 (sexp -> pexp .)
    RBRACK          reduce using rule 57 (sexp -> pexp .)
    IF              reduce using rule 57 (sexp -> pexp .)
    LBRACE          reduce using rule 57 (sexp -> pexp .)
    WHILE           reduce using rule 57 (sexp -> pexp .)
    SOUTPL          reduce using rule 57 (sexp -> pexp .)
    ID              reduce using rule 57 (sexp -> pexp .)
    LAND            reduce using rule 57 (sexp -> pexp .)
    LOR             reduce using rule 57 (sexp -> pexp .)
    LT              reduce using rule 57 (sexp -> pexp .)
    EQ              reduce using rule 57 (sexp -> pexp .)
    NE              reduce using rule 57 (sexp -> pexp .)
    PLUS            reduce using rule 57 (sexp -> pexp .)
    MINUS           reduce using rule 57 (sexp -> pexp .)
    TIMES           reduce using rule 57 (sexp -> pexp .)
    DIVIDE          reduce using rule 57 (sexp -> pexp .)
    COMMA           reduce using rule 57 (sexp -> pexp .)


state 86

    (59) pexp -> THIS .

    POINT           reduce using rule 59 (pexp -> THIS .)
    LBRACK          reduce using rule 59 (pexp -> THIS .)
    SEMI            reduce using rule 59 (pexp -> THIS .)
    RPAREN          reduce using rule 59 (pexp -> THIS .)
    RBRACK          reduce using rule 59 (pexp -> THIS .)
    IF              reduce using rule 59 (pexp -> THIS .)
    LBRACE          reduce using rule 59 (pexp -> THIS .)
    WHILE           reduce using rule 59 (pexp -> THIS .)
    SOUTPL          reduce using rule 59 (pexp -> THIS .)
    ID              reduce using rule 59 (pexp -> THIS .)
    LAND            reduce using rule 59 (pexp -> THIS .)
    LOR             reduce using rule 59 (pexp -> THIS .)
    LT              reduce using rule 59 (pexp -> THIS .)
    EQ              reduce using rule 59 (pexp -> THIS .)
    NE              reduce using rule 59 (pexp -> THIS .)
    PLUS            reduce using rule 59 (pexp -> THIS .)
    MINUS           reduce using rule 59 (pexp -> THIS .)
    TIMES           reduce using rule 59 (pexp -> THIS .)
    DIVIDE          reduce using rule 59 (pexp -> THIS .)
    COMMA           reduce using rule 59 (pexp -> THIS .)


state 87

    (31) otherstmt -> ID LBRACK exp . RBRACK ASSIGN exp SEMI
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    RBRACK          shift and go to state 109
    LAND            shift and go to state 94
    LOR             shift and go to state 95


state 88

    (27) otherstmt -> LBRACE cmds RBRACE .

    RBRACE          reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    RETURN          reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    IF              reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    LBRACE          reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    WHILE           reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    SOUTPL          reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    ID              reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)
    ELSE            reduce using rule 27 (otherstmt -> LBRACE cmds RBRACE .)


state 89

    (32) condstmt -> IF LPAREN exp . cmd matchornot
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp
    (25) cmd -> . condstmt
    (26) cmd -> . otherstmt
    (32) condstmt -> . IF LPAREN exp cmd matchornot
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    LAND            shift and go to state 94
    LOR             shift and go to state 95
    IF              shift and go to state 58
    LBRACE          shift and go to state 53
    WHILE           shift and go to state 59
    SOUTPL          shift and go to state 60
    ID              shift and go to state 52

    cmd                            shift and go to state 110
    condstmt                       shift and go to state 56
    otherstmt                      shift and go to state 57

state 90

    (28) otherstmt -> WHILE LPAREN exp . RPAREN cmd
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    RPAREN          shift and go to state 111
    LAND            shift and go to state 94
    LOR             shift and go to state 95


state 91

    (29) otherstmt -> SOUTPL LPAREN exp . RPAREN SEMI
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    RPAREN          shift and go to state 112
    LAND            shift and go to state 94
    LOR             shift and go to state 95


state 92

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp . SEMI RBRACE
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    SEMI            shift and go to state 113
    LAND            shift and go to state 94
    LOR             shift and go to state 95


state 93

    (30) otherstmt -> ID ASSIGN exp SEMI .

    RBRACE          reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    RETURN          reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    IF              reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    LBRACE          reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    WHILE           reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    SOUTPL          reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    ID              reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)
    ELSE            reduce using rule 30 (otherstmt -> ID ASSIGN exp SEMI .)


state 94

    (35) exp -> exp LAND . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    rexp                           shift and go to state 114
    aexp                           shift and go to state 75
    mexp                           shift and go to state 76
    sexp                           shift and go to state 78
    pexp                           shift and go to state 85

state 95

    (36) exp -> exp LOR . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    rexp                           shift and go to state 115
    aexp                           shift and go to state 75
    mexp                           shift and go to state 76
    sexp                           shift and go to state 78
    pexp                           shift and go to state 85

state 96

    (38) rexp -> rexp LT . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    aexp                           shift and go to state 116
    mexp                           shift and go to state 76
    sexp                           shift and go to state 78
    pexp                           shift and go to state 85

state 97

    (39) rexp -> rexp EQ . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    aexp                           shift and go to state 117
    mexp                           shift and go to state 76
    sexp                           shift and go to state 78
    pexp                           shift and go to state 85

state 98

    (40) rexp -> rexp NE . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    aexp                           shift and go to state 118
    mexp                           shift and go to state 76
    sexp                           shift and go to state 78
    pexp                           shift and go to state 85

state 99

    (42) aexp -> aexp PLUS . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    mexp                           shift and go to state 119
    sexp                           shift and go to state 78
    pexp                           shift and go to state 85

state 100

    (43) aexp -> aexp MINUS . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    mexp                           shift and go to state 120
    sexp                           shift and go to state 78
    pexp                           shift and go to state 85

state 101

    (45) mexp -> mexp TIMES . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    sexp                           shift and go to state 121
    pexp                           shift and go to state 85

state 102

    (46) mexp -> mexp DIVIDE . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    sexp                           shift and go to state 122
    pexp                           shift and go to state 85

state 103

    (49) sexp -> MINUS sexp .

    SEMI            reduce using rule 49 (sexp -> MINUS sexp .)
    RPAREN          reduce using rule 49 (sexp -> MINUS sexp .)
    RBRACK          reduce using rule 49 (sexp -> MINUS sexp .)
    IF              reduce using rule 49 (sexp -> MINUS sexp .)
    LBRACE          reduce using rule 49 (sexp -> MINUS sexp .)
    WHILE           reduce using rule 49 (sexp -> MINUS sexp .)
    SOUTPL          reduce using rule 49 (sexp -> MINUS sexp .)
    ID              reduce using rule 49 (sexp -> MINUS sexp .)
    LAND            reduce using rule 49 (sexp -> MINUS sexp .)
    LOR             reduce using rule 49 (sexp -> MINUS sexp .)
    LT              reduce using rule 49 (sexp -> MINUS sexp .)
    EQ              reduce using rule 49 (sexp -> MINUS sexp .)
    NE              reduce using rule 49 (sexp -> MINUS sexp .)
    PLUS            reduce using rule 49 (sexp -> MINUS sexp .)
    MINUS           reduce using rule 49 (sexp -> MINUS sexp .)
    TIMES           reduce using rule 49 (sexp -> MINUS sexp .)
    DIVIDE          reduce using rule 49 (sexp -> MINUS sexp .)
    COMMA           reduce using rule 49 (sexp -> MINUS sexp .)


state 104

    (48) sexp -> LNOT sexp .

    SEMI            reduce using rule 48 (sexp -> LNOT sexp .)
    RPAREN          reduce using rule 48 (sexp -> LNOT sexp .)
    RBRACK          reduce using rule 48 (sexp -> LNOT sexp .)
    IF              reduce using rule 48 (sexp -> LNOT sexp .)
    LBRACE          reduce using rule 48 (sexp -> LNOT sexp .)
    WHILE           reduce using rule 48 (sexp -> LNOT sexp .)
    SOUTPL          reduce using rule 48 (sexp -> LNOT sexp .)
    ID              reduce using rule 48 (sexp -> LNOT sexp .)
    LAND            reduce using rule 48 (sexp -> LNOT sexp .)
    LOR             reduce using rule 48 (sexp -> LNOT sexp .)
    LT              reduce using rule 48 (sexp -> LNOT sexp .)
    EQ              reduce using rule 48 (sexp -> LNOT sexp .)
    NE              reduce using rule 48 (sexp -> LNOT sexp .)
    PLUS            reduce using rule 48 (sexp -> LNOT sexp .)
    MINUS           reduce using rule 48 (sexp -> LNOT sexp .)
    TIMES           reduce using rule 48 (sexp -> LNOT sexp .)
    DIVIDE          reduce using rule 48 (sexp -> LNOT sexp .)
    COMMA           reduce using rule 48 (sexp -> LNOT sexp .)


state 105

    (54) sexp -> NEW INT . LBRACK exp RBRACK

    LBRACK          shift and go to state 123


state 106

    (60) pexp -> NEW ID . LPAREN RPAREN

    LPAREN          shift and go to state 124


state 107

    (55) sexp -> pexp POINT . LENGTH
    (61) pexp -> pexp POINT . ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> pexp POINT . ID LPAREN RPAREN
    (63) pexp -> pexp POINT . ID

    LENGTH          shift and go to state 125
    ID              shift and go to state 126


state 108

    (56) sexp -> pexp LBRACK . exp RBRACK
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    pexp                           shift and go to state 85
    exp                            shift and go to state 127
    rexp                           shift and go to state 74
    aexp                           shift and go to state 75
    mexp                           shift and go to state 76
    sexp                           shift and go to state 78

state 109

    (31) otherstmt -> ID LBRACK exp RBRACK . ASSIGN exp SEMI

    ASSIGN          shift and go to state 128


state 110

    (32) condstmt -> IF LPAREN exp cmd . matchornot
    (33) matchornot -> . ELSE cmd
    (34) matchornot -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 130
    RBRACE          reduce using rule 34 (matchornot -> .)
    RETURN          reduce using rule 34 (matchornot -> .)
    IF              reduce using rule 34 (matchornot -> .)
    LBRACE          reduce using rule 34 (matchornot -> .)
    WHILE           reduce using rule 34 (matchornot -> .)
    SOUTPL          reduce using rule 34 (matchornot -> .)
    ID              reduce using rule 34 (matchornot -> .)

  ! ELSE            [ reduce using rule 34 (matchornot -> .) ]

    matchornot                     shift and go to state 129

state 111

    (28) otherstmt -> WHILE LPAREN exp RPAREN . cmd
    (25) cmd -> . condstmt
    (26) cmd -> . otherstmt
    (32) condstmt -> . IF LPAREN exp cmd matchornot
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    IF              shift and go to state 58
    LBRACE          shift and go to state 53
    WHILE           shift and go to state 59
    SOUTPL          shift and go to state 60
    ID              shift and go to state 52

    cmd                            shift and go to state 131
    condstmt                       shift and go to state 56
    otherstmt                      shift and go to state 57

state 112

    (29) otherstmt -> SOUTPL LPAREN exp RPAREN . SEMI

    SEMI            shift and go to state 132


state 113

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI . RBRACE

    RBRACE          shift and go to state 133


state 114

    (35) exp -> exp LAND rexp .
    (38) rexp -> rexp . LT aexp
    (39) rexp -> rexp . EQ aexp
    (40) rexp -> rexp . NE aexp

    SEMI            reduce using rule 35 (exp -> exp LAND rexp .)
    RPAREN          reduce using rule 35 (exp -> exp LAND rexp .)
    RBRACK          reduce using rule 35 (exp -> exp LAND rexp .)
    IF              reduce using rule 35 (exp -> exp LAND rexp .)
    LBRACE          reduce using rule 35 (exp -> exp LAND rexp .)
    WHILE           reduce using rule 35 (exp -> exp LAND rexp .)
    SOUTPL          reduce using rule 35 (exp -> exp LAND rexp .)
    ID              reduce using rule 35 (exp -> exp LAND rexp .)
    LAND            reduce using rule 35 (exp -> exp LAND rexp .)
    LOR             reduce using rule 35 (exp -> exp LAND rexp .)
    COMMA           reduce using rule 35 (exp -> exp LAND rexp .)
    LT              shift and go to state 96
    EQ              shift and go to state 97
    NE              shift and go to state 98


state 115

    (36) exp -> exp LOR rexp .
    (38) rexp -> rexp . LT aexp
    (39) rexp -> rexp . EQ aexp
    (40) rexp -> rexp . NE aexp

    SEMI            reduce using rule 36 (exp -> exp LOR rexp .)
    RPAREN          reduce using rule 36 (exp -> exp LOR rexp .)
    RBRACK          reduce using rule 36 (exp -> exp LOR rexp .)
    IF              reduce using rule 36 (exp -> exp LOR rexp .)
    LBRACE          reduce using rule 36 (exp -> exp LOR rexp .)
    WHILE           reduce using rule 36 (exp -> exp LOR rexp .)
    SOUTPL          reduce using rule 36 (exp -> exp LOR rexp .)
    ID              reduce using rule 36 (exp -> exp LOR rexp .)
    LAND            reduce using rule 36 (exp -> exp LOR rexp .)
    LOR             reduce using rule 36 (exp -> exp LOR rexp .)
    COMMA           reduce using rule 36 (exp -> exp LOR rexp .)
    LT              shift and go to state 96
    EQ              shift and go to state 97
    NE              shift and go to state 98


state 116

    (38) rexp -> rexp LT aexp .
    (42) aexp -> aexp . PLUS mexp
    (43) aexp -> aexp . MINUS mexp

    SEMI            reduce using rule 38 (rexp -> rexp LT aexp .)
    RPAREN          reduce using rule 38 (rexp -> rexp LT aexp .)
    RBRACK          reduce using rule 38 (rexp -> rexp LT aexp .)
    IF              reduce using rule 38 (rexp -> rexp LT aexp .)
    LBRACE          reduce using rule 38 (rexp -> rexp LT aexp .)
    WHILE           reduce using rule 38 (rexp -> rexp LT aexp .)
    SOUTPL          reduce using rule 38 (rexp -> rexp LT aexp .)
    ID              reduce using rule 38 (rexp -> rexp LT aexp .)
    LAND            reduce using rule 38 (rexp -> rexp LT aexp .)
    LOR             reduce using rule 38 (rexp -> rexp LT aexp .)
    LT              reduce using rule 38 (rexp -> rexp LT aexp .)
    EQ              reduce using rule 38 (rexp -> rexp LT aexp .)
    NE              reduce using rule 38 (rexp -> rexp LT aexp .)
    COMMA           reduce using rule 38 (rexp -> rexp LT aexp .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100


state 117

    (39) rexp -> rexp EQ aexp .
    (42) aexp -> aexp . PLUS mexp
    (43) aexp -> aexp . MINUS mexp

    SEMI            reduce using rule 39 (rexp -> rexp EQ aexp .)
    RPAREN          reduce using rule 39 (rexp -> rexp EQ aexp .)
    RBRACK          reduce using rule 39 (rexp -> rexp EQ aexp .)
    IF              reduce using rule 39 (rexp -> rexp EQ aexp .)
    LBRACE          reduce using rule 39 (rexp -> rexp EQ aexp .)
    WHILE           reduce using rule 39 (rexp -> rexp EQ aexp .)
    SOUTPL          reduce using rule 39 (rexp -> rexp EQ aexp .)
    ID              reduce using rule 39 (rexp -> rexp EQ aexp .)
    LAND            reduce using rule 39 (rexp -> rexp EQ aexp .)
    LOR             reduce using rule 39 (rexp -> rexp EQ aexp .)
    LT              reduce using rule 39 (rexp -> rexp EQ aexp .)
    EQ              reduce using rule 39 (rexp -> rexp EQ aexp .)
    NE              reduce using rule 39 (rexp -> rexp EQ aexp .)
    COMMA           reduce using rule 39 (rexp -> rexp EQ aexp .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100


state 118

    (40) rexp -> rexp NE aexp .
    (42) aexp -> aexp . PLUS mexp
    (43) aexp -> aexp . MINUS mexp

    SEMI            reduce using rule 40 (rexp -> rexp NE aexp .)
    RPAREN          reduce using rule 40 (rexp -> rexp NE aexp .)
    RBRACK          reduce using rule 40 (rexp -> rexp NE aexp .)
    IF              reduce using rule 40 (rexp -> rexp NE aexp .)
    LBRACE          reduce using rule 40 (rexp -> rexp NE aexp .)
    WHILE           reduce using rule 40 (rexp -> rexp NE aexp .)
    SOUTPL          reduce using rule 40 (rexp -> rexp NE aexp .)
    ID              reduce using rule 40 (rexp -> rexp NE aexp .)
    LAND            reduce using rule 40 (rexp -> rexp NE aexp .)
    LOR             reduce using rule 40 (rexp -> rexp NE aexp .)
    LT              reduce using rule 40 (rexp -> rexp NE aexp .)
    EQ              reduce using rule 40 (rexp -> rexp NE aexp .)
    NE              reduce using rule 40 (rexp -> rexp NE aexp .)
    COMMA           reduce using rule 40 (rexp -> rexp NE aexp .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100


state 119

    (42) aexp -> aexp PLUS mexp .
    (45) mexp -> mexp . TIMES sexp
    (46) mexp -> mexp . DIVIDE sexp

    SEMI            reduce using rule 42 (aexp -> aexp PLUS mexp .)
    RPAREN          reduce using rule 42 (aexp -> aexp PLUS mexp .)
    RBRACK          reduce using rule 42 (aexp -> aexp PLUS mexp .)
    IF              reduce using rule 42 (aexp -> aexp PLUS mexp .)
    LBRACE          reduce using rule 42 (aexp -> aexp PLUS mexp .)
    WHILE           reduce using rule 42 (aexp -> aexp PLUS mexp .)
    SOUTPL          reduce using rule 42 (aexp -> aexp PLUS mexp .)
    ID              reduce using rule 42 (aexp -> aexp PLUS mexp .)
    LAND            reduce using rule 42 (aexp -> aexp PLUS mexp .)
    LOR             reduce using rule 42 (aexp -> aexp PLUS mexp .)
    LT              reduce using rule 42 (aexp -> aexp PLUS mexp .)
    EQ              reduce using rule 42 (aexp -> aexp PLUS mexp .)
    NE              reduce using rule 42 (aexp -> aexp PLUS mexp .)
    PLUS            reduce using rule 42 (aexp -> aexp PLUS mexp .)
    MINUS           reduce using rule 42 (aexp -> aexp PLUS mexp .)
    COMMA           reduce using rule 42 (aexp -> aexp PLUS mexp .)
    TIMES           shift and go to state 101
    DIVIDE          shift and go to state 102


state 120

    (43) aexp -> aexp MINUS mexp .
    (45) mexp -> mexp . TIMES sexp
    (46) mexp -> mexp . DIVIDE sexp

    SEMI            reduce using rule 43 (aexp -> aexp MINUS mexp .)
    RPAREN          reduce using rule 43 (aexp -> aexp MINUS mexp .)
    RBRACK          reduce using rule 43 (aexp -> aexp MINUS mexp .)
    IF              reduce using rule 43 (aexp -> aexp MINUS mexp .)
    LBRACE          reduce using rule 43 (aexp -> aexp MINUS mexp .)
    WHILE           reduce using rule 43 (aexp -> aexp MINUS mexp .)
    SOUTPL          reduce using rule 43 (aexp -> aexp MINUS mexp .)
    ID              reduce using rule 43 (aexp -> aexp MINUS mexp .)
    LAND            reduce using rule 43 (aexp -> aexp MINUS mexp .)
    LOR             reduce using rule 43 (aexp -> aexp MINUS mexp .)
    LT              reduce using rule 43 (aexp -> aexp MINUS mexp .)
    EQ              reduce using rule 43 (aexp -> aexp MINUS mexp .)
    NE              reduce using rule 43 (aexp -> aexp MINUS mexp .)
    PLUS            reduce using rule 43 (aexp -> aexp MINUS mexp .)
    MINUS           reduce using rule 43 (aexp -> aexp MINUS mexp .)
    COMMA           reduce using rule 43 (aexp -> aexp MINUS mexp .)
    TIMES           shift and go to state 101
    DIVIDE          shift and go to state 102


state 121

    (45) mexp -> mexp TIMES sexp .

    SEMI            reduce using rule 45 (mexp -> mexp TIMES sexp .)
    RPAREN          reduce using rule 45 (mexp -> mexp TIMES sexp .)
    RBRACK          reduce using rule 45 (mexp -> mexp TIMES sexp .)
    IF              reduce using rule 45 (mexp -> mexp TIMES sexp .)
    LBRACE          reduce using rule 45 (mexp -> mexp TIMES sexp .)
    WHILE           reduce using rule 45 (mexp -> mexp TIMES sexp .)
    SOUTPL          reduce using rule 45 (mexp -> mexp TIMES sexp .)
    ID              reduce using rule 45 (mexp -> mexp TIMES sexp .)
    LAND            reduce using rule 45 (mexp -> mexp TIMES sexp .)
    LOR             reduce using rule 45 (mexp -> mexp TIMES sexp .)
    LT              reduce using rule 45 (mexp -> mexp TIMES sexp .)
    EQ              reduce using rule 45 (mexp -> mexp TIMES sexp .)
    NE              reduce using rule 45 (mexp -> mexp TIMES sexp .)
    PLUS            reduce using rule 45 (mexp -> mexp TIMES sexp .)
    MINUS           reduce using rule 45 (mexp -> mexp TIMES sexp .)
    TIMES           reduce using rule 45 (mexp -> mexp TIMES sexp .)
    DIVIDE          reduce using rule 45 (mexp -> mexp TIMES sexp .)
    COMMA           reduce using rule 45 (mexp -> mexp TIMES sexp .)


state 122

    (46) mexp -> mexp DIVIDE sexp .

    SEMI            reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    RPAREN          reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    RBRACK          reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    IF              reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    LBRACE          reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    WHILE           reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    SOUTPL          reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    ID              reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    LAND            reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    LOR             reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    LT              reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    EQ              reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    NE              reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    PLUS            reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    MINUS           reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    TIMES           reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    DIVIDE          reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    COMMA           reduce using rule 46 (mexp -> mexp DIVIDE sexp .)


state 123

    (54) sexp -> NEW INT LBRACK . exp RBRACK
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    exp                            shift and go to state 134
    rexp                           shift and go to state 74
    aexp                           shift and go to state 75
    mexp                           shift and go to state 76
    sexp                           shift and go to state 78
    pexp                           shift and go to state 85

state 124

    (60) pexp -> NEW ID LPAREN . RPAREN

    RPAREN          shift and go to state 135


state 125

    (55) sexp -> pexp POINT LENGTH .

    SEMI            reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    RPAREN          reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    RBRACK          reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    IF              reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    LBRACE          reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    WHILE           reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    SOUTPL          reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    ID              reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    LAND            reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    LOR             reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    LT              reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    EQ              reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    NE              reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    PLUS            reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    MINUS           reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    TIMES           reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    DIVIDE          reduce using rule 55 (sexp -> pexp POINT LENGTH .)
    COMMA           reduce using rule 55 (sexp -> pexp POINT LENGTH .)


state 126

    (61) pexp -> pexp POINT ID . LPAREN expopcionalmetodo RPAREN
    (62) pexp -> pexp POINT ID . LPAREN RPAREN
    (63) pexp -> pexp POINT ID .

    LPAREN          shift and go to state 136
    POINT           reduce using rule 63 (pexp -> pexp POINT ID .)
    LBRACK          reduce using rule 63 (pexp -> pexp POINT ID .)
    SEMI            reduce using rule 63 (pexp -> pexp POINT ID .)
    RPAREN          reduce using rule 63 (pexp -> pexp POINT ID .)
    RBRACK          reduce using rule 63 (pexp -> pexp POINT ID .)
    IF              reduce using rule 63 (pexp -> pexp POINT ID .)
    LBRACE          reduce using rule 63 (pexp -> pexp POINT ID .)
    WHILE           reduce using rule 63 (pexp -> pexp POINT ID .)
    SOUTPL          reduce using rule 63 (pexp -> pexp POINT ID .)
    ID              reduce using rule 63 (pexp -> pexp POINT ID .)
    LAND            reduce using rule 63 (pexp -> pexp POINT ID .)
    LOR             reduce using rule 63 (pexp -> pexp POINT ID .)
    LT              reduce using rule 63 (pexp -> pexp POINT ID .)
    EQ              reduce using rule 63 (pexp -> pexp POINT ID .)
    NE              reduce using rule 63 (pexp -> pexp POINT ID .)
    PLUS            reduce using rule 63 (pexp -> pexp POINT ID .)
    MINUS           reduce using rule 63 (pexp -> pexp POINT ID .)
    TIMES           reduce using rule 63 (pexp -> pexp POINT ID .)
    DIVIDE          reduce using rule 63 (pexp -> pexp POINT ID .)
    COMMA           reduce using rule 63 (pexp -> pexp POINT ID .)


state 127

    (56) sexp -> pexp LBRACK exp . RBRACK
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    RBRACK          shift and go to state 137
    LAND            shift and go to state 94
    LOR             shift and go to state 95


state 128

    (31) otherstmt -> ID LBRACK exp RBRACK ASSIGN . exp SEMI
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    exp                            shift and go to state 138
    rexp                           shift and go to state 74
    aexp                           shift and go to state 75
    mexp                           shift and go to state 76
    sexp                           shift and go to state 78
    pexp                           shift and go to state 85

state 129

    (32) condstmt -> IF LPAREN exp cmd matchornot .

    RBRACE          reduce using rule 32 (condstmt -> IF LPAREN exp cmd matchornot .)
    RETURN          reduce using rule 32 (condstmt -> IF LPAREN exp cmd matchornot .)
    IF              reduce using rule 32 (condstmt -> IF LPAREN exp cmd matchornot .)
    LBRACE          reduce using rule 32 (condstmt -> IF LPAREN exp cmd matchornot .)
    WHILE           reduce using rule 32 (condstmt -> IF LPAREN exp cmd matchornot .)
    SOUTPL          reduce using rule 32 (condstmt -> IF LPAREN exp cmd matchornot .)
    ID              reduce using rule 32 (condstmt -> IF LPAREN exp cmd matchornot .)
    ELSE            reduce using rule 32 (condstmt -> IF LPAREN exp cmd matchornot .)


state 130

    (33) matchornot -> ELSE . cmd
    (25) cmd -> . condstmt
    (26) cmd -> . otherstmt
    (32) condstmt -> . IF LPAREN exp cmd matchornot
    (27) otherstmt -> . LBRACE cmds RBRACE
    (28) otherstmt -> . WHILE LPAREN exp RPAREN cmd
    (29) otherstmt -> . SOUTPL LPAREN exp RPAREN SEMI
    (30) otherstmt -> . ID ASSIGN exp SEMI
    (31) otherstmt -> . ID LBRACK exp RBRACK ASSIGN exp SEMI

    IF              shift and go to state 58
    LBRACE          shift and go to state 53
    WHILE           shift and go to state 59
    SOUTPL          shift and go to state 60
    ID              shift and go to state 52

    cmd                            shift and go to state 139
    condstmt                       shift and go to state 56
    otherstmt                      shift and go to state 57

state 131

    (28) otherstmt -> WHILE LPAREN exp RPAREN cmd .

    RBRACE          reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    RETURN          reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    IF              reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    LBRACE          reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    WHILE           reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    SOUTPL          reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    ID              reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)
    ELSE            reduce using rule 28 (otherstmt -> WHILE LPAREN exp RPAREN cmd .)


state 132

    (29) otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .

    RBRACE          reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    RETURN          reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    IF              reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    LBRACE          reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    WHILE           reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    SOUTPL          reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    ID              reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)
    ELSE            reduce using rule 29 (otherstmt -> SOUTPL LPAREN exp RPAREN SEMI .)


state 133

    (13) metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE .

    RBRACE          reduce using rule 13 (metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE .)
    PUBLIC          reduce using rule 13 (metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE .)


state 134

    (54) sexp -> NEW INT LBRACK exp . RBRACK
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    RBRACK          shift and go to state 140
    LAND            shift and go to state 94
    LOR             shift and go to state 95


state 135

    (60) pexp -> NEW ID LPAREN RPAREN .

    POINT           reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    LBRACK          reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    SEMI            reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    RPAREN          reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    RBRACK          reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    IF              reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    LBRACE          reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    WHILE           reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    SOUTPL          reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    ID              reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    LAND            reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    LOR             reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    LT              reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    EQ              reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    NE              reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    PLUS            reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    MINUS           reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    TIMES           reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)
    COMMA           reduce using rule 60 (pexp -> NEW ID LPAREN RPAREN .)


state 136

    (61) pexp -> pexp POINT ID LPAREN . expopcionalmetodo RPAREN
    (62) pexp -> pexp POINT ID LPAREN . RPAREN
    (64) expopcionalmetodo -> . exps
    (65) exps -> . exp expslist
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    RPAREN          shift and go to state 142
    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    pexp                           shift and go to state 85
    expopcionalmetodo              shift and go to state 141
    exps                           shift and go to state 143
    exp                            shift and go to state 144
    rexp                           shift and go to state 74
    aexp                           shift and go to state 75
    mexp                           shift and go to state 76
    sexp                           shift and go to state 78

state 137

    (56) sexp -> pexp LBRACK exp RBRACK .

    SEMI            reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    RPAREN          reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    RBRACK          reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    IF              reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    LBRACE          reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    WHILE           reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    SOUTPL          reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    ID              reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    LAND            reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    LOR             reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    LT              reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    EQ              reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    NE              reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    PLUS            reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    MINUS           reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    TIMES           reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    DIVIDE          reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)
    COMMA           reduce using rule 56 (sexp -> pexp LBRACK exp RBRACK .)


state 138

    (31) otherstmt -> ID LBRACK exp RBRACK ASSIGN exp . SEMI
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    SEMI            shift and go to state 145
    LAND            shift and go to state 94
    LOR             shift and go to state 95


state 139

    (33) matchornot -> ELSE cmd .

    RBRACE          reduce using rule 33 (matchornot -> ELSE cmd .)
    RETURN          reduce using rule 33 (matchornot -> ELSE cmd .)
    IF              reduce using rule 33 (matchornot -> ELSE cmd .)
    LBRACE          reduce using rule 33 (matchornot -> ELSE cmd .)
    WHILE           reduce using rule 33 (matchornot -> ELSE cmd .)
    SOUTPL          reduce using rule 33 (matchornot -> ELSE cmd .)
    ID              reduce using rule 33 (matchornot -> ELSE cmd .)
    ELSE            reduce using rule 33 (matchornot -> ELSE cmd .)


state 140

    (54) sexp -> NEW INT LBRACK exp RBRACK .

    SEMI            reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    RPAREN          reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    RBRACK          reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    IF              reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    LBRACE          reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    WHILE           reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    SOUTPL          reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    ID              reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    LAND            reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    LOR             reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    LT              reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    EQ              reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    NE              reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    PLUS            reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    MINUS           reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    TIMES           reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    DIVIDE          reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)
    COMMA           reduce using rule 54 (sexp -> NEW INT LBRACK exp RBRACK .)


state 141

    (61) pexp -> pexp POINT ID LPAREN expopcionalmetodo . RPAREN

    RPAREN          shift and go to state 146


state 142

    (62) pexp -> pexp POINT ID LPAREN RPAREN .

    POINT           reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LBRACK          reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    SEMI            reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    RPAREN          reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    RBRACK          reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    IF              reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LBRACE          reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    WHILE           reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    SOUTPL          reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    ID              reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LAND            reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LOR             reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    LT              reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    EQ              reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    NE              reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    PLUS            reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    MINUS           reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    TIMES           reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)
    COMMA           reduce using rule 62 (pexp -> pexp POINT ID LPAREN RPAREN .)


state 143

    (64) expopcionalmetodo -> exps .

    RPAREN          reduce using rule 64 (expopcionalmetodo -> exps .)


state 144

    (65) exps -> exp . expslist
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp
    (66) expslist -> . expslist COMMA exp
    (67) expslist -> .

    LAND            shift and go to state 94
    LOR             shift and go to state 95
    RPAREN          reduce using rule 67 (expslist -> .)
    COMMA           reduce using rule 67 (expslist -> .)

    expslist                       shift and go to state 147

state 145

    (31) otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .

    RBRACE          reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    RETURN          reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    IF              reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    LBRACE          reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    WHILE           reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    SOUTPL          reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    ID              reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)
    ELSE            reduce using rule 31 (otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI .)


state 146

    (61) pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .

    POINT           reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LBRACK          reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    SEMI            reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    RPAREN          reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    RBRACK          reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    IF              reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LBRACE          reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    WHILE           reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    SOUTPL          reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    ID              reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LAND            reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LOR             reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    LT              reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    EQ              reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    NE              reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    PLUS            reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    MINUS           reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    TIMES           reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    DIVIDE          reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)
    COMMA           reduce using rule 61 (pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN .)


state 147

    (65) exps -> exp expslist .
    (66) expslist -> expslist . COMMA exp

    RPAREN          reduce using rule 65 (exps -> exp expslist .)
    COMMA           shift and go to state 148


state 148

    (66) expslist -> expslist COMMA . exp
    (35) exp -> . exp LAND rexp
    (36) exp -> . exp LOR rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp LT aexp
    (39) rexp -> . rexp EQ aexp
    (40) rexp -> . rexp NE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp PLUS mexp
    (43) aexp -> . aexp MINUS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp TIMES sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . LNOT sexp
    (49) sexp -> . MINUS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMBER
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT LBRACK exp RBRACK
    (55) sexp -> . pexp POINT LENGTH
    (56) sexp -> . pexp LBRACK exp RBRACK
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID LPAREN RPAREN
    (61) pexp -> . pexp POINT ID LPAREN expopcionalmetodo RPAREN
    (62) pexp -> . pexp POINT ID LPAREN RPAREN
    (63) pexp -> . pexp POINT ID

    LNOT            shift and go to state 79
    MINUS           shift and go to state 77
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    NUMBER          shift and go to state 82
    NULL            shift and go to state 83
    NEW             shift and go to state 84
    ID              shift and go to state 72
    THIS            shift and go to state 86

    exp                            shift and go to state 149
    rexp                           shift and go to state 74
    aexp                           shift and go to state 75
    mexp                           shift and go to state 76
    sexp                           shift and go to state 78
    pexp                           shift and go to state 85

state 149

    (66) expslist -> expslist COMMA exp .
    (35) exp -> exp . LAND rexp
    (36) exp -> exp . LOR rexp

    RPAREN          reduce using rule 66 (expslist -> expslist COMMA exp .)
    COMMA           reduce using rule 66 (expslist -> expslist COMMA exp .)
    LAND            shift and go to state 94
    LOR             shift and go to state 95

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 51 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 110 resolved as shift
