
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'SLR'

_lr_signature = 'ASSIGN BOOL CLASS COLON COMMA DIVIDE ELSE EQ EXTENDS FALSE GE GT ID IF INT LAND LBRACE LBRACK LE LENGTH LNOT LOR LPAREN LT MAIN MINUS NE NEW NULL NUMBER PLUS POINT PUBLIC RBRACE RBRACK RETURN RPAREN SEMI SOUTPL STATIC STRING THIS TIMES TRUE VOID WHILEprog : main multiclassmulticlass : multiclass classe\n                  |  main : CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACEclasse : CLASS ID extends LBRACE variaveis metodos RBRACEextends : EXTENDS ID\n              |  variaveis : variaveis var\n                 | metodos : metodos metodo\n               | var : tipo IDmetodo : PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE paramsopcional : params\n                      | cmds : cmds cmd\n            | params : tipo ID listaparamsextralistaparamsextra : listaparamsextra COMMA tipo ID\n                        | tipo : INT LBRACK RBRACK\n            | BOOL\n            | INT\n            | ID cmd :  condstmt\n          | otherstmt otherstmt : LBRACE cmds RBRACE\n          | WHILE LPAREN exp RPAREN cmd\n          | SOUTPL LPAREN exp RPAREN SEMI\n          | ID ASSIGN exp SEMI\n          | ID LBRACK exp RBRACK ASSIGN exp SEMI condstmt : match\n                | unmatchmatch :  IF LPAREN exp RPAREN match ELSE match\n             |  otherstmtunmatch : IF LPAREN exp RPAREN unmatch\n               | IF LPAREN exp RPAREN match ELSE unmatch\n               | otherstmtexp : exp LAND rexp\n           | exp LOR rexp\n           | rexp rexp : rexp LT aexp\n            | rexp EQ aexp\n            | rexp NE aexp\n            | aexpaexp : aexp PLUS mexp\n            | aexp MINUS mexp\n            | mexpmexp : mexp TIMES sexp\n            | mexp DIVIDE sexp\n            | sexpsexp : LNOT sexp\n            | MINUS sexp\n            | TRUE\n            | FALSE\n            | NUMBER\n            | NULL\n            | NEW INT LBRACK exp RBRACK\n            | pexp POINT LENGTH\n            | pexp LBRACK exp RBRACK\n            | pexp pexp : ID\n            | THIS\n            | NEW ID LPAREN RPAREN\n            | pexp POINT ID\n            | pexp POINT ID LPAREN expopcionalmetodo RPAREN\n            | pexp POINT ID LPAREN RPAREN expopcionalmetodo : exps exps : exp expslistexpslist : expslist COMMA exp\n                |  '
    
_lr_action_items = {'CLASS':([0,2,4,6,26,67,],[3,-3,7,-2,-5,-4,]),'$end':([1,2,4,6,26,67,],[0,-3,-1,-2,-5,-4,]),'ID':([3,7,12,14,17,19,21,22,23,24,28,29,32,33,36,37,39,45,47,48,49,50,52,54,55,56,57,58,62,63,64,65,66,68,69,70,72,78,80,85,89,94,95,96,97,98,99,100,101,102,103,108,109,111,113,124,129,130,131,133,134,138,141,147,148,149,152,],[5,9,15,-9,19,-24,-8,29,-23,-22,19,-12,35,-21,38,19,43,-17,-9,51,19,19,-17,-16,-25,-26,-32,-33,71,51,73,73,51,73,73,73,73,73,73,107,-27,-30,73,73,73,73,73,73,73,73,73,127,73,51,51,73,73,-28,-29,-36,-35,73,51,-31,-34,-37,73,]),'LBRACE':([5,9,11,14,15,21,29,42,44,45,47,48,50,52,54,55,56,57,58,63,66,89,94,111,113,130,131,133,134,141,147,148,149,],[8,-7,14,-9,-6,-8,-12,45,47,-17,-9,52,-17,-17,-16,-25,-26,-32,-33,52,52,-27,-30,52,52,-28,-29,-36,-35,52,-31,-34,-37,]),'PUBLIC':([8,14,17,20,21,27,29,47,135,],[10,-9,-11,28,-8,-10,-12,-9,-13,]),'EXTENDS':([9,],[12,]),'STATIC':([10,],[13,]),'VOID':([13,],[16,]),'RBRACE':([14,17,20,21,27,29,45,47,48,50,52,53,54,55,56,57,58,66,89,94,114,130,131,133,134,135,147,148,149,],[-9,-11,26,-8,-10,-12,-17,-9,53,-17,-17,67,-16,-25,-26,-32,-33,89,-27,-30,135,-28,-29,-36,-35,-13,-31,-34,-37,]),'INT':([14,17,21,28,29,37,47,49,50,85,],[-9,23,-8,23,-12,23,-9,23,23,106,]),'BOOL':([14,17,21,28,29,37,47,49,50,],[-9,24,-8,24,-12,24,-9,24,24,]),'WHILE':([14,21,29,45,47,48,50,52,54,55,56,57,58,63,66,89,94,111,113,130,131,133,134,141,147,148,149,],[-9,-8,-12,-17,-9,59,-17,-17,-16,-25,-26,-32,-33,59,59,-27,-30,59,59,-28,-29,-36,-35,59,-31,-34,-37,]),'SOUTPL':([14,21,29,45,47,48,50,52,54,55,56,57,58,63,66,89,94,111,113,130,131,133,134,141,147,148,149,],[-9,-8,-12,-17,-9,60,-17,-17,-16,-25,-26,-32,-33,60,60,-27,-30,60,60,-28,-29,-36,-35,60,-31,-34,-37,]),'IF':([14,21,29,45,47,48,50,52,54,55,56,57,58,63,66,89,94,111,113,130,131,133,134,141,147,148,149,],[-9,-8,-12,-17,-9,61,-17,-17,-16,-25,-26,-32,-33,61,61,-27,-30,61,61,-28,-29,-36,-35,61,-31,-34,-37,]),'RETURN':([14,21,29,45,47,50,52,54,55,56,57,58,63,89,94,130,131,133,134,147,148,149,],[-9,-8,-12,-17,-9,-17,-17,-16,-25,-26,-32,-33,72,-27,-30,-28,-29,-36,-35,-31,-34,-37,]),'MAIN':([16,],[18,]),'LPAREN':([18,35,59,60,61,107,127,],[25,37,68,69,70,125,138,]),'LBRACK':([23,31,51,73,86,87,106,127,137,144,150,],[30,34,65,-62,109,-63,124,-65,-64,-67,-66,]),'STRING':([25,],[31,]),'RBRACK':([30,34,73,75,76,77,79,81,82,83,84,86,87,88,104,105,115,116,117,118,119,120,121,122,123,126,127,128,136,137,139,142,144,150,],[33,36,-62,-41,-45,-48,-51,-54,-55,-56,-57,-61,-63,110,-53,-52,-39,-40,-42,-43,-44,-46,-47,-49,-50,-59,-65,139,142,-64,-60,-58,-67,-66,]),'RPAREN':([37,38,40,41,43,46,71,73,75,76,77,79,81,82,83,84,86,87,90,91,92,104,105,115,116,117,118,119,120,121,122,123,125,126,127,137,138,139,142,143,144,145,146,150,151,153,],[-15,42,44,-14,-20,-18,-19,-62,-41,-45,-48,-51,-54,-55,-56,-57,-61,-63,111,112,113,-53,-52,-39,-40,-42,-43,-44,-46,-47,-49,-50,137,-59,-65,-64,144,-60,-58,150,-67,-68,-71,-66,-69,-70,]),'COMMA':([43,46,71,73,75,76,77,79,81,82,83,84,86,87,104,105,115,116,117,118,119,120,121,122,123,126,127,137,139,142,144,146,150,151,153,],[-20,49,-19,-62,-41,-45,-48,-51,-54,-55,-56,-57,-61,-63,-53,-52,-39,-40,-42,-43,-44,-46,-47,-49,-50,-59,-65,-64,-60,-58,-67,-71,-66,152,-70,]),'ASSIGN':([51,110,],[64,129,]),'ELSE':([55,56,57,58,89,94,130,131,132,133,134,147,148,149,],[-25,-26,-32,-33,-27,-30,-28,-29,141,-36,-35,-31,-34,-37,]),'LNOT':([64,65,68,69,70,72,78,80,95,96,97,98,99,100,101,102,103,109,124,129,138,152,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'MINUS':([64,65,68,69,70,72,73,76,77,78,79,80,81,82,83,84,86,87,95,96,97,98,99,100,101,102,103,104,105,109,117,118,119,120,121,122,123,124,126,127,129,137,138,139,142,144,150,152,],[78,78,78,78,78,78,-62,101,-48,78,-51,78,-54,-55,-56,-57,-61,-63,78,78,78,78,78,78,78,78,78,-53,-52,78,101,101,101,-46,-47,-49,-50,78,-59,-65,78,-64,78,-60,-58,-67,-66,78,]),'TRUE':([64,65,68,69,70,72,78,80,95,96,97,98,99,100,101,102,103,109,124,129,138,152,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'FALSE':([64,65,68,69,70,72,78,80,95,96,97,98,99,100,101,102,103,109,124,129,138,152,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'NUMBER':([64,65,68,69,70,72,78,80,95,96,97,98,99,100,101,102,103,109,124,129,138,152,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'NULL':([64,65,68,69,70,72,78,80,95,96,97,98,99,100,101,102,103,109,124,129,138,152,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'NEW':([64,65,68,69,70,72,78,80,95,96,97,98,99,100,101,102,103,109,124,129,138,152,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'THIS':([64,65,68,69,70,72,78,80,95,96,97,98,99,100,101,102,103,109,124,129,138,152,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'POINT':([73,86,87,127,137,144,150,],[-62,108,-63,-65,-64,-67,-66,]),'SEMI':([73,74,75,76,77,79,81,82,83,84,86,87,93,104,105,112,115,116,117,118,119,120,121,122,123,126,127,137,139,140,142,144,150,],[-62,94,-41,-45,-48,-51,-54,-55,-56,-57,-61,-63,114,-53,-52,131,-39,-40,-42,-43,-44,-46,-47,-49,-50,-59,-65,-64,-60,147,-58,-67,-66,]),'LAND':([73,74,75,76,77,79,81,82,83,84,86,87,88,90,91,92,93,104,105,115,116,117,118,119,120,121,122,123,126,127,128,136,137,139,140,142,144,146,150,153,],[-62,95,-41,-45,-48,-51,-54,-55,-56,-57,-61,-63,95,95,95,95,95,-53,-52,-39,-40,-42,-43,-44,-46,-47,-49,-50,-59,-65,95,95,-64,-60,95,-58,-67,95,-66,95,]),'LOR':([73,74,75,76,77,79,81,82,83,84,86,87,88,90,91,92,93,104,105,115,116,117,118,119,120,121,122,123,126,127,128,136,137,139,140,142,144,146,150,153,],[-62,96,-41,-45,-48,-51,-54,-55,-56,-57,-61,-63,96,96,96,96,96,-53,-52,-39,-40,-42,-43,-44,-46,-47,-49,-50,-59,-65,96,96,-64,-60,96,-58,-67,96,-66,96,]),'LT':([73,75,76,77,79,81,82,83,84,86,87,104,105,115,116,117,118,119,120,121,122,123,126,127,137,139,142,144,150,],[-62,97,-45,-48,-51,-54,-55,-56,-57,-61,-63,-53,-52,97,97,-42,-43,-44,-46,-47,-49,-50,-59,-65,-64,-60,-58,-67,-66,]),'EQ':([73,75,76,77,79,81,82,83,84,86,87,104,105,115,116,117,118,119,120,121,122,123,126,127,137,139,142,144,150,],[-62,98,-45,-48,-51,-54,-55,-56,-57,-61,-63,-53,-52,98,98,-42,-43,-44,-46,-47,-49,-50,-59,-65,-64,-60,-58,-67,-66,]),'NE':([73,75,76,77,79,81,82,83,84,86,87,104,105,115,116,117,118,119,120,121,122,123,126,127,137,139,142,144,150,],[-62,99,-45,-48,-51,-54,-55,-56,-57,-61,-63,-53,-52,99,99,-42,-43,-44,-46,-47,-49,-50,-59,-65,-64,-60,-58,-67,-66,]),'PLUS':([73,76,77,79,81,82,83,84,86,87,104,105,117,118,119,120,121,122,123,126,127,137,139,142,144,150,],[-62,100,-48,-51,-54,-55,-56,-57,-61,-63,-53,-52,100,100,100,-46,-47,-49,-50,-59,-65,-64,-60,-58,-67,-66,]),'TIMES':([73,77,79,81,82,83,84,86,87,104,105,120,121,122,123,126,127,137,139,142,144,150,],[-62,102,-51,-54,-55,-56,-57,-61,-63,-53,-52,102,102,-49,-50,-59,-65,-64,-60,-58,-67,-66,]),'DIVIDE':([73,77,79,81,82,83,84,86,87,104,105,120,121,122,123,126,127,137,139,142,144,150,],[-62,103,-51,-54,-55,-56,-57,-61,-63,-53,-52,103,103,-49,-50,-59,-65,-64,-60,-58,-67,-66,]),'LENGTH':([108,],[126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'main':([0,],[2,]),'multiclass':([2,],[4,]),'classe':([4,],[6,]),'extends':([9,],[11,]),'variaveis':([14,47,],[17,50,]),'metodos':([17,],[20,]),'var':([17,50,],[21,21,]),'tipo':([17,28,37,49,50,],[22,32,39,62,22,]),'metodo':([20,],[27,]),'paramsopcional':([37,],[40,]),'params':([37,],[41,]),'listaparamsextra':([43,],[46,]),'cmds':([45,50,52,],[48,63,66,]),'cmd':([48,63,66,111,],[54,54,54,130,]),'condstmt':([48,63,66,111,],[55,55,55,55,]),'otherstmt':([48,63,66,111,113,141,],[56,56,56,56,134,134,]),'match':([48,63,66,111,113,141,],[57,57,57,57,132,148,]),'unmatch':([48,63,66,111,113,141,],[58,58,58,58,133,149,]),'exp':([64,65,68,69,70,72,109,124,129,138,152,],[74,88,90,91,92,93,128,136,140,146,153,]),'rexp':([64,65,68,69,70,72,95,96,109,124,129,138,152,],[75,75,75,75,75,75,115,116,75,75,75,75,75,]),'aexp':([64,65,68,69,70,72,95,96,97,98,99,109,124,129,138,152,],[76,76,76,76,76,76,76,76,117,118,119,76,76,76,76,76,]),'mexp':([64,65,68,69,70,72,95,96,97,98,99,100,101,109,124,129,138,152,],[77,77,77,77,77,77,77,77,77,77,77,120,121,77,77,77,77,77,]),'sexp':([64,65,68,69,70,72,78,80,95,96,97,98,99,100,101,102,103,109,124,129,138,152,],[79,79,79,79,79,79,104,105,79,79,79,79,79,79,79,122,123,79,79,79,79,79,]),'pexp':([64,65,68,69,70,72,78,80,95,96,97,98,99,100,101,102,103,109,124,129,138,152,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'expopcionalmetodo':([138,],[143,]),'exps':([138,],[145,]),'expslist':([146,],[151,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> main multiclass','prog',2,'p_prog','minijavaPARSER.py',13),
  ('multiclass -> multiclass classe','multiclass',2,'p_multiclass','minijavaPARSER.py',17),
  ('multiclass -> <empty>','multiclass',0,'p_multiclass','minijavaPARSER.py',18),
  ('main -> CLASS ID LBRACE PUBLIC STATIC VOID MAIN LPAREN STRING LBRACK RBRACK ID RPAREN LBRACE cmds RBRACE RBRACE','main',17,'p_main','minijavaPARSER.py',23),
  ('classe -> CLASS ID extends LBRACE variaveis metodos RBRACE','classe',7,'p_classe','minijavaPARSER.py',28),
  ('extends -> EXTENDS ID','extends',2,'p_extends','minijavaPARSER.py',32),
  ('extends -> <empty>','extends',0,'p_extends','minijavaPARSER.py',33),
  ('variaveis -> variaveis var','variaveis',2,'p_variaveis','minijavaPARSER.py',39),
  ('variaveis -> <empty>','variaveis',0,'p_variaveis','minijavaPARSER.py',40),
  ('metodos -> metodos metodo','metodos',2,'p_metodos','minijavaPARSER.py',45),
  ('metodos -> <empty>','metodos',0,'p_metodos','minijavaPARSER.py',46),
  ('var -> tipo ID','var',2,'p_var','minijavaPARSER.py',51),
  ('metodo -> PUBLIC tipo ID LPAREN paramsopcional RPAREN LBRACE variaveis cmds RETURN exp SEMI RBRACE','metodo',13,'p_metodo','minijavaPARSER.py',55),
  ('paramsopcional -> params','paramsopcional',1,'p_paramsopcional','minijavaPARSER.py',60),
  ('paramsopcional -> <empty>','paramsopcional',0,'p_paramsopcional','minijavaPARSER.py',61),
  ('cmds -> cmds cmd','cmds',2,'p_cmds','minijavaPARSER.py',65),
  ('cmds -> <empty>','cmds',0,'p_cmds','minijavaPARSER.py',66),
  ('params -> tipo ID listaparamsextra','params',3,'p_params','minijavaPARSER.py',71),
  ('listaparamsextra -> listaparamsextra COMMA tipo ID','listaparamsextra',4,'p_listaparamsextra','minijavaPARSER.py',76),
  ('listaparamsextra -> <empty>','listaparamsextra',0,'p_listaparamsextra','minijavaPARSER.py',77),
  ('tipo -> INT LBRACK RBRACK','tipo',3,'p_tipo','minijavaPARSER.py',82),
  ('tipo -> BOOL','tipo',1,'p_tipo','minijavaPARSER.py',83),
  ('tipo -> INT','tipo',1,'p_tipo','minijavaPARSER.py',84),
  ('tipo -> ID','tipo',1,'p_tipo','minijavaPARSER.py',85),
  ('cmd -> condstmt','cmd',1,'p_cmd','minijavaPARSER.py',89),
  ('cmd -> otherstmt','cmd',1,'p_cmd','minijavaPARSER.py',90),
  ('otherstmt -> LBRACE cmds RBRACE','otherstmt',3,'p_otherstmt','minijavaPARSER.py',97),
  ('otherstmt -> WHILE LPAREN exp RPAREN cmd','otherstmt',5,'p_otherstmt','minijavaPARSER.py',98),
  ('otherstmt -> SOUTPL LPAREN exp RPAREN SEMI','otherstmt',5,'p_otherstmt','minijavaPARSER.py',99),
  ('otherstmt -> ID ASSIGN exp SEMI','otherstmt',4,'p_otherstmt','minijavaPARSER.py',100),
  ('otherstmt -> ID LBRACK exp RBRACK ASSIGN exp SEMI','otherstmt',7,'p_otherstmt','minijavaPARSER.py',101),
  ('condstmt -> match','condstmt',1,'p_condstmt','minijavaPARSER.py',124),
  ('condstmt -> unmatch','condstmt',1,'p_condstmt','minijavaPARSER.py',125),
  ('match -> IF LPAREN exp RPAREN match ELSE match','match',7,'p_match','minijavaPARSER.py',129),
  ('match -> otherstmt','match',1,'p_match','minijavaPARSER.py',130),
  ('unmatch -> IF LPAREN exp RPAREN unmatch','unmatch',5,'p_unmatch','minijavaPARSER.py',141),
  ('unmatch -> IF LPAREN exp RPAREN match ELSE unmatch','unmatch',7,'p_unmatch','minijavaPARSER.py',142),
  ('unmatch -> otherstmt','unmatch',1,'p_unmatch','minijavaPARSER.py',143),
  ('exp -> exp LAND rexp','exp',3,'p_exp','minijavaPARSER.py',152),
  ('exp -> exp LOR rexp','exp',3,'p_exp','minijavaPARSER.py',153),
  ('exp -> rexp','exp',1,'p_exp','minijavaPARSER.py',154),
  ('rexp -> rexp LT aexp','rexp',3,'p_rexp','minijavaPARSER.py',161),
  ('rexp -> rexp EQ aexp','rexp',3,'p_rexp','minijavaPARSER.py',162),
  ('rexp -> rexp NE aexp','rexp',3,'p_rexp','minijavaPARSER.py',163),
  ('rexp -> aexp','rexp',1,'p_rexp','minijavaPARSER.py',164),
  ('aexp -> aexp PLUS mexp','aexp',3,'p_aexp','minijavaPARSER.py',171),
  ('aexp -> aexp MINUS mexp','aexp',3,'p_aexp','minijavaPARSER.py',172),
  ('aexp -> mexp','aexp',1,'p_aexp','minijavaPARSER.py',173),
  ('mexp -> mexp TIMES sexp','mexp',3,'p_mexp','minijavaPARSER.py',180),
  ('mexp -> mexp DIVIDE sexp','mexp',3,'p_mexp','minijavaPARSER.py',181),
  ('mexp -> sexp','mexp',1,'p_mexp','minijavaPARSER.py',182),
  ('sexp -> LNOT sexp','sexp',2,'p_sexp','minijavaPARSER.py',189),
  ('sexp -> MINUS sexp','sexp',2,'p_sexp','minijavaPARSER.py',190),
  ('sexp -> TRUE','sexp',1,'p_sexp','minijavaPARSER.py',191),
  ('sexp -> FALSE','sexp',1,'p_sexp','minijavaPARSER.py',192),
  ('sexp -> NUMBER','sexp',1,'p_sexp','minijavaPARSER.py',193),
  ('sexp -> NULL','sexp',1,'p_sexp','minijavaPARSER.py',194),
  ('sexp -> NEW INT LBRACK exp RBRACK','sexp',5,'p_sexp','minijavaPARSER.py',195),
  ('sexp -> pexp POINT LENGTH','sexp',3,'p_sexp','minijavaPARSER.py',196),
  ('sexp -> pexp LBRACK exp RBRACK','sexp',4,'p_sexp','minijavaPARSER.py',197),
  ('sexp -> pexp','sexp',1,'p_sexp','minijavaPARSER.py',198),
  ('pexp -> ID','pexp',1,'p_pexp','minijavaPARSER.py',216),
  ('pexp -> THIS','pexp',1,'p_pexp','minijavaPARSER.py',217),
  ('pexp -> NEW ID LPAREN RPAREN','pexp',4,'p_pexp','minijavaPARSER.py',218),
  ('pexp -> pexp POINT ID','pexp',3,'p_pexp','minijavaPARSER.py',219),
  ('pexp -> pexp POINT ID LPAREN expopcionalmetodo RPAREN','pexp',6,'p_pexp','minijavaPARSER.py',220),
  ('pexp -> pexp POINT ID LPAREN RPAREN','pexp',5,'p_pexp','minijavaPARSER.py',221),
  ('expopcionalmetodo -> exps','expopcionalmetodo',1,'p_expopcionalmetodo','minijavaPARSER.py',236),
  ('exps -> exp expslist','exps',2,'p_exps','minijavaPARSER.py',241),
  ('expslist -> expslist COMMA exp','expslist',3,'p_expslist','minijavaPARSER.py',246),
  ('expslist -> <empty>','expslist',0,'p_expslist','minijavaPARSER.py',247),
]
